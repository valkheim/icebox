#pragma once

#include "icebox/nt/nt.hpp"
#include "icebox/types.hpp"
#include "tracer.hpp"

#include <array>
#include <functional>

namespace core { struct Core; }

namespace nt
{
    using on_NtAcceptConnectPort_fn                                = std::function<void(PHANDLE, PVOID, PPORT_MESSAGE, BOOLEAN, PPORT_VIEW, PREMOTE_PORT_VIEW)>;
    using on_NtAddDriverEntry_fn                                   = std::function<void(PEFI_DRIVER_ENTRY, PULONG)>;
    using on_NtAdjustGroupsToken_fn                                = std::function<void(HANDLE, BOOLEAN, PTOKEN_GROUPS, ULONG, PTOKEN_GROUPS, PULONG)>;
    using on_NtAdjustPrivilegesToken_fn                            = std::function<void(HANDLE, BOOLEAN, PTOKEN_PRIVILEGES, ULONG, PTOKEN_PRIVILEGES, PULONG)>;
    using on_NtAlertThread_fn                                      = std::function<void(HANDLE)>;
    using on_NtAllocateReserveObject_fn                            = std::function<void(PHANDLE, POBJECT_ATTRIBUTES, MEMORY_RESERVE_TYPE)>;
    using on_NtAlpcCancelMessage_fn                                = std::function<void(HANDLE, ULONG, PALPC_CONTEXT_ATTR)>;
    using on_NtAlpcConnectPort_fn                                  = std::function<void(PHANDLE, PUNICODE_STRING, POBJECT_ATTRIBUTES, PALPC_PORT_ATTRIBUTES, ULONG, PSID, PPORT_MESSAGE, PULONG, PALPC_MESSAGE_ATTRIBUTES, PALPC_MESSAGE_ATTRIBUTES, PLARGE_INTEGER)>;
    using on_NtAlpcCreatePort_fn                                   = std::function<void(PHANDLE, POBJECT_ATTRIBUTES, PALPC_PORT_ATTRIBUTES)>;
    using on_NtAlpcCreateSectionView_fn                            = std::function<void(HANDLE, ULONG, PALPC_DATA_VIEW_ATTR)>;
    using on_NtAlpcCreateSecurityContext_fn                        = std::function<void(HANDLE, ULONG, PALPC_SECURITY_ATTR)>;
    using on_NtAlpcDeletePortSection_fn                            = std::function<void(HANDLE, ULONG, ALPC_HANDLE)>;
    using on_NtAlpcDeleteResourceReserve_fn                        = std::function<void(HANDLE, ULONG, ALPC_HANDLE)>;
    using on_NtAlpcDisconnectPort_fn                               = std::function<void(HANDLE, ULONG)>;
    using on_NtAlpcImpersonateClientOfPort_fn                      = std::function<void(HANDLE, PPORT_MESSAGE, PVOID)>;
    using on_NtAlpcOpenSenderProcess_fn                            = std::function<void(PHANDLE, HANDLE, PPORT_MESSAGE, ULONG, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtAlpcOpenSenderThread_fn                             = std::function<void(PHANDLE, HANDLE, PPORT_MESSAGE, ULONG, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtAlpcRevokeSecurityContext_fn                        = std::function<void(HANDLE, ULONG, ALPC_HANDLE)>;
    using on_NtAlpcSetInformation_fn                               = std::function<void(HANDLE, ALPC_PORT_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_NtApphelpCacheControl_fn                              = std::function<void(APPHELPCOMMAND, PVOID)>;
    using on_NtAssignProcessToJobObject_fn                         = std::function<void(HANDLE, HANDLE)>;
    using on_NtCancelTimer_fn                                      = std::function<void(HANDLE, PBOOLEAN)>;
    using on_NtClearEvent_fn                                       = std::function<void(HANDLE)>;
    using on_NtClose_fn                                            = std::function<void(HANDLE)>;
    using on_NtCommitComplete_fn                                   = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_NtCompactKeys_fn                                      = std::function<void(ULONG, HANDLE)>;
    using on_NtCompleteConnectPort_fn                              = std::function<void(HANDLE)>;
    using on_NtCompressKey_fn                                      = std::function<void(HANDLE)>;
    using on_NtCreateDebugObject_fn                                = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG)>;
    using on_NtCreateDirectoryObject_fn                            = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtCreateEnlistment_fn                                 = std::function<void(PHANDLE, ACCESS_MASK, HANDLE, HANDLE, POBJECT_ATTRIBUTES, ULONG, NOTIFICATION_MASK, PVOID)>;
    using on_NtCreateIoCompletion_fn                               = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG)>;
    using on_NtCreateMutant_fn                                     = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, BOOLEAN)>;
    using on_NtCreateNamedPipeFile_fn                              = std::function<void(PHANDLE, ULONG, POBJECT_ATTRIBUTES, PIO_STATUS_BLOCK, ULONG, ULONG, ULONG, ULONG, ULONG, ULONG, ULONG, ULONG, ULONG, PLARGE_INTEGER)>;
    using on_NtCreatePagingFile_fn                                 = std::function<void(PUNICODE_STRING, PLARGE_INTEGER, PLARGE_INTEGER, ULONG)>;
    using on_NtCreateProcess_fn                                    = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, BOOLEAN, HANDLE, HANDLE, HANDLE)>;
    using on_NtCreateResourceManager_fn                            = std::function<void(PHANDLE, ACCESS_MASK, HANDLE, LPGUID, POBJECT_ATTRIBUTES, ULONG, PUNICODE_STRING)>;
    using on_NtCreateSection_fn                                    = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PLARGE_INTEGER, ULONG, ULONG, HANDLE)>;
    using on_NtCreateSemaphore_fn                                  = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, LONG, LONG)>;
    using on_NtCreateThreadEx_fn                                   = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, PVOID, PVOID, ULONG, ULONG_PTR, SIZE_T, SIZE_T, PPS_ATTRIBUTE_LIST)>;
    using on_NtCreateThread_fn                                     = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, PCLIENT_ID, PCONTEXT, PINITIAL_TEB, BOOLEAN)>;
    using on_NtCreateToken_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, TOKEN_TYPE, PLUID, PLARGE_INTEGER, PTOKEN_USER, PTOKEN_GROUPS, PTOKEN_PRIVILEGES, PTOKEN_OWNER, PTOKEN_PRIMARY_GROUP, PTOKEN_DEFAULT_DACL, PTOKEN_SOURCE)>;
    using on_NtCreateTransaction_fn                                = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, LPGUID, HANDLE, ULONG, ULONG, ULONG, PLARGE_INTEGER, PUNICODE_STRING)>;
    using on_NtCreateUserProcess_fn                                = std::function<void(PHANDLE, PHANDLE, ACCESS_MASK, ACCESS_MASK, POBJECT_ATTRIBUTES, POBJECT_ATTRIBUTES, ULONG, ULONG, PRTL_USER_PROCESS_PARAMETERS, PPROCESS_CREATE_INFO, PPROCESS_ATTRIBUTE_LIST)>;
    using on_NtCreateWaitablePort_fn                               = std::function<void(PHANDLE, POBJECT_ATTRIBUTES, ULONG, ULONG, ULONG)>;
    using on_NtCreateWorkerFactory_fn                              = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, HANDLE, PVOID, PVOID, ULONG, SIZE_T, SIZE_T)>;
    using on_NtDebugActiveProcess_fn                               = std::function<void(HANDLE, HANDLE)>;
    using on_NtDebugContinue_fn                                    = std::function<void(HANDLE, PCLIENT_ID, NTSTATUS)>;
    using on_NtDeleteAtom_fn                                       = std::function<void(RTL_ATOM)>;
    using on_NtDeleteBootEntry_fn                                  = std::function<void(ULONG)>;
    using on_NtDeleteFile_fn                                       = std::function<void(POBJECT_ATTRIBUTES)>;
    using on_NtDeleteKey_fn                                        = std::function<void(HANDLE)>;
    using on_NtDeletePrivateNamespace_fn                           = std::function<void(HANDLE)>;
    using on_NtDeviceIoControlFile_fn                              = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, ULONG, PVOID, ULONG, PVOID, ULONG)>;
    using on_NtDisableLastKnownGood_fn                             = std::function<void()>;
    using on_NtDrawText_fn                                         = std::function<void(PUNICODE_STRING)>;
    using on_NtDuplicateToken_fn                                   = std::function<void(HANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, BOOLEAN, TOKEN_TYPE, PHANDLE)>;
    using on_NtEnableLastKnownGood_fn                              = std::function<void()>;
    using on_NtEnumerateBootEntries_fn                             = std::function<void(PVOID, PULONG)>;
    using on_NtEnumerateKey_fn                                     = std::function<void(HANDLE, ULONG, KEY_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtEnumerateSystemEnvironmentValuesEx_fn               = std::function<void(ULONG, PVOID, PULONG)>;
    using on_NtEnumerateTransactionObject_fn                       = std::function<void(HANDLE, KTMOBJECT_TYPE, PKTMOBJECT_CURSOR, ULONG, PULONG)>;
    using on_NtExtendSection_fn                                    = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_NtFlushInstallUILanguage_fn                           = std::function<void(LANGID, ULONG)>;
    using on_NtFlushInstructionCache_fn                            = std::function<void(HANDLE, PVOID, SIZE_T)>;
    using on_NtFlushWriteBuffer_fn                                 = std::function<void()>;
    using on_NtFreezeRegistry_fn                                   = std::function<void(ULONG)>;
    using on_NtGetNextProcess_fn                                   = std::function<void(HANDLE, ACCESS_MASK, ULONG, ULONG, PHANDLE)>;
    using on_NtGetNotificationResourceManager_fn                   = std::function<void(HANDLE, PTRANSACTION_NOTIFICATION, ULONG, PLARGE_INTEGER, PULONG, ULONG, ULONG_PTR)>;
    using on_NtInitializeNlsFiles_fn                               = std::function<void(PVOID, PLCID, PLARGE_INTEGER)>;
    using on_NtInitializeRegistry_fn                               = std::function<void(USHORT)>;
    using on_NtInitiatePowerAction_fn                              = std::function<void(POWER_ACTION, SYSTEM_POWER_STATE, ULONG, BOOLEAN)>;
    using on_NtIsProcessInJob_fn                                   = std::function<void(HANDLE, HANDLE)>;
    using on_NtIsUILanguageComitted_fn                             = std::function<void()>;
    using on_NtListenPort_fn                                       = std::function<void(HANDLE, PPORT_MESSAGE)>;
    using on_NtLoadKeyEx_fn                                        = std::function<void(POBJECT_ATTRIBUTES, POBJECT_ATTRIBUTES, ULONG, HANDLE)>;
    using on_NtLoadKey_fn                                          = std::function<void(POBJECT_ATTRIBUTES, POBJECT_ATTRIBUTES)>;
    using on_NtLockProductActivationKeys_fn                        = std::function<void(ULONG, ULONG)>;
    using on_NtLockVirtualMemory_fn                                = std::function<void(HANDLE, PVOID, PSIZE_T, ULONG)>;
    using on_NtMakePermanentObject_fn                              = std::function<void(HANDLE)>;
    using on_NtMakeTemporaryObject_fn                              = std::function<void(HANDLE)>;
    using on_NtMapCMFModule_fn                                     = std::function<void(ULONG, ULONG, PULONG, PULONG, PULONG, PVOID)>;
    using on_NtMapUserPhysicalPages_fn                             = std::function<void(PVOID, ULONG_PTR, PULONG_PTR)>;
    using on_NtModifyBootEntry_fn                                  = std::function<void(PBOOT_ENTRY)>;
    using on_NtNotifyChangeDirectoryFile_fn                        = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PVOID, ULONG, ULONG, BOOLEAN)>;
    using on_NtNotifyChangeMultipleKeys_fn                         = std::function<void(HANDLE, ULONG, POBJECT_ATTRIBUTES, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, ULONG, BOOLEAN, PVOID, ULONG, BOOLEAN)>;
    using on_NtNotifyChangeSession_fn                              = std::function<void(HANDLE, ULONG, PVOID, ULONG, IO_SESSION_STATE, IO_SESSION_STATE, PVOID, ULONG)>;
    using on_NtOpenEnlistment_fn                                   = std::function<void(PHANDLE, ACCESS_MASK, HANDLE, LPGUID, POBJECT_ATTRIBUTES)>;
    using on_NtOpenEvent_fn                                        = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenFile_fn                                         = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PIO_STATUS_BLOCK, ULONG, ULONG)>;
    using on_NtOpenIoCompletion_fn                                 = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenJobObject_fn                                    = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenKeyEx_fn                                        = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG)>;
    using on_NtOpenKey_fn                                          = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenKeyedEvent_fn                                   = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenMutant_fn                                       = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenPrivateNamespace_fn                             = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PVOID)>;
    using on_NtOpenProcessTokenEx_fn                               = std::function<void(HANDLE, ACCESS_MASK, ULONG, PHANDLE)>;
    using on_NtOpenProcessToken_fn                                 = std::function<void(HANDLE, ACCESS_MASK, PHANDLE)>;
    using on_NtOpenProcess_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PCLIENT_ID)>;
    using on_NtOpenResourceManager_fn                              = std::function<void(PHANDLE, ACCESS_MASK, HANDLE, LPGUID, POBJECT_ATTRIBUTES)>;
    using on_NtOpenSection_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenThreadTokenEx_fn                                = std::function<void(HANDLE, ACCESS_MASK, BOOLEAN, ULONG, PHANDLE)>;
    using on_NtOpenThreadToken_fn                                  = std::function<void(HANDLE, ACCESS_MASK, BOOLEAN, PHANDLE)>;
    using on_NtOpenTransactionManager_fn                           = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PUNICODE_STRING, LPGUID, ULONG)>;
    using on_NtPowerInformation_fn                                 = std::function<void(POWER_INFORMATION_LEVEL, PVOID, ULONG, PVOID, ULONG)>;
    using on_NtPrePrepareEnlistment_fn                             = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_NtPrivilegeObjectAuditAlarm_fn                        = std::function<void(PUNICODE_STRING, PVOID, HANDLE, ACCESS_MASK, PPRIVILEGE_SET, BOOLEAN)>;
    using on_NtPropagationComplete_fn                              = std::function<void(HANDLE, ULONG, ULONG, PVOID)>;
    using on_NtPropagationFailed_fn                                = std::function<void(HANDLE, ULONG, NTSTATUS)>;
    using on_NtQueryBootOptions_fn                                 = std::function<void(PBOOT_OPTIONS, PULONG)>;
    using on_NtQueryDefaultLocale_fn                               = std::function<void(BOOLEAN, PLCID)>;
    using on_NtQueryDirectoryFile_fn                               = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PVOID, ULONG, FILE_INFORMATION_CLASS, BOOLEAN, PUNICODE_STRING, BOOLEAN)>;
    using on_NtQueryDriverEntryOrder_fn                            = std::function<void(PULONG, PULONG)>;
    using on_NtQueryEvent_fn                                       = std::function<void(HANDLE, EVENT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryFullAttributesFile_fn                          = std::function<void(POBJECT_ATTRIBUTES, PFILE_NETWORK_OPEN_INFORMATION)>;
    using on_NtQueryInformationAtom_fn                             = std::function<void(RTL_ATOM, ATOM_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInformationEnlistment_fn                       = std::function<void(HANDLE, ENLISTMENT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInformationFile_fn                             = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, FILE_INFORMATION_CLASS)>;
    using on_NtQueryInformationJobObject_fn                        = std::function<void(HANDLE, JOBOBJECTINFOCLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInformationPort_fn                             = std::function<void(HANDLE, PORT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInformationProcess_fn                          = std::function<void(HANDLE, PROCESSINFOCLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInformationResourceManager_fn                  = std::function<void(HANDLE, RESOURCEMANAGER_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInformationToken_fn                            = std::function<void(HANDLE, TOKEN_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInformationTransactionManager_fn               = std::function<void(HANDLE, TRANSACTIONMANAGER_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInstallUILanguage_fn                           = std::function<void(LANGID)>;
    using on_NtQueryIntervalProfile_fn                             = std::function<void(KPROFILE_SOURCE, PULONG)>;
    using on_NtQueryIoCompletion_fn                                = std::function<void(HANDLE, IO_COMPLETION_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryOpenSubKeysEx_fn                               = std::function<void(POBJECT_ATTRIBUTES, ULONG, PVOID, PULONG)>;
    using on_NtQueryOpenSubKeys_fn                                 = std::function<void(POBJECT_ATTRIBUTES, PULONG)>;
    using on_NtQueryPerformanceCounter_fn                          = std::function<void(PLARGE_INTEGER, PLARGE_INTEGER)>;
    using on_NtQueryPortInformationProcess_fn                      = std::function<void()>;
    using on_NtQueryQuotaInformationFile_fn                        = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, BOOLEAN, PVOID, ULONG, PULONG, BOOLEAN)>;
    using on_NtQuerySection_fn                                     = std::function<void(HANDLE, SECTION_INFORMATION_CLASS, PVOID, SIZE_T, PSIZE_T)>;
    using on_NtQuerySecurityObject_fn                              = std::function<void(HANDLE, SECURITY_INFORMATION, PSECURITY_DESCRIPTOR, ULONG, PULONG)>;
    using on_NtQuerySymbolicLinkObject_fn                          = std::function<void(HANDLE, PUNICODE_STRING, PULONG)>;
    using on_NtQuerySystemEnvironmentValueEx_fn                    = std::function<void(PUNICODE_STRING, LPGUID, PVOID, PULONG, PULONG)>;
    using on_NtQuerySystemEnvironmentValue_fn                      = std::function<void(PUNICODE_STRING, PWSTR, USHORT, PUSHORT)>;
    using on_NtQuerySystemInformationEx_fn                         = std::function<void(SYSTEM_INFORMATION_CLASS, PVOID, ULONG, PVOID, ULONG, PULONG)>;
    using on_NtQuerySystemInformation_fn                           = std::function<void(SYSTEM_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryValueKey_fn                                    = std::function<void(HANDLE, PUNICODE_STRING, KEY_VALUE_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueueApcThreadEx_fn                                 = std::function<void(HANDLE, HANDLE, PPS_APC_ROUTINE, PVOID, PVOID, PVOID)>;
    using on_NtQueueApcThread_fn                                   = std::function<void(HANDLE, PPS_APC_ROUTINE, PVOID, PVOID, PVOID)>;
    using on_NtRaiseHardError_fn                                   = std::function<void(NTSTATUS, ULONG, ULONG, PULONG_PTR, ULONG, PULONG)>;
    using on_NtReadFile_fn                                         = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PVOID, ULONG, PLARGE_INTEGER, PULONG)>;
    using on_NtReadRequestData_fn                                  = std::function<void(HANDLE, PPORT_MESSAGE, ULONG, PVOID, SIZE_T, PSIZE_T)>;
    using on_NtRecoverTransactionManager_fn                        = std::function<void(HANDLE)>;
    using on_NtRegisterProtocolAddressInformation_fn               = std::function<void(HANDLE, PCRM_PROTOCOL_ID, ULONG, PVOID, ULONG)>;
    using on_NtRegisterThreadTerminatePort_fn                      = std::function<void(HANDLE)>;
    using on_NtReleaseKeyedEvent_fn                                = std::function<void(HANDLE, PVOID, BOOLEAN, PLARGE_INTEGER)>;
    using on_NtReleaseWorkerFactoryWorker_fn                       = std::function<void(HANDLE)>;
    using on_NtRenameKey_fn                                        = std::function<void(HANDLE, PUNICODE_STRING)>;
    using on_NtRenameTransactionManager_fn                         = std::function<void(PUNICODE_STRING, LPGUID)>;
    using on_NtReplaceKey_fn                                       = std::function<void(POBJECT_ATTRIBUTES, HANDLE, POBJECT_ATTRIBUTES)>;
    using on_NtReplacePartitionUnit_fn                             = std::function<void(PUNICODE_STRING, PUNICODE_STRING, ULONG)>;
    using on_NtReplyPort_fn                                        = std::function<void(HANDLE, PPORT_MESSAGE)>;
    using on_NtReplyWaitReplyPort_fn                               = std::function<void(HANDLE, PPORT_MESSAGE)>;
    using on_NtRequestPort_fn                                      = std::function<void(HANDLE, PPORT_MESSAGE)>;
    using on_NtRestoreKey_fn                                       = std::function<void(HANDLE, HANDLE, ULONG)>;
    using on_NtRollbackEnlistment_fn                               = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_NtRollforwardTransactionManager_fn                    = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_NtSaveKeyEx_fn                                        = std::function<void(HANDLE, HANDLE, ULONG)>;
    using on_NtSaveKey_fn                                          = std::function<void(HANDLE, HANDLE)>;
    using on_NtSecureConnectPort_fn                                = std::function<void(PHANDLE, PUNICODE_STRING, PSECURITY_QUALITY_OF_SERVICE, PPORT_VIEW, PSID, PREMOTE_PORT_VIEW, PULONG, PVOID, PULONG)>;
    using on_NtSetBootOptions_fn                                   = std::function<void(PBOOT_OPTIONS, ULONG)>;
    using on_NtSetContextThread_fn                                 = std::function<void(HANDLE, PCONTEXT)>;
    using on_NtSetDefaultHardErrorPort_fn                          = std::function<void(HANDLE)>;
    using on_NtSetDefaultLocale_fn                                 = std::function<void(BOOLEAN, LCID)>;
    using on_NtSetDriverEntryOrder_fn                              = std::function<void(PULONG, ULONG)>;
    using on_NtSetHighEventPair_fn                                 = std::function<void(HANDLE)>;
    using on_NtSetInformationDebugObject_fn                        = std::function<void(HANDLE, DEBUGOBJECTINFOCLASS, PVOID, ULONG, PULONG)>;
    using on_NtSetInformationEnlistment_fn                         = std::function<void(HANDLE, ENLISTMENT_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_NtSetInformationObject_fn                             = std::function<void(HANDLE, OBJECT_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_NtSetInformationProcess_fn                            = std::function<void(HANDLE, PROCESSINFOCLASS, PVOID, ULONG)>;
    using on_NtSetInformationResourceManager_fn                    = std::function<void(HANDLE, RESOURCEMANAGER_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_NtSetInformationThread_fn                             = std::function<void(HANDLE, THREADINFOCLASS, PVOID, ULONG)>;
    using on_NtSetInformationToken_fn                              = std::function<void(HANDLE, TOKEN_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_NtSetInformationTransaction_fn                        = std::function<void(HANDLE, TRANSACTION_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_NtSetInformationWorkerFactory_fn                      = std::function<void(HANDLE, WORKERFACTORYINFOCLASS, PVOID, ULONG)>;
    using on_NtSetIntervalProfile_fn                               = std::function<void(ULONG, KPROFILE_SOURCE)>;
    using on_NtSetSecurityObject_fn                                = std::function<void(HANDLE, SECURITY_INFORMATION, PSECURITY_DESCRIPTOR)>;
    using on_NtSetThreadExecutionState_fn                          = std::function<void(EXECUTION_STATE, EXECUTION_STATE)>;
    using on_NtSetTimerResolution_fn                               = std::function<void(ULONG, BOOLEAN, PULONG)>;
    using on_NtSetUuidSeed_fn                                      = std::function<void(PCHAR)>;
    using on_NtSuspendThread_fn                                    = std::function<void(HANDLE, PULONG)>;
    using on_NtTerminateJobObject_fn                               = std::function<void(HANDLE, NTSTATUS)>;
    using on_NtTerminateThread_fn                                  = std::function<void(HANDLE, NTSTATUS)>;
    using on_NtTraceControl_fn                                     = std::function<void(ULONG, PVOID, ULONG, PVOID, ULONG, PULONG)>;
    using on_NtTraceEvent_fn                                       = std::function<void(HANDLE, ULONG, ULONG, PVOID)>;
    using on_NtTranslateFilePath_fn                                = std::function<void(PFILE_PATH, ULONG, PFILE_PATH, PULONG)>;
    using on_NtUnloadKey2_fn                                       = std::function<void(POBJECT_ATTRIBUTES, ULONG)>;
    using on_NtUnloadKey_fn                                        = std::function<void(POBJECT_ATTRIBUTES)>;
    using on_NtUnmapViewOfSection_fn                               = std::function<void(HANDLE, PVOID)>;
    using on_NtWaitForKeyedEvent_fn                                = std::function<void(HANDLE, PVOID, BOOLEAN, PLARGE_INTEGER)>;
    using on_NtWaitForMultipleObjects_fn                           = std::function<void(ULONG, HANDLE, WAIT_TYPE, BOOLEAN, PLARGE_INTEGER)>;
    using on_NtWaitForSingleObject_fn                              = std::function<void(HANDLE, BOOLEAN, PLARGE_INTEGER)>;
    using on_NtWaitLowEventPair_fn                                 = std::function<void(HANDLE)>;
    using on_NtWorkerFactoryWorkerReady_fn                         = std::function<void(HANDLE)>;
    using on_NtWriteFile_fn                                        = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PVOID, ULONG, PLARGE_INTEGER, PULONG)>;
    using on_NtWriteVirtualMemory_fn                               = std::function<void(HANDLE, PVOID, PVOID, SIZE_T, PSIZE_T)>;
    using on_ZwAccessCheckAndAuditAlarm_fn                         = std::function<void(PUNICODE_STRING, PVOID, PUNICODE_STRING, PUNICODE_STRING, PSECURITY_DESCRIPTOR, ACCESS_MASK, PGENERIC_MAPPING, BOOLEAN, PACCESS_MASK, PNTSTATUS, PBOOLEAN)>;
    using on_ZwAccessCheckByTypeAndAuditAlarm_fn                   = std::function<void(PUNICODE_STRING, PVOID, PUNICODE_STRING, PUNICODE_STRING, PSECURITY_DESCRIPTOR, PSID, ACCESS_MASK, AUDIT_EVENT_TYPE, ULONG, POBJECT_TYPE_LIST, ULONG, PGENERIC_MAPPING, BOOLEAN, PACCESS_MASK, PNTSTATUS, PBOOLEAN)>;
    using on_ZwAccessCheckByTypeResultListAndAuditAlarmByHandle_fn = std::function<void(PUNICODE_STRING, PVOID, HANDLE, PUNICODE_STRING, PUNICODE_STRING, PSECURITY_DESCRIPTOR, PSID, ACCESS_MASK, AUDIT_EVENT_TYPE, ULONG, POBJECT_TYPE_LIST, ULONG, PGENERIC_MAPPING, BOOLEAN, PACCESS_MASK, PNTSTATUS, PBOOLEAN)>;
    using on_ZwAccessCheckByTypeResultListAndAuditAlarm_fn         = std::function<void(PUNICODE_STRING, PVOID, PUNICODE_STRING, PUNICODE_STRING, PSECURITY_DESCRIPTOR, PSID, ACCESS_MASK, AUDIT_EVENT_TYPE, ULONG, POBJECT_TYPE_LIST, ULONG, PGENERIC_MAPPING, BOOLEAN, PACCESS_MASK, PNTSTATUS, PBOOLEAN)>;
    using on_ZwAccessCheckByTypeResultList_fn                      = std::function<void(PSECURITY_DESCRIPTOR, PSID, HANDLE, ACCESS_MASK, POBJECT_TYPE_LIST, ULONG, PGENERIC_MAPPING, PPRIVILEGE_SET, PULONG, PACCESS_MASK, PNTSTATUS)>;
    using on_ZwAccessCheckByType_fn                                = std::function<void(PSECURITY_DESCRIPTOR, PSID, HANDLE, ACCESS_MASK, POBJECT_TYPE_LIST, ULONG, PGENERIC_MAPPING, PPRIVILEGE_SET, PULONG, PACCESS_MASK, PNTSTATUS)>;
    using on_ZwAccessCheck_fn                                      = std::function<void(PSECURITY_DESCRIPTOR, HANDLE, ACCESS_MASK, PGENERIC_MAPPING, PPRIVILEGE_SET, PULONG, PACCESS_MASK, PNTSTATUS)>;
    using on_ZwAddAtom_fn                                          = std::function<void(PWSTR, ULONG, PRTL_ATOM)>;
    using on_ZwAddBootEntry_fn                                     = std::function<void(PBOOT_ENTRY, PULONG)>;
    using on_ZwAlertResumeThread_fn                                = std::function<void(HANDLE, PULONG)>;
    using on_ZwAllocateLocallyUniqueId_fn                          = std::function<void(PLUID)>;
    using on_ZwAllocateUserPhysicalPages_fn                        = std::function<void(HANDLE, PULONG_PTR, PULONG_PTR)>;
    using on_ZwAllocateUuids_fn                                    = std::function<void(PULARGE_INTEGER, PULONG, PULONG, PCHAR)>;
    using on_ZwAllocateVirtualMemory_fn                            = std::function<void(HANDLE, PVOID, ULONG_PTR, PSIZE_T, ULONG, ULONG)>;
    using on_ZwAlpcAcceptConnectPort_fn                            = std::function<void(PHANDLE, HANDLE, ULONG, POBJECT_ATTRIBUTES, PALPC_PORT_ATTRIBUTES, PVOID, PPORT_MESSAGE, PALPC_MESSAGE_ATTRIBUTES, BOOLEAN)>;
    using on_ZwAlpcCreatePortSection_fn                            = std::function<void(HANDLE, ULONG, HANDLE, SIZE_T, PALPC_HANDLE, PSIZE_T)>;
    using on_ZwAlpcCreateResourceReserve_fn                        = std::function<void(HANDLE, ULONG, SIZE_T, PALPC_HANDLE)>;
    using on_ZwAlpcDeleteSectionView_fn                            = std::function<void(HANDLE, ULONG, PVOID)>;
    using on_ZwAlpcDeleteSecurityContext_fn                        = std::function<void(HANDLE, ULONG, ALPC_HANDLE)>;
    using on_ZwAlpcQueryInformationMessage_fn                      = std::function<void(HANDLE, PPORT_MESSAGE, ALPC_MESSAGE_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwAlpcQueryInformation_fn                             = std::function<void(HANDLE, ALPC_PORT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwAlpcSendWaitReceivePort_fn                          = std::function<void(HANDLE, ULONG, PPORT_MESSAGE, PALPC_MESSAGE_ATTRIBUTES, PPORT_MESSAGE, PULONG, PALPC_MESSAGE_ATTRIBUTES, PLARGE_INTEGER)>;
    using on_ZwAreMappedFilesTheSame_fn                            = std::function<void(PVOID, PVOID)>;
    using on_ZwCancelIoFileEx_fn                                   = std::function<void(HANDLE, PIO_STATUS_BLOCK, PIO_STATUS_BLOCK)>;
    using on_ZwCancelIoFile_fn                                     = std::function<void(HANDLE, PIO_STATUS_BLOCK)>;
    using on_ZwCancelSynchronousIoFile_fn                          = std::function<void(HANDLE, PIO_STATUS_BLOCK, PIO_STATUS_BLOCK)>;
    using on_ZwCloseObjectAuditAlarm_fn                            = std::function<void(PUNICODE_STRING, PVOID, BOOLEAN)>;
    using on_ZwCommitEnlistment_fn                                 = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwCommitTransaction_fn                                = std::function<void(HANDLE, BOOLEAN)>;
    using on_ZwCompareTokens_fn                                    = std::function<void(HANDLE, HANDLE, PBOOLEAN)>;
    using on_ZwConnectPort_fn                                      = std::function<void(PHANDLE, PUNICODE_STRING, PSECURITY_QUALITY_OF_SERVICE, PPORT_VIEW, PREMOTE_PORT_VIEW, PULONG, PVOID, PULONG)>;
    using on_ZwContinue_fn                                         = std::function<void(PCONTEXT, BOOLEAN)>;
    using on_ZwCreateEventPair_fn                                  = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwCreateEvent_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, EVENT_TYPE, BOOLEAN)>;
    using on_ZwCreateFile_fn                                       = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PIO_STATUS_BLOCK, PLARGE_INTEGER, ULONG, ULONG, ULONG, ULONG, PVOID, ULONG)>;
    using on_ZwCreateJobObject_fn                                  = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwCreateJobSet_fn                                     = std::function<void(ULONG, PJOB_SET_ARRAY, ULONG)>;
    using on_ZwCreateKeyTransacted_fn                              = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG, PUNICODE_STRING, ULONG, HANDLE, PULONG)>;
    using on_ZwCreateKey_fn                                        = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG, PUNICODE_STRING, ULONG, PULONG)>;
    using on_ZwCreateKeyedEvent_fn                                 = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG)>;
    using on_ZwCreateMailslotFile_fn                               = std::function<void(PHANDLE, ULONG, POBJECT_ATTRIBUTES, PIO_STATUS_BLOCK, ULONG, ULONG, ULONG, PLARGE_INTEGER)>;
    using on_ZwCreatePort_fn                                       = std::function<void(PHANDLE, POBJECT_ATTRIBUTES, ULONG, ULONG, ULONG)>;
    using on_ZwCreatePrivateNamespace_fn                           = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PVOID)>;
    using on_ZwCreateProcessEx_fn                                  = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, ULONG, HANDLE, HANDLE, HANDLE, ULONG)>;
    using on_ZwCreateProfileEx_fn                                  = std::function<void(PHANDLE, HANDLE, PVOID, SIZE_T, ULONG, PULONG, ULONG, KPROFILE_SOURCE, ULONG, PGROUP_AFFINITY)>;
    using on_ZwCreateProfile_fn                                    = std::function<void(PHANDLE, HANDLE, PVOID, SIZE_T, ULONG, PULONG, ULONG, KPROFILE_SOURCE, KAFFINITY)>;
    using on_ZwCreateSymbolicLinkObject_fn                         = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PUNICODE_STRING)>;
    using on_ZwCreateTimer_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, TIMER_TYPE)>;
    using on_ZwCreateTransactionManager_fn                         = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PUNICODE_STRING, ULONG, ULONG)>;
    using on_ZwDelayExecution_fn                                   = std::function<void(BOOLEAN, PLARGE_INTEGER)>;
    using on_ZwDeleteDriverEntry_fn                                = std::function<void(ULONG)>;
    using on_ZwDeleteObjectAuditAlarm_fn                           = std::function<void(PUNICODE_STRING, PVOID, BOOLEAN)>;
    using on_ZwDeleteValueKey_fn                                   = std::function<void(HANDLE, PUNICODE_STRING)>;
    using on_ZwDisplayString_fn                                    = std::function<void(PUNICODE_STRING)>;
    using on_ZwDuplicateObject_fn                                  = std::function<void(HANDLE, HANDLE, HANDLE, PHANDLE, ACCESS_MASK, ULONG, ULONG)>;
    using on_ZwEnumerateDriverEntries_fn                           = std::function<void(PVOID, PULONG)>;
    using on_ZwEnumerateValueKey_fn                                = std::function<void(HANDLE, ULONG, KEY_VALUE_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwFilterToken_fn                                      = std::function<void(HANDLE, ULONG, PTOKEN_GROUPS, PTOKEN_PRIVILEGES, PTOKEN_GROUPS, PHANDLE)>;
    using on_ZwFindAtom_fn                                         = std::function<void(PWSTR, ULONG, PRTL_ATOM)>;
    using on_ZwFlushBuffersFile_fn                                 = std::function<void(HANDLE, PIO_STATUS_BLOCK)>;
    using on_ZwFlushKey_fn                                         = std::function<void(HANDLE)>;
    using on_ZwFlushProcessWriteBuffers_fn                         = std::function<void()>;
    using on_ZwFlushVirtualMemory_fn                               = std::function<void(HANDLE, PVOID, PSIZE_T, PIO_STATUS_BLOCK)>;
    using on_ZwFreeUserPhysicalPages_fn                            = std::function<void(HANDLE, PULONG_PTR, PULONG_PTR)>;
    using on_ZwFreeVirtualMemory_fn                                = std::function<void(HANDLE, PVOID, PSIZE_T, ULONG)>;
    using on_ZwFreezeTransactions_fn                               = std::function<void(PLARGE_INTEGER, PLARGE_INTEGER)>;
    using on_ZwFsControlFile_fn                                    = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, ULONG, PVOID, ULONG, PVOID, ULONG)>;
    using on_ZwGetContextThread_fn                                 = std::function<void(HANDLE, PCONTEXT)>;
    using on_ZwGetCurrentProcessorNumber_fn                        = std::function<void()>;
    using on_ZwGetDevicePowerState_fn                              = std::function<void(HANDLE, DEVICE_POWER_STATE)>;
    using on_ZwGetMUIRegistryInfo_fn                               = std::function<void(ULONG, PULONG, PVOID)>;
    using on_ZwGetNextThread_fn                                    = std::function<void(HANDLE, HANDLE, ACCESS_MASK, ULONG, ULONG, PHANDLE)>;
    using on_ZwGetNlsSectionPtr_fn                                 = std::function<void(ULONG, ULONG, PVOID, PVOID, PULONG)>;
    using on_ZwGetWriteWatch_fn                                    = std::function<void(HANDLE, ULONG, PVOID, SIZE_T, PVOID, PULONG_PTR, PULONG)>;
    using on_ZwImpersonateAnonymousToken_fn                        = std::function<void(HANDLE)>;
    using on_ZwImpersonateClientOfPort_fn                          = std::function<void(HANDLE, PPORT_MESSAGE)>;
    using on_ZwImpersonateThread_fn                                = std::function<void(HANDLE, HANDLE, PSECURITY_QUALITY_OF_SERVICE)>;
    using on_ZwIsSystemResumeAutomatic_fn                          = std::function<void()>;
    using on_ZwLoadDriver_fn                                       = std::function<void(PUNICODE_STRING)>;
    using on_ZwLoadKey2_fn                                         = std::function<void(POBJECT_ATTRIBUTES, POBJECT_ATTRIBUTES, ULONG)>;
    using on_ZwLockFile_fn                                         = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PLARGE_INTEGER, PLARGE_INTEGER, ULONG, BOOLEAN, BOOLEAN)>;
    using on_ZwLockRegistryKey_fn                                  = std::function<void(HANDLE)>;
    using on_ZwMapUserPhysicalPagesScatter_fn                      = std::function<void(PVOID, ULONG_PTR, PULONG_PTR)>;
    using on_ZwMapViewOfSection_fn                                 = std::function<void(HANDLE, HANDLE, PVOID, ULONG_PTR, SIZE_T, PLARGE_INTEGER, PSIZE_T, SECTION_INHERIT, ULONG, WIN32_PROTECTION_MASK)>;
    using on_ZwModifyDriverEntry_fn                                = std::function<void(PEFI_DRIVER_ENTRY)>;
    using on_ZwNotifyChangeKey_fn                                  = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, ULONG, BOOLEAN, PVOID, ULONG, BOOLEAN)>;
    using on_ZwOpenDirectoryObject_fn                              = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenEventPair_fn                                    = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenKeyTransactedEx_fn                              = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG, HANDLE)>;
    using on_ZwOpenKeyTransacted_fn                                = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE)>;
    using on_ZwOpenObjectAuditAlarm_fn                             = std::function<void(PUNICODE_STRING, PVOID, PUNICODE_STRING, PUNICODE_STRING, PSECURITY_DESCRIPTOR, HANDLE, ACCESS_MASK, ACCESS_MASK, PPRIVILEGE_SET, BOOLEAN, BOOLEAN, PBOOLEAN)>;
    using on_ZwOpenSemaphore_fn                                    = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenSession_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenSymbolicLinkObject_fn                           = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenThread_fn                                       = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PCLIENT_ID)>;
    using on_ZwOpenTimer_fn                                        = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenTransaction_fn                                  = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, LPGUID, HANDLE)>;
    using on_ZwPlugPlayControl_fn                                  = std::function<void(PLUGPLAY_CONTROL_CLASS, PVOID, ULONG)>;
    using on_ZwPrePrepareComplete_fn                               = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwPrepareComplete_fn                                  = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwPrepareEnlistment_fn                                = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwPrivilegeCheck_fn                                   = std::function<void(HANDLE, PPRIVILEGE_SET, PBOOLEAN)>;
    using on_ZwPrivilegedServiceAuditAlarm_fn                      = std::function<void(PUNICODE_STRING, PUNICODE_STRING, HANDLE, PPRIVILEGE_SET, BOOLEAN)>;
    using on_ZwProtectVirtualMemory_fn                             = std::function<void(HANDLE, PVOID, PSIZE_T, WIN32_PROTECTION_MASK, PULONG)>;
    using on_ZwPulseEvent_fn                                       = std::function<void(HANDLE, PLONG)>;
    using on_ZwQueryAttributesFile_fn                              = std::function<void(POBJECT_ATTRIBUTES, PFILE_BASIC_INFORMATION)>;
    using on_ZwQueryBootEntryOrder_fn                              = std::function<void(PULONG, PULONG)>;
    using on_ZwQueryDebugFilterState_fn                            = std::function<void(ULONG, ULONG)>;
    using on_ZwQueryDefaultUILanguage_fn                           = std::function<void(LANGID)>;
    using on_ZwQueryDirectoryObject_fn                             = std::function<void(HANDLE, PVOID, ULONG, BOOLEAN, BOOLEAN, PULONG, PULONG)>;
    using on_ZwQueryEaFile_fn                                      = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, BOOLEAN, PVOID, ULONG, PULONG, BOOLEAN)>;
    using on_ZwQueryInformationThread_fn                           = std::function<void(HANDLE, THREADINFOCLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryInformationTransaction_fn                      = std::function<void(HANDLE, TRANSACTION_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryInformationWorkerFactory_fn                    = std::function<void(HANDLE, WORKERFACTORYINFOCLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryKey_fn                                         = std::function<void(HANDLE, KEY_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryLicenseValue_fn                                = std::function<void(PUNICODE_STRING, PULONG, PVOID, ULONG, PULONG)>;
    using on_ZwQueryMultipleValueKey_fn                            = std::function<void(HANDLE, PKEY_VALUE_ENTRY, ULONG, PVOID, PULONG, PULONG)>;
    using on_ZwQueryMutant_fn                                      = std::function<void(HANDLE, MUTANT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryObject_fn                                      = std::function<void(HANDLE, OBJECT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQuerySecurityAttributesToken_fn                     = std::function<void(HANDLE, PUNICODE_STRING, ULONG, PVOID, ULONG, PULONG)>;
    using on_ZwQuerySemaphore_fn                                   = std::function<void(HANDLE, SEMAPHORE_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQuerySystemTime_fn                                  = std::function<void(PLARGE_INTEGER)>;
    using on_ZwQueryTimerResolution_fn                             = std::function<void(PULONG, PULONG, PULONG)>;
    using on_ZwQueryTimer_fn                                       = std::function<void(HANDLE, TIMER_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryVirtualMemory_fn                               = std::function<void(HANDLE, PVOID, MEMORY_INFORMATION_CLASS, PVOID, SIZE_T, PSIZE_T)>;
    using on_ZwQueryVolumeInformationFile_fn                       = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, FS_INFORMATION_CLASS)>;
    using on_ZwRaiseException_fn                                   = std::function<void(PEXCEPTION_RECORD, PCONTEXT, BOOLEAN)>;
    using on_ZwReadFileScatter_fn                                  = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PFILE_SEGMENT_ELEMENT, ULONG, PLARGE_INTEGER, PULONG)>;
    using on_ZwReadOnlyEnlistment_fn                               = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwReadVirtualMemory_fn                                = std::function<void(HANDLE, PVOID, PVOID, SIZE_T, PSIZE_T)>;
    using on_ZwRecoverEnlistment_fn                                = std::function<void(HANDLE, PVOID)>;
    using on_ZwRecoverResourceManager_fn                           = std::function<void(HANDLE)>;
    using on_ZwReleaseMutant_fn                                    = std::function<void(HANDLE, PLONG)>;
    using on_ZwReleaseSemaphore_fn                                 = std::function<void(HANDLE, LONG, PLONG)>;
    using on_ZwRemoveIoCompletionEx_fn                             = std::function<void(HANDLE, PFILE_IO_COMPLETION_INFORMATION, ULONG, PULONG, PLARGE_INTEGER, BOOLEAN)>;
    using on_ZwRemoveIoCompletion_fn                               = std::function<void(HANDLE, PVOID, PVOID, PIO_STATUS_BLOCK, PLARGE_INTEGER)>;
    using on_ZwRemoveProcessDebug_fn                               = std::function<void(HANDLE, HANDLE)>;
    using on_ZwReplyWaitReceivePortEx_fn                           = std::function<void(HANDLE, PVOID, PPORT_MESSAGE, PPORT_MESSAGE, PLARGE_INTEGER)>;
    using on_ZwReplyWaitReceivePort_fn                             = std::function<void(HANDLE, PVOID, PPORT_MESSAGE, PPORT_MESSAGE)>;
    using on_ZwRequestWaitReplyPort_fn                             = std::function<void(HANDLE, PPORT_MESSAGE, PPORT_MESSAGE)>;
    using on_ZwResetEvent_fn                                       = std::function<void(HANDLE, PLONG)>;
    using on_ZwResetWriteWatch_fn                                  = std::function<void(HANDLE, PVOID, SIZE_T)>;
    using on_ZwResumeProcess_fn                                    = std::function<void(HANDLE)>;
    using on_ZwResumeThread_fn                                     = std::function<void(HANDLE, PULONG)>;
    using on_ZwRollbackComplete_fn                                 = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwRollbackTransaction_fn                              = std::function<void(HANDLE, BOOLEAN)>;
    using on_ZwSaveMergedKeys_fn                                   = std::function<void(HANDLE, HANDLE, HANDLE)>;
    using on_ZwSerializeBoot_fn                                    = std::function<void()>;
    using on_ZwSetBootEntryOrder_fn                                = std::function<void(PULONG, ULONG)>;
    using on_ZwSetDebugFilterState_fn                              = std::function<void(ULONG, ULONG, BOOLEAN)>;
    using on_ZwSetDefaultUILanguage_fn                             = std::function<void(LANGID)>;
    using on_ZwSetEaFile_fn                                        = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG)>;
    using on_ZwSetEventBoostPriority_fn                            = std::function<void(HANDLE)>;
    using on_ZwSetEvent_fn                                         = std::function<void(HANDLE, PLONG)>;
    using on_ZwSetHighWaitLowEventPair_fn                          = std::function<void(HANDLE)>;
    using on_ZwSetInformationFile_fn                               = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, FILE_INFORMATION_CLASS)>;
    using on_ZwSetInformationJobObject_fn                          = std::function<void(HANDLE, JOBOBJECTINFOCLASS, PVOID, ULONG)>;
    using on_ZwSetInformationKey_fn                                = std::function<void(HANDLE, KEY_SET_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetInformationTransactionManager_fn                 = std::function<void(HANDLE, TRANSACTIONMANAGER_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetIoCompletionEx_fn                                = std::function<void(HANDLE, HANDLE, PVOID, PVOID, NTSTATUS, ULONG_PTR)>;
    using on_ZwSetIoCompletion_fn                                  = std::function<void(HANDLE, PVOID, PVOID, NTSTATUS, ULONG_PTR)>;
    using on_ZwSetLdtEntries_fn                                    = std::function<void(ULONG, ULONG, ULONG, ULONG, ULONG, ULONG)>;
    using on_ZwSetLowEventPair_fn                                  = std::function<void(HANDLE)>;
    using on_ZwSetLowWaitHighEventPair_fn                          = std::function<void(HANDLE)>;
    using on_ZwSetQuotaInformationFile_fn                          = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG)>;
    using on_ZwSetSystemEnvironmentValueEx_fn                      = std::function<void(PUNICODE_STRING, LPGUID, PVOID, ULONG, ULONG)>;
    using on_ZwSetSystemEnvironmentValue_fn                        = std::function<void(PUNICODE_STRING, PUNICODE_STRING)>;
    using on_ZwSetSystemInformation_fn                             = std::function<void(SYSTEM_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetSystemPowerState_fn                              = std::function<void(POWER_ACTION, SYSTEM_POWER_STATE, ULONG)>;
    using on_ZwSetSystemTime_fn                                    = std::function<void(PLARGE_INTEGER, PLARGE_INTEGER)>;
    using on_ZwSetTimerEx_fn                                       = std::function<void(HANDLE, TIMER_SET_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetTimer_fn                                         = std::function<void(HANDLE, PLARGE_INTEGER, PTIMER_APC_ROUTINE, PVOID, BOOLEAN, LONG, PBOOLEAN)>;
    using on_ZwSetValueKey_fn                                      = std::function<void(HANDLE, PUNICODE_STRING, ULONG, ULONG, PVOID, ULONG)>;
    using on_ZwSetVolumeInformationFile_fn                         = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, FS_INFORMATION_CLASS)>;
    using on_ZwShutdownSystem_fn                                   = std::function<void(SHUTDOWN_ACTION)>;
    using on_ZwShutdownWorkerFactory_fn                            = std::function<void(HANDLE, LONG)>;
    using on_ZwSignalAndWaitForSingleObject_fn                     = std::function<void(HANDLE, HANDLE, BOOLEAN, PLARGE_INTEGER)>;
    using on_ZwSinglePhaseReject_fn                                = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwStartProfile_fn                                     = std::function<void(HANDLE)>;
    using on_ZwStopProfile_fn                                      = std::function<void(HANDLE)>;
    using on_ZwSuspendProcess_fn                                   = std::function<void(HANDLE)>;
    using on_ZwSystemDebugControl_fn                               = std::function<void(SYSDBG_COMMAND, PVOID, ULONG, PVOID, ULONG, PULONG)>;
    using on_ZwTerminateProcess_fn                                 = std::function<void(HANDLE, NTSTATUS)>;
    using on_ZwTestAlert_fn                                        = std::function<void()>;
    using on_ZwThawRegistry_fn                                     = std::function<void()>;
    using on_ZwThawTransactions_fn                                 = std::function<void()>;
    using on_ZwUmsThreadYield_fn                                   = std::function<void()>;
    using on_ZwUnloadDriver_fn                                     = std::function<void(PUNICODE_STRING)>;
    using on_ZwUnloadKeyEx_fn                                      = std::function<void(POBJECT_ATTRIBUTES, HANDLE)>;
    using on_ZwUnlockFile_fn                                       = std::function<void(HANDLE, PIO_STATUS_BLOCK, PLARGE_INTEGER, PLARGE_INTEGER, ULONG)>;
    using on_ZwUnlockVirtualMemory_fn                              = std::function<void(HANDLE, PVOID, PSIZE_T, ULONG)>;
    using on_ZwVdmControl_fn                                       = std::function<void(VDMSERVICECLASS, PVOID)>;
    using on_ZwWaitForDebugEvent_fn                                = std::function<void(HANDLE, BOOLEAN, PLARGE_INTEGER, PDBGUI_WAIT_STATE_CHANGE)>;
    using on_ZwWaitForMultipleObjects32_fn                         = std::function<void(ULONG, LONG, WAIT_TYPE, BOOLEAN, PLARGE_INTEGER)>;
    using on_ZwWaitForWorkViaWorkerFactory_fn                      = std::function<void(HANDLE, PFILE_IO_COMPLETION_INFORMATION)>;
    using on_ZwWaitHighEventPair_fn                                = std::function<void(HANDLE)>;
    using on_ZwWriteFileGather_fn                                  = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PFILE_SEGMENT_ELEMENT, ULONG, PLARGE_INTEGER, PULONG)>;
    using on_ZwWriteRequestData_fn                                 = std::function<void(HANDLE, PPORT_MESSAGE, ULONG, PVOID, SIZE_T, PSIZE_T)>;
    using on_ZwYieldExecution_fn                                   = std::function<void()>;

    struct syscalls
    {
         syscalls(core::Core& core, std::string_view module);
        ~syscalls();

        using on_call_fn = std::function<void(const tracer::callcfg_t& callcfg)>;
        using callcfgs_t = std::array<tracer::callcfg_t, 399>;

        opt<bpid_t>                 register_all(proc_t proc, const on_call_fn& on_call);
        static const callcfgs_t&    callcfgs    ();

        opt<bpid_t> register_NtAcceptConnectPort                               (proc_t proc, const on_NtAcceptConnectPort_fn& on_func);
        opt<bpid_t> register_NtAddDriverEntry                                  (proc_t proc, const on_NtAddDriverEntry_fn& on_func);
        opt<bpid_t> register_NtAdjustGroupsToken                               (proc_t proc, const on_NtAdjustGroupsToken_fn& on_func);
        opt<bpid_t> register_NtAdjustPrivilegesToken                           (proc_t proc, const on_NtAdjustPrivilegesToken_fn& on_func);
        opt<bpid_t> register_NtAlertThread                                     (proc_t proc, const on_NtAlertThread_fn& on_func);
        opt<bpid_t> register_NtAllocateReserveObject                           (proc_t proc, const on_NtAllocateReserveObject_fn& on_func);
        opt<bpid_t> register_NtAlpcCancelMessage                               (proc_t proc, const on_NtAlpcCancelMessage_fn& on_func);
        opt<bpid_t> register_NtAlpcConnectPort                                 (proc_t proc, const on_NtAlpcConnectPort_fn& on_func);
        opt<bpid_t> register_NtAlpcCreatePort                                  (proc_t proc, const on_NtAlpcCreatePort_fn& on_func);
        opt<bpid_t> register_NtAlpcCreateSectionView                           (proc_t proc, const on_NtAlpcCreateSectionView_fn& on_func);
        opt<bpid_t> register_NtAlpcCreateSecurityContext                       (proc_t proc, const on_NtAlpcCreateSecurityContext_fn& on_func);
        opt<bpid_t> register_NtAlpcDeletePortSection                           (proc_t proc, const on_NtAlpcDeletePortSection_fn& on_func);
        opt<bpid_t> register_NtAlpcDeleteResourceReserve                       (proc_t proc, const on_NtAlpcDeleteResourceReserve_fn& on_func);
        opt<bpid_t> register_NtAlpcDisconnectPort                              (proc_t proc, const on_NtAlpcDisconnectPort_fn& on_func);
        opt<bpid_t> register_NtAlpcImpersonateClientOfPort                     (proc_t proc, const on_NtAlpcImpersonateClientOfPort_fn& on_func);
        opt<bpid_t> register_NtAlpcOpenSenderProcess                           (proc_t proc, const on_NtAlpcOpenSenderProcess_fn& on_func);
        opt<bpid_t> register_NtAlpcOpenSenderThread                            (proc_t proc, const on_NtAlpcOpenSenderThread_fn& on_func);
        opt<bpid_t> register_NtAlpcRevokeSecurityContext                       (proc_t proc, const on_NtAlpcRevokeSecurityContext_fn& on_func);
        opt<bpid_t> register_NtAlpcSetInformation                              (proc_t proc, const on_NtAlpcSetInformation_fn& on_func);
        opt<bpid_t> register_NtApphelpCacheControl                             (proc_t proc, const on_NtApphelpCacheControl_fn& on_func);
        opt<bpid_t> register_NtAssignProcessToJobObject                        (proc_t proc, const on_NtAssignProcessToJobObject_fn& on_func);
        opt<bpid_t> register_NtCancelTimer                                     (proc_t proc, const on_NtCancelTimer_fn& on_func);
        opt<bpid_t> register_NtClearEvent                                      (proc_t proc, const on_NtClearEvent_fn& on_func);
        opt<bpid_t> register_NtClose                                           (proc_t proc, const on_NtClose_fn& on_func);
        opt<bpid_t> register_NtCommitComplete                                  (proc_t proc, const on_NtCommitComplete_fn& on_func);
        opt<bpid_t> register_NtCompactKeys                                     (proc_t proc, const on_NtCompactKeys_fn& on_func);
        opt<bpid_t> register_NtCompleteConnectPort                             (proc_t proc, const on_NtCompleteConnectPort_fn& on_func);
        opt<bpid_t> register_NtCompressKey                                     (proc_t proc, const on_NtCompressKey_fn& on_func);
        opt<bpid_t> register_NtCreateDebugObject                               (proc_t proc, const on_NtCreateDebugObject_fn& on_func);
        opt<bpid_t> register_NtCreateDirectoryObject                           (proc_t proc, const on_NtCreateDirectoryObject_fn& on_func);
        opt<bpid_t> register_NtCreateEnlistment                                (proc_t proc, const on_NtCreateEnlistment_fn& on_func);
        opt<bpid_t> register_NtCreateIoCompletion                              (proc_t proc, const on_NtCreateIoCompletion_fn& on_func);
        opt<bpid_t> register_NtCreateMutant                                    (proc_t proc, const on_NtCreateMutant_fn& on_func);
        opt<bpid_t> register_NtCreateNamedPipeFile                             (proc_t proc, const on_NtCreateNamedPipeFile_fn& on_func);
        opt<bpid_t> register_NtCreatePagingFile                                (proc_t proc, const on_NtCreatePagingFile_fn& on_func);
        opt<bpid_t> register_NtCreateProcess                                   (proc_t proc, const on_NtCreateProcess_fn& on_func);
        opt<bpid_t> register_NtCreateResourceManager                           (proc_t proc, const on_NtCreateResourceManager_fn& on_func);
        opt<bpid_t> register_NtCreateSection                                   (proc_t proc, const on_NtCreateSection_fn& on_func);
        opt<bpid_t> register_NtCreateSemaphore                                 (proc_t proc, const on_NtCreateSemaphore_fn& on_func);
        opt<bpid_t> register_NtCreateThread                                    (proc_t proc, const on_NtCreateThread_fn& on_func);
        opt<bpid_t> register_NtCreateThreadEx                                  (proc_t proc, const on_NtCreateThreadEx_fn& on_func);
        opt<bpid_t> register_NtCreateToken                                     (proc_t proc, const on_NtCreateToken_fn& on_func);
        opt<bpid_t> register_NtCreateTransaction                               (proc_t proc, const on_NtCreateTransaction_fn& on_func);
        opt<bpid_t> register_NtCreateUserProcess                               (proc_t proc, const on_NtCreateUserProcess_fn& on_func);
        opt<bpid_t> register_NtCreateWaitablePort                              (proc_t proc, const on_NtCreateWaitablePort_fn& on_func);
        opt<bpid_t> register_NtCreateWorkerFactory                             (proc_t proc, const on_NtCreateWorkerFactory_fn& on_func);
        opt<bpid_t> register_NtDebugActiveProcess                              (proc_t proc, const on_NtDebugActiveProcess_fn& on_func);
        opt<bpid_t> register_NtDebugContinue                                   (proc_t proc, const on_NtDebugContinue_fn& on_func);
        opt<bpid_t> register_NtDeleteAtom                                      (proc_t proc, const on_NtDeleteAtom_fn& on_func);
        opt<bpid_t> register_NtDeleteBootEntry                                 (proc_t proc, const on_NtDeleteBootEntry_fn& on_func);
        opt<bpid_t> register_NtDeleteFile                                      (proc_t proc, const on_NtDeleteFile_fn& on_func);
        opt<bpid_t> register_NtDeleteKey                                       (proc_t proc, const on_NtDeleteKey_fn& on_func);
        opt<bpid_t> register_NtDeletePrivateNamespace                          (proc_t proc, const on_NtDeletePrivateNamespace_fn& on_func);
        opt<bpid_t> register_NtDeviceIoControlFile                             (proc_t proc, const on_NtDeviceIoControlFile_fn& on_func);
        opt<bpid_t> register_NtDisableLastKnownGood                            (proc_t proc, const on_NtDisableLastKnownGood_fn& on_func);
        opt<bpid_t> register_NtDrawText                                        (proc_t proc, const on_NtDrawText_fn& on_func);
        opt<bpid_t> register_NtDuplicateToken                                  (proc_t proc, const on_NtDuplicateToken_fn& on_func);
        opt<bpid_t> register_NtEnableLastKnownGood                             (proc_t proc, const on_NtEnableLastKnownGood_fn& on_func);
        opt<bpid_t> register_NtEnumerateBootEntries                            (proc_t proc, const on_NtEnumerateBootEntries_fn& on_func);
        opt<bpid_t> register_NtEnumerateKey                                    (proc_t proc, const on_NtEnumerateKey_fn& on_func);
        opt<bpid_t> register_NtEnumerateSystemEnvironmentValuesEx              (proc_t proc, const on_NtEnumerateSystemEnvironmentValuesEx_fn& on_func);
        opt<bpid_t> register_NtEnumerateTransactionObject                      (proc_t proc, const on_NtEnumerateTransactionObject_fn& on_func);
        opt<bpid_t> register_NtExtendSection                                   (proc_t proc, const on_NtExtendSection_fn& on_func);
        opt<bpid_t> register_NtFlushInstallUILanguage                          (proc_t proc, const on_NtFlushInstallUILanguage_fn& on_func);
        opt<bpid_t> register_NtFlushInstructionCache                           (proc_t proc, const on_NtFlushInstructionCache_fn& on_func);
        opt<bpid_t> register_NtFlushWriteBuffer                                (proc_t proc, const on_NtFlushWriteBuffer_fn& on_func);
        opt<bpid_t> register_NtFreezeRegistry                                  (proc_t proc, const on_NtFreezeRegistry_fn& on_func);
        opt<bpid_t> register_NtGetNextProcess                                  (proc_t proc, const on_NtGetNextProcess_fn& on_func);
        opt<bpid_t> register_NtGetNotificationResourceManager                  (proc_t proc, const on_NtGetNotificationResourceManager_fn& on_func);
        opt<bpid_t> register_NtInitializeNlsFiles                              (proc_t proc, const on_NtInitializeNlsFiles_fn& on_func);
        opt<bpid_t> register_NtInitializeRegistry                              (proc_t proc, const on_NtInitializeRegistry_fn& on_func);
        opt<bpid_t> register_NtInitiatePowerAction                             (proc_t proc, const on_NtInitiatePowerAction_fn& on_func);
        opt<bpid_t> register_NtIsProcessInJob                                  (proc_t proc, const on_NtIsProcessInJob_fn& on_func);
        opt<bpid_t> register_NtIsUILanguageComitted                            (proc_t proc, const on_NtIsUILanguageComitted_fn& on_func);
        opt<bpid_t> register_NtListenPort                                      (proc_t proc, const on_NtListenPort_fn& on_func);
        opt<bpid_t> register_NtLoadKey                                         (proc_t proc, const on_NtLoadKey_fn& on_func);
        opt<bpid_t> register_NtLoadKeyEx                                       (proc_t proc, const on_NtLoadKeyEx_fn& on_func);
        opt<bpid_t> register_NtLockProductActivationKeys                       (proc_t proc, const on_NtLockProductActivationKeys_fn& on_func);
        opt<bpid_t> register_NtLockVirtualMemory                               (proc_t proc, const on_NtLockVirtualMemory_fn& on_func);
        opt<bpid_t> register_NtMakePermanentObject                             (proc_t proc, const on_NtMakePermanentObject_fn& on_func);
        opt<bpid_t> register_NtMakeTemporaryObject                             (proc_t proc, const on_NtMakeTemporaryObject_fn& on_func);
        opt<bpid_t> register_NtMapCMFModule                                    (proc_t proc, const on_NtMapCMFModule_fn& on_func);
        opt<bpid_t> register_NtMapUserPhysicalPages                            (proc_t proc, const on_NtMapUserPhysicalPages_fn& on_func);
        opt<bpid_t> register_NtModifyBootEntry                                 (proc_t proc, const on_NtModifyBootEntry_fn& on_func);
        opt<bpid_t> register_NtNotifyChangeDirectoryFile                       (proc_t proc, const on_NtNotifyChangeDirectoryFile_fn& on_func);
        opt<bpid_t> register_NtNotifyChangeMultipleKeys                        (proc_t proc, const on_NtNotifyChangeMultipleKeys_fn& on_func);
        opt<bpid_t> register_NtNotifyChangeSession                             (proc_t proc, const on_NtNotifyChangeSession_fn& on_func);
        opt<bpid_t> register_NtOpenEnlistment                                  (proc_t proc, const on_NtOpenEnlistment_fn& on_func);
        opt<bpid_t> register_NtOpenEvent                                       (proc_t proc, const on_NtOpenEvent_fn& on_func);
        opt<bpid_t> register_NtOpenFile                                        (proc_t proc, const on_NtOpenFile_fn& on_func);
        opt<bpid_t> register_NtOpenIoCompletion                                (proc_t proc, const on_NtOpenIoCompletion_fn& on_func);
        opt<bpid_t> register_NtOpenJobObject                                   (proc_t proc, const on_NtOpenJobObject_fn& on_func);
        opt<bpid_t> register_NtOpenKey                                         (proc_t proc, const on_NtOpenKey_fn& on_func);
        opt<bpid_t> register_NtOpenKeyEx                                       (proc_t proc, const on_NtOpenKeyEx_fn& on_func);
        opt<bpid_t> register_NtOpenKeyedEvent                                  (proc_t proc, const on_NtOpenKeyedEvent_fn& on_func);
        opt<bpid_t> register_NtOpenMutant                                      (proc_t proc, const on_NtOpenMutant_fn& on_func);
        opt<bpid_t> register_NtOpenPrivateNamespace                            (proc_t proc, const on_NtOpenPrivateNamespace_fn& on_func);
        opt<bpid_t> register_NtOpenProcess                                     (proc_t proc, const on_NtOpenProcess_fn& on_func);
        opt<bpid_t> register_NtOpenProcessToken                                (proc_t proc, const on_NtOpenProcessToken_fn& on_func);
        opt<bpid_t> register_NtOpenProcessTokenEx                              (proc_t proc, const on_NtOpenProcessTokenEx_fn& on_func);
        opt<bpid_t> register_NtOpenResourceManager                             (proc_t proc, const on_NtOpenResourceManager_fn& on_func);
        opt<bpid_t> register_NtOpenSection                                     (proc_t proc, const on_NtOpenSection_fn& on_func);
        opt<bpid_t> register_NtOpenThreadToken                                 (proc_t proc, const on_NtOpenThreadToken_fn& on_func);
        opt<bpid_t> register_NtOpenThreadTokenEx                               (proc_t proc, const on_NtOpenThreadTokenEx_fn& on_func);
        opt<bpid_t> register_NtOpenTransactionManager                          (proc_t proc, const on_NtOpenTransactionManager_fn& on_func);
        opt<bpid_t> register_NtPowerInformation                                (proc_t proc, const on_NtPowerInformation_fn& on_func);
        opt<bpid_t> register_NtPrePrepareEnlistment                            (proc_t proc, const on_NtPrePrepareEnlistment_fn& on_func);
        opt<bpid_t> register_NtPrivilegeObjectAuditAlarm                       (proc_t proc, const on_NtPrivilegeObjectAuditAlarm_fn& on_func);
        opt<bpid_t> register_NtPropagationComplete                             (proc_t proc, const on_NtPropagationComplete_fn& on_func);
        opt<bpid_t> register_NtPropagationFailed                               (proc_t proc, const on_NtPropagationFailed_fn& on_func);
        opt<bpid_t> register_NtQueryBootOptions                                (proc_t proc, const on_NtQueryBootOptions_fn& on_func);
        opt<bpid_t> register_NtQueryDefaultLocale                              (proc_t proc, const on_NtQueryDefaultLocale_fn& on_func);
        opt<bpid_t> register_NtQueryDirectoryFile                              (proc_t proc, const on_NtQueryDirectoryFile_fn& on_func);
        opt<bpid_t> register_NtQueryDriverEntryOrder                           (proc_t proc, const on_NtQueryDriverEntryOrder_fn& on_func);
        opt<bpid_t> register_NtQueryEvent                                      (proc_t proc, const on_NtQueryEvent_fn& on_func);
        opt<bpid_t> register_NtQueryFullAttributesFile                         (proc_t proc, const on_NtQueryFullAttributesFile_fn& on_func);
        opt<bpid_t> register_NtQueryInformationAtom                            (proc_t proc, const on_NtQueryInformationAtom_fn& on_func);
        opt<bpid_t> register_NtQueryInformationEnlistment                      (proc_t proc, const on_NtQueryInformationEnlistment_fn& on_func);
        opt<bpid_t> register_NtQueryInformationFile                            (proc_t proc, const on_NtQueryInformationFile_fn& on_func);
        opt<bpid_t> register_NtQueryInformationJobObject                       (proc_t proc, const on_NtQueryInformationJobObject_fn& on_func);
        opt<bpid_t> register_NtQueryInformationPort                            (proc_t proc, const on_NtQueryInformationPort_fn& on_func);
        opt<bpid_t> register_NtQueryInformationProcess                         (proc_t proc, const on_NtQueryInformationProcess_fn& on_func);
        opt<bpid_t> register_NtQueryInformationResourceManager                 (proc_t proc, const on_NtQueryInformationResourceManager_fn& on_func);
        opt<bpid_t> register_NtQueryInformationToken                           (proc_t proc, const on_NtQueryInformationToken_fn& on_func);
        opt<bpid_t> register_NtQueryInformationTransactionManager              (proc_t proc, const on_NtQueryInformationTransactionManager_fn& on_func);
        opt<bpid_t> register_NtQueryInstallUILanguage                          (proc_t proc, const on_NtQueryInstallUILanguage_fn& on_func);
        opt<bpid_t> register_NtQueryIntervalProfile                            (proc_t proc, const on_NtQueryIntervalProfile_fn& on_func);
        opt<bpid_t> register_NtQueryIoCompletion                               (proc_t proc, const on_NtQueryIoCompletion_fn& on_func);
        opt<bpid_t> register_NtQueryOpenSubKeys                                (proc_t proc, const on_NtQueryOpenSubKeys_fn& on_func);
        opt<bpid_t> register_NtQueryOpenSubKeysEx                              (proc_t proc, const on_NtQueryOpenSubKeysEx_fn& on_func);
        opt<bpid_t> register_NtQueryPerformanceCounter                         (proc_t proc, const on_NtQueryPerformanceCounter_fn& on_func);
        opt<bpid_t> register_NtQueryPortInformationProcess                     (proc_t proc, const on_NtQueryPortInformationProcess_fn& on_func);
        opt<bpid_t> register_NtQueryQuotaInformationFile                       (proc_t proc, const on_NtQueryQuotaInformationFile_fn& on_func);
        opt<bpid_t> register_NtQuerySection                                    (proc_t proc, const on_NtQuerySection_fn& on_func);
        opt<bpid_t> register_NtQuerySecurityObject                             (proc_t proc, const on_NtQuerySecurityObject_fn& on_func);
        opt<bpid_t> register_NtQuerySymbolicLinkObject                         (proc_t proc, const on_NtQuerySymbolicLinkObject_fn& on_func);
        opt<bpid_t> register_NtQuerySystemEnvironmentValue                     (proc_t proc, const on_NtQuerySystemEnvironmentValue_fn& on_func);
        opt<bpid_t> register_NtQuerySystemEnvironmentValueEx                   (proc_t proc, const on_NtQuerySystemEnvironmentValueEx_fn& on_func);
        opt<bpid_t> register_NtQuerySystemInformation                          (proc_t proc, const on_NtQuerySystemInformation_fn& on_func);
        opt<bpid_t> register_NtQuerySystemInformationEx                        (proc_t proc, const on_NtQuerySystemInformationEx_fn& on_func);
        opt<bpid_t> register_NtQueryValueKey                                   (proc_t proc, const on_NtQueryValueKey_fn& on_func);
        opt<bpid_t> register_NtQueueApcThread                                  (proc_t proc, const on_NtQueueApcThread_fn& on_func);
        opt<bpid_t> register_NtQueueApcThreadEx                                (proc_t proc, const on_NtQueueApcThreadEx_fn& on_func);
        opt<bpid_t> register_NtRaiseHardError                                  (proc_t proc, const on_NtRaiseHardError_fn& on_func);
        opt<bpid_t> register_NtReadFile                                        (proc_t proc, const on_NtReadFile_fn& on_func);
        opt<bpid_t> register_NtReadRequestData                                 (proc_t proc, const on_NtReadRequestData_fn& on_func);
        opt<bpid_t> register_NtRecoverTransactionManager                       (proc_t proc, const on_NtRecoverTransactionManager_fn& on_func);
        opt<bpid_t> register_NtRegisterProtocolAddressInformation              (proc_t proc, const on_NtRegisterProtocolAddressInformation_fn& on_func);
        opt<bpid_t> register_NtRegisterThreadTerminatePort                     (proc_t proc, const on_NtRegisterThreadTerminatePort_fn& on_func);
        opt<bpid_t> register_NtReleaseKeyedEvent                               (proc_t proc, const on_NtReleaseKeyedEvent_fn& on_func);
        opt<bpid_t> register_NtReleaseWorkerFactoryWorker                      (proc_t proc, const on_NtReleaseWorkerFactoryWorker_fn& on_func);
        opt<bpid_t> register_NtRenameKey                                       (proc_t proc, const on_NtRenameKey_fn& on_func);
        opt<bpid_t> register_NtRenameTransactionManager                        (proc_t proc, const on_NtRenameTransactionManager_fn& on_func);
        opt<bpid_t> register_NtReplaceKey                                      (proc_t proc, const on_NtReplaceKey_fn& on_func);
        opt<bpid_t> register_NtReplacePartitionUnit                            (proc_t proc, const on_NtReplacePartitionUnit_fn& on_func);
        opt<bpid_t> register_NtReplyPort                                       (proc_t proc, const on_NtReplyPort_fn& on_func);
        opt<bpid_t> register_NtReplyWaitReplyPort                              (proc_t proc, const on_NtReplyWaitReplyPort_fn& on_func);
        opt<bpid_t> register_NtRequestPort                                     (proc_t proc, const on_NtRequestPort_fn& on_func);
        opt<bpid_t> register_NtRestoreKey                                      (proc_t proc, const on_NtRestoreKey_fn& on_func);
        opt<bpid_t> register_NtRollbackEnlistment                              (proc_t proc, const on_NtRollbackEnlistment_fn& on_func);
        opt<bpid_t> register_NtRollforwardTransactionManager                   (proc_t proc, const on_NtRollforwardTransactionManager_fn& on_func);
        opt<bpid_t> register_NtSaveKey                                         (proc_t proc, const on_NtSaveKey_fn& on_func);
        opt<bpid_t> register_NtSaveKeyEx                                       (proc_t proc, const on_NtSaveKeyEx_fn& on_func);
        opt<bpid_t> register_NtSecureConnectPort                               (proc_t proc, const on_NtSecureConnectPort_fn& on_func);
        opt<bpid_t> register_NtSetBootOptions                                  (proc_t proc, const on_NtSetBootOptions_fn& on_func);
        opt<bpid_t> register_NtSetContextThread                                (proc_t proc, const on_NtSetContextThread_fn& on_func);
        opt<bpid_t> register_NtSetDefaultHardErrorPort                         (proc_t proc, const on_NtSetDefaultHardErrorPort_fn& on_func);
        opt<bpid_t> register_NtSetDefaultLocale                                (proc_t proc, const on_NtSetDefaultLocale_fn& on_func);
        opt<bpid_t> register_NtSetDriverEntryOrder                             (proc_t proc, const on_NtSetDriverEntryOrder_fn& on_func);
        opt<bpid_t> register_NtSetHighEventPair                                (proc_t proc, const on_NtSetHighEventPair_fn& on_func);
        opt<bpid_t> register_NtSetInformationDebugObject                       (proc_t proc, const on_NtSetInformationDebugObject_fn& on_func);
        opt<bpid_t> register_NtSetInformationEnlistment                        (proc_t proc, const on_NtSetInformationEnlistment_fn& on_func);
        opt<bpid_t> register_NtSetInformationObject                            (proc_t proc, const on_NtSetInformationObject_fn& on_func);
        opt<bpid_t> register_NtSetInformationProcess                           (proc_t proc, const on_NtSetInformationProcess_fn& on_func);
        opt<bpid_t> register_NtSetInformationResourceManager                   (proc_t proc, const on_NtSetInformationResourceManager_fn& on_func);
        opt<bpid_t> register_NtSetInformationThread                            (proc_t proc, const on_NtSetInformationThread_fn& on_func);
        opt<bpid_t> register_NtSetInformationToken                             (proc_t proc, const on_NtSetInformationToken_fn& on_func);
        opt<bpid_t> register_NtSetInformationTransaction                       (proc_t proc, const on_NtSetInformationTransaction_fn& on_func);
        opt<bpid_t> register_NtSetInformationWorkerFactory                     (proc_t proc, const on_NtSetInformationWorkerFactory_fn& on_func);
        opt<bpid_t> register_NtSetIntervalProfile                              (proc_t proc, const on_NtSetIntervalProfile_fn& on_func);
        opt<bpid_t> register_NtSetSecurityObject                               (proc_t proc, const on_NtSetSecurityObject_fn& on_func);
        opt<bpid_t> register_NtSetThreadExecutionState                         (proc_t proc, const on_NtSetThreadExecutionState_fn& on_func);
        opt<bpid_t> register_NtSetTimerResolution                              (proc_t proc, const on_NtSetTimerResolution_fn& on_func);
        opt<bpid_t> register_NtSetUuidSeed                                     (proc_t proc, const on_NtSetUuidSeed_fn& on_func);
        opt<bpid_t> register_NtSuspendThread                                   (proc_t proc, const on_NtSuspendThread_fn& on_func);
        opt<bpid_t> register_NtTerminateJobObject                              (proc_t proc, const on_NtTerminateJobObject_fn& on_func);
        opt<bpid_t> register_NtTerminateThread                                 (proc_t proc, const on_NtTerminateThread_fn& on_func);
        opt<bpid_t> register_NtTraceControl                                    (proc_t proc, const on_NtTraceControl_fn& on_func);
        opt<bpid_t> register_NtTraceEvent                                      (proc_t proc, const on_NtTraceEvent_fn& on_func);
        opt<bpid_t> register_NtTranslateFilePath                               (proc_t proc, const on_NtTranslateFilePath_fn& on_func);
        opt<bpid_t> register_NtUnloadKey                                       (proc_t proc, const on_NtUnloadKey_fn& on_func);
        opt<bpid_t> register_NtUnloadKey2                                      (proc_t proc, const on_NtUnloadKey2_fn& on_func);
        opt<bpid_t> register_NtUnmapViewOfSection                              (proc_t proc, const on_NtUnmapViewOfSection_fn& on_func);
        opt<bpid_t> register_NtWaitForKeyedEvent                               (proc_t proc, const on_NtWaitForKeyedEvent_fn& on_func);
        opt<bpid_t> register_NtWaitForMultipleObjects                          (proc_t proc, const on_NtWaitForMultipleObjects_fn& on_func);
        opt<bpid_t> register_NtWaitForSingleObject                             (proc_t proc, const on_NtWaitForSingleObject_fn& on_func);
        opt<bpid_t> register_NtWaitLowEventPair                                (proc_t proc, const on_NtWaitLowEventPair_fn& on_func);
        opt<bpid_t> register_NtWorkerFactoryWorkerReady                        (proc_t proc, const on_NtWorkerFactoryWorkerReady_fn& on_func);
        opt<bpid_t> register_NtWriteFile                                       (proc_t proc, const on_NtWriteFile_fn& on_func);
        opt<bpid_t> register_NtWriteVirtualMemory                              (proc_t proc, const on_NtWriteVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwAccessCheck                                     (proc_t proc, const on_ZwAccessCheck_fn& on_func);
        opt<bpid_t> register_ZwAccessCheckAndAuditAlarm                        (proc_t proc, const on_ZwAccessCheckAndAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwAccessCheckByType                               (proc_t proc, const on_ZwAccessCheckByType_fn& on_func);
        opt<bpid_t> register_ZwAccessCheckByTypeAndAuditAlarm                  (proc_t proc, const on_ZwAccessCheckByTypeAndAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwAccessCheckByTypeResultList                     (proc_t proc, const on_ZwAccessCheckByTypeResultList_fn& on_func);
        opt<bpid_t> register_ZwAccessCheckByTypeResultListAndAuditAlarm        (proc_t proc, const on_ZwAccessCheckByTypeResultListAndAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwAccessCheckByTypeResultListAndAuditAlarmByHandle(proc_t proc, const on_ZwAccessCheckByTypeResultListAndAuditAlarmByHandle_fn& on_func);
        opt<bpid_t> register_ZwAddAtom                                         (proc_t proc, const on_ZwAddAtom_fn& on_func);
        opt<bpid_t> register_ZwAddBootEntry                                    (proc_t proc, const on_ZwAddBootEntry_fn& on_func);
        opt<bpid_t> register_ZwAlertResumeThread                               (proc_t proc, const on_ZwAlertResumeThread_fn& on_func);
        opt<bpid_t> register_ZwAllocateLocallyUniqueId                         (proc_t proc, const on_ZwAllocateLocallyUniqueId_fn& on_func);
        opt<bpid_t> register_ZwAllocateUserPhysicalPages                       (proc_t proc, const on_ZwAllocateUserPhysicalPages_fn& on_func);
        opt<bpid_t> register_ZwAllocateUuids                                   (proc_t proc, const on_ZwAllocateUuids_fn& on_func);
        opt<bpid_t> register_ZwAllocateVirtualMemory                           (proc_t proc, const on_ZwAllocateVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwAlpcAcceptConnectPort                           (proc_t proc, const on_ZwAlpcAcceptConnectPort_fn& on_func);
        opt<bpid_t> register_ZwAlpcCreatePortSection                           (proc_t proc, const on_ZwAlpcCreatePortSection_fn& on_func);
        opt<bpid_t> register_ZwAlpcCreateResourceReserve                       (proc_t proc, const on_ZwAlpcCreateResourceReserve_fn& on_func);
        opt<bpid_t> register_ZwAlpcDeleteSectionView                           (proc_t proc, const on_ZwAlpcDeleteSectionView_fn& on_func);
        opt<bpid_t> register_ZwAlpcDeleteSecurityContext                       (proc_t proc, const on_ZwAlpcDeleteSecurityContext_fn& on_func);
        opt<bpid_t> register_ZwAlpcQueryInformation                            (proc_t proc, const on_ZwAlpcQueryInformation_fn& on_func);
        opt<bpid_t> register_ZwAlpcQueryInformationMessage                     (proc_t proc, const on_ZwAlpcQueryInformationMessage_fn& on_func);
        opt<bpid_t> register_ZwAlpcSendWaitReceivePort                         (proc_t proc, const on_ZwAlpcSendWaitReceivePort_fn& on_func);
        opt<bpid_t> register_ZwAreMappedFilesTheSame                           (proc_t proc, const on_ZwAreMappedFilesTheSame_fn& on_func);
        opt<bpid_t> register_ZwCancelIoFile                                    (proc_t proc, const on_ZwCancelIoFile_fn& on_func);
        opt<bpid_t> register_ZwCancelIoFileEx                                  (proc_t proc, const on_ZwCancelIoFileEx_fn& on_func);
        opt<bpid_t> register_ZwCancelSynchronousIoFile                         (proc_t proc, const on_ZwCancelSynchronousIoFile_fn& on_func);
        opt<bpid_t> register_ZwCloseObjectAuditAlarm                           (proc_t proc, const on_ZwCloseObjectAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwCommitEnlistment                                (proc_t proc, const on_ZwCommitEnlistment_fn& on_func);
        opt<bpid_t> register_ZwCommitTransaction                               (proc_t proc, const on_ZwCommitTransaction_fn& on_func);
        opt<bpid_t> register_ZwCompareTokens                                   (proc_t proc, const on_ZwCompareTokens_fn& on_func);
        opt<bpid_t> register_ZwConnectPort                                     (proc_t proc, const on_ZwConnectPort_fn& on_func);
        opt<bpid_t> register_ZwContinue                                        (proc_t proc, const on_ZwContinue_fn& on_func);
        opt<bpid_t> register_ZwCreateEvent                                     (proc_t proc, const on_ZwCreateEvent_fn& on_func);
        opt<bpid_t> register_ZwCreateEventPair                                 (proc_t proc, const on_ZwCreateEventPair_fn& on_func);
        opt<bpid_t> register_ZwCreateFile                                      (proc_t proc, const on_ZwCreateFile_fn& on_func);
        opt<bpid_t> register_ZwCreateJobObject                                 (proc_t proc, const on_ZwCreateJobObject_fn& on_func);
        opt<bpid_t> register_ZwCreateJobSet                                    (proc_t proc, const on_ZwCreateJobSet_fn& on_func);
        opt<bpid_t> register_ZwCreateKey                                       (proc_t proc, const on_ZwCreateKey_fn& on_func);
        opt<bpid_t> register_ZwCreateKeyTransacted                             (proc_t proc, const on_ZwCreateKeyTransacted_fn& on_func);
        opt<bpid_t> register_ZwCreateKeyedEvent                                (proc_t proc, const on_ZwCreateKeyedEvent_fn& on_func);
        opt<bpid_t> register_ZwCreateMailslotFile                              (proc_t proc, const on_ZwCreateMailslotFile_fn& on_func);
        opt<bpid_t> register_ZwCreatePort                                      (proc_t proc, const on_ZwCreatePort_fn& on_func);
        opt<bpid_t> register_ZwCreatePrivateNamespace                          (proc_t proc, const on_ZwCreatePrivateNamespace_fn& on_func);
        opt<bpid_t> register_ZwCreateProcessEx                                 (proc_t proc, const on_ZwCreateProcessEx_fn& on_func);
        opt<bpid_t> register_ZwCreateProfile                                   (proc_t proc, const on_ZwCreateProfile_fn& on_func);
        opt<bpid_t> register_ZwCreateProfileEx                                 (proc_t proc, const on_ZwCreateProfileEx_fn& on_func);
        opt<bpid_t> register_ZwCreateSymbolicLinkObject                        (proc_t proc, const on_ZwCreateSymbolicLinkObject_fn& on_func);
        opt<bpid_t> register_ZwCreateTimer                                     (proc_t proc, const on_ZwCreateTimer_fn& on_func);
        opt<bpid_t> register_ZwCreateTransactionManager                        (proc_t proc, const on_ZwCreateTransactionManager_fn& on_func);
        opt<bpid_t> register_ZwDelayExecution                                  (proc_t proc, const on_ZwDelayExecution_fn& on_func);
        opt<bpid_t> register_ZwDeleteDriverEntry                               (proc_t proc, const on_ZwDeleteDriverEntry_fn& on_func);
        opt<bpid_t> register_ZwDeleteObjectAuditAlarm                          (proc_t proc, const on_ZwDeleteObjectAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwDeleteValueKey                                  (proc_t proc, const on_ZwDeleteValueKey_fn& on_func);
        opt<bpid_t> register_ZwDisplayString                                   (proc_t proc, const on_ZwDisplayString_fn& on_func);
        opt<bpid_t> register_ZwDuplicateObject                                 (proc_t proc, const on_ZwDuplicateObject_fn& on_func);
        opt<bpid_t> register_ZwEnumerateDriverEntries                          (proc_t proc, const on_ZwEnumerateDriverEntries_fn& on_func);
        opt<bpid_t> register_ZwEnumerateValueKey                               (proc_t proc, const on_ZwEnumerateValueKey_fn& on_func);
        opt<bpid_t> register_ZwFilterToken                                     (proc_t proc, const on_ZwFilterToken_fn& on_func);
        opt<bpid_t> register_ZwFindAtom                                        (proc_t proc, const on_ZwFindAtom_fn& on_func);
        opt<bpid_t> register_ZwFlushBuffersFile                                (proc_t proc, const on_ZwFlushBuffersFile_fn& on_func);
        opt<bpid_t> register_ZwFlushKey                                        (proc_t proc, const on_ZwFlushKey_fn& on_func);
        opt<bpid_t> register_ZwFlushProcessWriteBuffers                        (proc_t proc, const on_ZwFlushProcessWriteBuffers_fn& on_func);
        opt<bpid_t> register_ZwFlushVirtualMemory                              (proc_t proc, const on_ZwFlushVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwFreeUserPhysicalPages                           (proc_t proc, const on_ZwFreeUserPhysicalPages_fn& on_func);
        opt<bpid_t> register_ZwFreeVirtualMemory                               (proc_t proc, const on_ZwFreeVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwFreezeTransactions                              (proc_t proc, const on_ZwFreezeTransactions_fn& on_func);
        opt<bpid_t> register_ZwFsControlFile                                   (proc_t proc, const on_ZwFsControlFile_fn& on_func);
        opt<bpid_t> register_ZwGetContextThread                                (proc_t proc, const on_ZwGetContextThread_fn& on_func);
        opt<bpid_t> register_ZwGetCurrentProcessorNumber                       (proc_t proc, const on_ZwGetCurrentProcessorNumber_fn& on_func);
        opt<bpid_t> register_ZwGetDevicePowerState                             (proc_t proc, const on_ZwGetDevicePowerState_fn& on_func);
        opt<bpid_t> register_ZwGetMUIRegistryInfo                              (proc_t proc, const on_ZwGetMUIRegistryInfo_fn& on_func);
        opt<bpid_t> register_ZwGetNextThread                                   (proc_t proc, const on_ZwGetNextThread_fn& on_func);
        opt<bpid_t> register_ZwGetNlsSectionPtr                                (proc_t proc, const on_ZwGetNlsSectionPtr_fn& on_func);
        opt<bpid_t> register_ZwGetWriteWatch                                   (proc_t proc, const on_ZwGetWriteWatch_fn& on_func);
        opt<bpid_t> register_ZwImpersonateAnonymousToken                       (proc_t proc, const on_ZwImpersonateAnonymousToken_fn& on_func);
        opt<bpid_t> register_ZwImpersonateClientOfPort                         (proc_t proc, const on_ZwImpersonateClientOfPort_fn& on_func);
        opt<bpid_t> register_ZwImpersonateThread                               (proc_t proc, const on_ZwImpersonateThread_fn& on_func);
        opt<bpid_t> register_ZwIsSystemResumeAutomatic                         (proc_t proc, const on_ZwIsSystemResumeAutomatic_fn& on_func);
        opt<bpid_t> register_ZwLoadDriver                                      (proc_t proc, const on_ZwLoadDriver_fn& on_func);
        opt<bpid_t> register_ZwLoadKey2                                        (proc_t proc, const on_ZwLoadKey2_fn& on_func);
        opt<bpid_t> register_ZwLockFile                                        (proc_t proc, const on_ZwLockFile_fn& on_func);
        opt<bpid_t> register_ZwLockRegistryKey                                 (proc_t proc, const on_ZwLockRegistryKey_fn& on_func);
        opt<bpid_t> register_ZwMapUserPhysicalPagesScatter                     (proc_t proc, const on_ZwMapUserPhysicalPagesScatter_fn& on_func);
        opt<bpid_t> register_ZwMapViewOfSection                                (proc_t proc, const on_ZwMapViewOfSection_fn& on_func);
        opt<bpid_t> register_ZwModifyDriverEntry                               (proc_t proc, const on_ZwModifyDriverEntry_fn& on_func);
        opt<bpid_t> register_ZwNotifyChangeKey                                 (proc_t proc, const on_ZwNotifyChangeKey_fn& on_func);
        opt<bpid_t> register_ZwOpenDirectoryObject                             (proc_t proc, const on_ZwOpenDirectoryObject_fn& on_func);
        opt<bpid_t> register_ZwOpenEventPair                                   (proc_t proc, const on_ZwOpenEventPair_fn& on_func);
        opt<bpid_t> register_ZwOpenKeyTransacted                               (proc_t proc, const on_ZwOpenKeyTransacted_fn& on_func);
        opt<bpid_t> register_ZwOpenKeyTransactedEx                             (proc_t proc, const on_ZwOpenKeyTransactedEx_fn& on_func);
        opt<bpid_t> register_ZwOpenObjectAuditAlarm                            (proc_t proc, const on_ZwOpenObjectAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwOpenSemaphore                                   (proc_t proc, const on_ZwOpenSemaphore_fn& on_func);
        opt<bpid_t> register_ZwOpenSession                                     (proc_t proc, const on_ZwOpenSession_fn& on_func);
        opt<bpid_t> register_ZwOpenSymbolicLinkObject                          (proc_t proc, const on_ZwOpenSymbolicLinkObject_fn& on_func);
        opt<bpid_t> register_ZwOpenThread                                      (proc_t proc, const on_ZwOpenThread_fn& on_func);
        opt<bpid_t> register_ZwOpenTimer                                       (proc_t proc, const on_ZwOpenTimer_fn& on_func);
        opt<bpid_t> register_ZwOpenTransaction                                 (proc_t proc, const on_ZwOpenTransaction_fn& on_func);
        opt<bpid_t> register_ZwPlugPlayControl                                 (proc_t proc, const on_ZwPlugPlayControl_fn& on_func);
        opt<bpid_t> register_ZwPrePrepareComplete                              (proc_t proc, const on_ZwPrePrepareComplete_fn& on_func);
        opt<bpid_t> register_ZwPrepareComplete                                 (proc_t proc, const on_ZwPrepareComplete_fn& on_func);
        opt<bpid_t> register_ZwPrepareEnlistment                               (proc_t proc, const on_ZwPrepareEnlistment_fn& on_func);
        opt<bpid_t> register_ZwPrivilegeCheck                                  (proc_t proc, const on_ZwPrivilegeCheck_fn& on_func);
        opt<bpid_t> register_ZwPrivilegedServiceAuditAlarm                     (proc_t proc, const on_ZwPrivilegedServiceAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwProtectVirtualMemory                            (proc_t proc, const on_ZwProtectVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwPulseEvent                                      (proc_t proc, const on_ZwPulseEvent_fn& on_func);
        opt<bpid_t> register_ZwQueryAttributesFile                             (proc_t proc, const on_ZwQueryAttributesFile_fn& on_func);
        opt<bpid_t> register_ZwQueryBootEntryOrder                             (proc_t proc, const on_ZwQueryBootEntryOrder_fn& on_func);
        opt<bpid_t> register_ZwQueryDebugFilterState                           (proc_t proc, const on_ZwQueryDebugFilterState_fn& on_func);
        opt<bpid_t> register_ZwQueryDefaultUILanguage                          (proc_t proc, const on_ZwQueryDefaultUILanguage_fn& on_func);
        opt<bpid_t> register_ZwQueryDirectoryObject                            (proc_t proc, const on_ZwQueryDirectoryObject_fn& on_func);
        opt<bpid_t> register_ZwQueryEaFile                                     (proc_t proc, const on_ZwQueryEaFile_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationThread                          (proc_t proc, const on_ZwQueryInformationThread_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationTransaction                     (proc_t proc, const on_ZwQueryInformationTransaction_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationWorkerFactory                   (proc_t proc, const on_ZwQueryInformationWorkerFactory_fn& on_func);
        opt<bpid_t> register_ZwQueryKey                                        (proc_t proc, const on_ZwQueryKey_fn& on_func);
        opt<bpid_t> register_ZwQueryLicenseValue                               (proc_t proc, const on_ZwQueryLicenseValue_fn& on_func);
        opt<bpid_t> register_ZwQueryMultipleValueKey                           (proc_t proc, const on_ZwQueryMultipleValueKey_fn& on_func);
        opt<bpid_t> register_ZwQueryMutant                                     (proc_t proc, const on_ZwQueryMutant_fn& on_func);
        opt<bpid_t> register_ZwQueryObject                                     (proc_t proc, const on_ZwQueryObject_fn& on_func);
        opt<bpid_t> register_ZwQuerySecurityAttributesToken                    (proc_t proc, const on_ZwQuerySecurityAttributesToken_fn& on_func);
        opt<bpid_t> register_ZwQuerySemaphore                                  (proc_t proc, const on_ZwQuerySemaphore_fn& on_func);
        opt<bpid_t> register_ZwQuerySystemTime                                 (proc_t proc, const on_ZwQuerySystemTime_fn& on_func);
        opt<bpid_t> register_ZwQueryTimer                                      (proc_t proc, const on_ZwQueryTimer_fn& on_func);
        opt<bpid_t> register_ZwQueryTimerResolution                            (proc_t proc, const on_ZwQueryTimerResolution_fn& on_func);
        opt<bpid_t> register_ZwQueryVirtualMemory                              (proc_t proc, const on_ZwQueryVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwQueryVolumeInformationFile                      (proc_t proc, const on_ZwQueryVolumeInformationFile_fn& on_func);
        opt<bpid_t> register_ZwRaiseException                                  (proc_t proc, const on_ZwRaiseException_fn& on_func);
        opt<bpid_t> register_ZwReadFileScatter                                 (proc_t proc, const on_ZwReadFileScatter_fn& on_func);
        opt<bpid_t> register_ZwReadOnlyEnlistment                              (proc_t proc, const on_ZwReadOnlyEnlistment_fn& on_func);
        opt<bpid_t> register_ZwReadVirtualMemory                               (proc_t proc, const on_ZwReadVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwRecoverEnlistment                               (proc_t proc, const on_ZwRecoverEnlistment_fn& on_func);
        opt<bpid_t> register_ZwRecoverResourceManager                          (proc_t proc, const on_ZwRecoverResourceManager_fn& on_func);
        opt<bpid_t> register_ZwReleaseMutant                                   (proc_t proc, const on_ZwReleaseMutant_fn& on_func);
        opt<bpid_t> register_ZwReleaseSemaphore                                (proc_t proc, const on_ZwReleaseSemaphore_fn& on_func);
        opt<bpid_t> register_ZwRemoveIoCompletion                              (proc_t proc, const on_ZwRemoveIoCompletion_fn& on_func);
        opt<bpid_t> register_ZwRemoveIoCompletionEx                            (proc_t proc, const on_ZwRemoveIoCompletionEx_fn& on_func);
        opt<bpid_t> register_ZwRemoveProcessDebug                              (proc_t proc, const on_ZwRemoveProcessDebug_fn& on_func);
        opt<bpid_t> register_ZwReplyWaitReceivePort                            (proc_t proc, const on_ZwReplyWaitReceivePort_fn& on_func);
        opt<bpid_t> register_ZwReplyWaitReceivePortEx                          (proc_t proc, const on_ZwReplyWaitReceivePortEx_fn& on_func);
        opt<bpid_t> register_ZwRequestWaitReplyPort                            (proc_t proc, const on_ZwRequestWaitReplyPort_fn& on_func);
        opt<bpid_t> register_ZwResetEvent                                      (proc_t proc, const on_ZwResetEvent_fn& on_func);
        opt<bpid_t> register_ZwResetWriteWatch                                 (proc_t proc, const on_ZwResetWriteWatch_fn& on_func);
        opt<bpid_t> register_ZwResumeProcess                                   (proc_t proc, const on_ZwResumeProcess_fn& on_func);
        opt<bpid_t> register_ZwResumeThread                                    (proc_t proc, const on_ZwResumeThread_fn& on_func);
        opt<bpid_t> register_ZwRollbackComplete                                (proc_t proc, const on_ZwRollbackComplete_fn& on_func);
        opt<bpid_t> register_ZwRollbackTransaction                             (proc_t proc, const on_ZwRollbackTransaction_fn& on_func);
        opt<bpid_t> register_ZwSaveMergedKeys                                  (proc_t proc, const on_ZwSaveMergedKeys_fn& on_func);
        opt<bpid_t> register_ZwSerializeBoot                                   (proc_t proc, const on_ZwSerializeBoot_fn& on_func);
        opt<bpid_t> register_ZwSetBootEntryOrder                               (proc_t proc, const on_ZwSetBootEntryOrder_fn& on_func);
        opt<bpid_t> register_ZwSetDebugFilterState                             (proc_t proc, const on_ZwSetDebugFilterState_fn& on_func);
        opt<bpid_t> register_ZwSetDefaultUILanguage                            (proc_t proc, const on_ZwSetDefaultUILanguage_fn& on_func);
        opt<bpid_t> register_ZwSetEaFile                                       (proc_t proc, const on_ZwSetEaFile_fn& on_func);
        opt<bpid_t> register_ZwSetEvent                                        (proc_t proc, const on_ZwSetEvent_fn& on_func);
        opt<bpid_t> register_ZwSetEventBoostPriority                           (proc_t proc, const on_ZwSetEventBoostPriority_fn& on_func);
        opt<bpid_t> register_ZwSetHighWaitLowEventPair                         (proc_t proc, const on_ZwSetHighWaitLowEventPair_fn& on_func);
        opt<bpid_t> register_ZwSetInformationFile                              (proc_t proc, const on_ZwSetInformationFile_fn& on_func);
        opt<bpid_t> register_ZwSetInformationJobObject                         (proc_t proc, const on_ZwSetInformationJobObject_fn& on_func);
        opt<bpid_t> register_ZwSetInformationKey                               (proc_t proc, const on_ZwSetInformationKey_fn& on_func);
        opt<bpid_t> register_ZwSetInformationTransactionManager                (proc_t proc, const on_ZwSetInformationTransactionManager_fn& on_func);
        opt<bpid_t> register_ZwSetIoCompletion                                 (proc_t proc, const on_ZwSetIoCompletion_fn& on_func);
        opt<bpid_t> register_ZwSetIoCompletionEx                               (proc_t proc, const on_ZwSetIoCompletionEx_fn& on_func);
        opt<bpid_t> register_ZwSetLdtEntries                                   (proc_t proc, const on_ZwSetLdtEntries_fn& on_func);
        opt<bpid_t> register_ZwSetLowEventPair                                 (proc_t proc, const on_ZwSetLowEventPair_fn& on_func);
        opt<bpid_t> register_ZwSetLowWaitHighEventPair                         (proc_t proc, const on_ZwSetLowWaitHighEventPair_fn& on_func);
        opt<bpid_t> register_ZwSetQuotaInformationFile                         (proc_t proc, const on_ZwSetQuotaInformationFile_fn& on_func);
        opt<bpid_t> register_ZwSetSystemEnvironmentValue                       (proc_t proc, const on_ZwSetSystemEnvironmentValue_fn& on_func);
        opt<bpid_t> register_ZwSetSystemEnvironmentValueEx                     (proc_t proc, const on_ZwSetSystemEnvironmentValueEx_fn& on_func);
        opt<bpid_t> register_ZwSetSystemInformation                            (proc_t proc, const on_ZwSetSystemInformation_fn& on_func);
        opt<bpid_t> register_ZwSetSystemPowerState                             (proc_t proc, const on_ZwSetSystemPowerState_fn& on_func);
        opt<bpid_t> register_ZwSetSystemTime                                   (proc_t proc, const on_ZwSetSystemTime_fn& on_func);
        opt<bpid_t> register_ZwSetTimer                                        (proc_t proc, const on_ZwSetTimer_fn& on_func);
        opt<bpid_t> register_ZwSetTimerEx                                      (proc_t proc, const on_ZwSetTimerEx_fn& on_func);
        opt<bpid_t> register_ZwSetValueKey                                     (proc_t proc, const on_ZwSetValueKey_fn& on_func);
        opt<bpid_t> register_ZwSetVolumeInformationFile                        (proc_t proc, const on_ZwSetVolumeInformationFile_fn& on_func);
        opt<bpid_t> register_ZwShutdownSystem                                  (proc_t proc, const on_ZwShutdownSystem_fn& on_func);
        opt<bpid_t> register_ZwShutdownWorkerFactory                           (proc_t proc, const on_ZwShutdownWorkerFactory_fn& on_func);
        opt<bpid_t> register_ZwSignalAndWaitForSingleObject                    (proc_t proc, const on_ZwSignalAndWaitForSingleObject_fn& on_func);
        opt<bpid_t> register_ZwSinglePhaseReject                               (proc_t proc, const on_ZwSinglePhaseReject_fn& on_func);
        opt<bpid_t> register_ZwStartProfile                                    (proc_t proc, const on_ZwStartProfile_fn& on_func);
        opt<bpid_t> register_ZwStopProfile                                     (proc_t proc, const on_ZwStopProfile_fn& on_func);
        opt<bpid_t> register_ZwSuspendProcess                                  (proc_t proc, const on_ZwSuspendProcess_fn& on_func);
        opt<bpid_t> register_ZwSystemDebugControl                              (proc_t proc, const on_ZwSystemDebugControl_fn& on_func);
        opt<bpid_t> register_ZwTerminateProcess                                (proc_t proc, const on_ZwTerminateProcess_fn& on_func);
        opt<bpid_t> register_ZwTestAlert                                       (proc_t proc, const on_ZwTestAlert_fn& on_func);
        opt<bpid_t> register_ZwThawRegistry                                    (proc_t proc, const on_ZwThawRegistry_fn& on_func);
        opt<bpid_t> register_ZwThawTransactions                                (proc_t proc, const on_ZwThawTransactions_fn& on_func);
        opt<bpid_t> register_ZwUmsThreadYield                                  (proc_t proc, const on_ZwUmsThreadYield_fn& on_func);
        opt<bpid_t> register_ZwUnloadDriver                                    (proc_t proc, const on_ZwUnloadDriver_fn& on_func);
        opt<bpid_t> register_ZwUnloadKeyEx                                     (proc_t proc, const on_ZwUnloadKeyEx_fn& on_func);
        opt<bpid_t> register_ZwUnlockFile                                      (proc_t proc, const on_ZwUnlockFile_fn& on_func);
        opt<bpid_t> register_ZwUnlockVirtualMemory                             (proc_t proc, const on_ZwUnlockVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwVdmControl                                      (proc_t proc, const on_ZwVdmControl_fn& on_func);
        opt<bpid_t> register_ZwWaitForDebugEvent                               (proc_t proc, const on_ZwWaitForDebugEvent_fn& on_func);
        opt<bpid_t> register_ZwWaitForMultipleObjects32                        (proc_t proc, const on_ZwWaitForMultipleObjects32_fn& on_func);
        opt<bpid_t> register_ZwWaitForWorkViaWorkerFactory                     (proc_t proc, const on_ZwWaitForWorkViaWorkerFactory_fn& on_func);
        opt<bpid_t> register_ZwWaitHighEventPair                               (proc_t proc, const on_ZwWaitHighEventPair_fn& on_func);
        opt<bpid_t> register_ZwWriteFileGather                                 (proc_t proc, const on_ZwWriteFileGather_fn& on_func);
        opt<bpid_t> register_ZwWriteRequestData                                (proc_t proc, const on_ZwWriteRequestData_fn& on_func);
        opt<bpid_t> register_ZwYieldExecution                                  (proc_t proc, const on_ZwYieldExecution_fn& on_func);

        struct Data;
        std::unique_ptr<Data> d_;
    };
} // namespace nt
