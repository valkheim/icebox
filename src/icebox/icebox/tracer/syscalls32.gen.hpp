#pragma once

#include "icebox/nt/wow64.hpp"
#include "icebox/types.hpp"
#include "tracer.hpp"

#include <array>
#include <functional>

namespace core { struct Core; }

namespace wow64
{
    using on_NtAcceptConnectPort_fn                                = std::function<void(PHANDLE, PVOID, PPORT_MESSAGE, BOOLEAN, PPORT_VIEW, PREMOTE_PORT_VIEW)>;
    using on_NtAccessCheckByTypeAndAuditAlarm_fn                   = std::function<void(PUNICODE_STRING, PVOID, PUNICODE_STRING, PUNICODE_STRING, PSECURITY_DESCRIPTOR, PSID, ACCESS_MASK, AUDIT_EVENT_TYPE, ULONG, POBJECT_TYPE_LIST, ULONG, PGENERIC_MAPPING, BOOLEAN, PACCESS_MASK, PNTSTATUS, PBOOLEAN)>;
    using on_NtAccessCheckByTypeResultListAndAuditAlarm_fn         = std::function<void(PUNICODE_STRING, PVOID, PUNICODE_STRING, PUNICODE_STRING, PSECURITY_DESCRIPTOR, PSID, ACCESS_MASK, AUDIT_EVENT_TYPE, ULONG, POBJECT_TYPE_LIST, ULONG, PGENERIC_MAPPING, BOOLEAN, PACCESS_MASK, PNTSTATUS, PBOOLEAN)>;
    using on_NtAccessCheckByTypeResultList_fn                      = std::function<void(PSECURITY_DESCRIPTOR, PSID, HANDLE, ACCESS_MASK, POBJECT_TYPE_LIST, ULONG, PGENERIC_MAPPING, PPRIVILEGE_SET, PULONG, PACCESS_MASK, PNTSTATUS)>;
    using on_NtAccessCheckByType_fn                                = std::function<void(PSECURITY_DESCRIPTOR, PSID, HANDLE, ACCESS_MASK, POBJECT_TYPE_LIST, ULONG, PGENERIC_MAPPING, PPRIVILEGE_SET, PULONG, PACCESS_MASK, PNTSTATUS)>;
    using on_NtAccessCheck_fn                                      = std::function<void(PSECURITY_DESCRIPTOR, HANDLE, ACCESS_MASK, PGENERIC_MAPPING, PPRIVILEGE_SET, PULONG, PACCESS_MASK, PNTSTATUS)>;
    using on_NtAddAtom_fn                                          = std::function<void(PWSTR, ULONG, PRTL_ATOM)>;
    using on_NtAddDriverEntry_fn                                   = std::function<void(PEFI_DRIVER_ENTRY, PULONG)>;
    using on_NtAlertResumeThread_fn                                = std::function<void(HANDLE, PULONG)>;
    using on_NtAlertThread_fn                                      = std::function<void(HANDLE)>;
    using on_NtAllocateReserveObject_fn                            = std::function<void(PHANDLE, POBJECT_ATTRIBUTES, MEMORY_RESERVE_TYPE)>;
    using on_NtAllocateUserPhysicalPages_fn                        = std::function<void(HANDLE, PULONG_PTR, PULONG_PTR)>;
    using on_NtAllocateUuids_fn                                    = std::function<void(PULARGE_INTEGER, PULONG, PULONG, PCHAR)>;
    using on_NtAllocateVirtualMemory_fn                            = std::function<void(HANDLE, PVOID, ULONG_PTR, PSIZE_T, ULONG, ULONG)>;
    using on_NtAlpcAcceptConnectPort_fn                            = std::function<void(PHANDLE, HANDLE, ULONG, POBJECT_ATTRIBUTES, PALPC_PORT_ATTRIBUTES, PVOID, PPORT_MESSAGE, PALPC_MESSAGE_ATTRIBUTES, BOOLEAN)>;
    using on_NtAlpcCreatePortSection_fn                            = std::function<void(HANDLE, ULONG, HANDLE, SIZE_T, PALPC_HANDLE, PSIZE_T)>;
    using on_NtAlpcDeleteResourceReserve_fn                        = std::function<void(HANDLE, ULONG, ALPC_HANDLE)>;
    using on_NtAlpcDeleteSectionView_fn                            = std::function<void(HANDLE, ULONG, PVOID)>;
    using on_NtAlpcDeleteSecurityContext_fn                        = std::function<void(HANDLE, ULONG, ALPC_HANDLE)>;
    using on_NtAlpcDisconnectPort_fn                               = std::function<void(HANDLE, ULONG)>;
    using on_NtAlpcRevokeSecurityContext_fn                        = std::function<void(HANDLE, ULONG, ALPC_HANDLE)>;
    using on_NtAlpcSendWaitReceivePort_fn                          = std::function<void(HANDLE, ULONG, PPORT_MESSAGE, PALPC_MESSAGE_ATTRIBUTES, PPORT_MESSAGE, PULONG, PALPC_MESSAGE_ATTRIBUTES, PLARGE_INTEGER)>;
    using on_NtAlpcSetInformation_fn                               = std::function<void(HANDLE, ALPC_PORT_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_NtApphelpCacheControl_fn                              = std::function<void(APPHELPCOMMAND, PVOID)>;
    using on_NtCancelIoFileEx_fn                                   = std::function<void(HANDLE, PIO_STATUS_BLOCK, PIO_STATUS_BLOCK)>;
    using on_NtCancelSynchronousIoFile_fn                          = std::function<void(HANDLE, PIO_STATUS_BLOCK, PIO_STATUS_BLOCK)>;
    using on_NtClearEvent_fn                                       = std::function<void(HANDLE)>;
    using on_NtClose_fn                                            = std::function<void(HANDLE)>;
    using on_NtCommitEnlistment_fn                                 = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_NtCommitTransaction_fn                                = std::function<void(HANDLE, BOOLEAN)>;
    using on_NtCompactKeys_fn                                      = std::function<void(ULONG, HANDLE)>;
    using on_NtCompleteConnectPort_fn                              = std::function<void(HANDLE)>;
    using on_NtConnectPort_fn                                      = std::function<void(PHANDLE, PUNICODE_STRING, PSECURITY_QUALITY_OF_SERVICE, PPORT_VIEW, PREMOTE_PORT_VIEW, PULONG, PVOID, PULONG)>;
    using on_NtCreateEventPair_fn                                  = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtCreateEvent_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, EVENT_TYPE, BOOLEAN)>;
    using on_NtCreateFile_fn                                       = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PIO_STATUS_BLOCK, PLARGE_INTEGER, ULONG, ULONG, ULONG, ULONG, PVOID, ULONG)>;
    using on_NtCreateIoCompletion_fn                               = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG)>;
    using on_NtCreateJobSet_fn                                     = std::function<void(ULONG, PJOB_SET_ARRAY, ULONG)>;
    using on_NtCreateKeyTransacted_fn                              = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG, PUNICODE_STRING, ULONG, HANDLE, PULONG)>;
    using on_NtCreatePagingFile_fn                                 = std::function<void(PUNICODE_STRING, PLARGE_INTEGER, PLARGE_INTEGER, ULONG)>;
    using on_NtCreatePrivateNamespace_fn                           = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PVOID)>;
    using on_NtCreateProfileEx_fn                                  = std::function<void(PHANDLE, HANDLE, PVOID, SIZE_T, ULONG, PULONG, ULONG, KPROFILE_SOURCE, ULONG, PGROUP_AFFINITY)>;
    using on_NtCreateSection_fn                                    = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PLARGE_INTEGER, ULONG, ULONG, HANDLE)>;
    using on_NtCreateSemaphore_fn                                  = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, LONG, LONG)>;
    using on_NtCreateThreadEx_fn                                   = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, PVOID, PVOID, ULONG, ULONG_PTR, SIZE_T, SIZE_T, PPS_ATTRIBUTE_LIST)>;
    using on_NtCreateThread_fn                                     = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, PCLIENT_ID, PCONTEXT, PINITIAL_TEB, BOOLEAN)>;
    using on_NtCreateToken_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, TOKEN_TYPE, PLUID, PLARGE_INTEGER, PTOKEN_USER, PTOKEN_GROUPS, PTOKEN_PRIVILEGES, PTOKEN_OWNER, PTOKEN_PRIMARY_GROUP, PTOKEN_DEFAULT_DACL, PTOKEN_SOURCE)>;
    using on_NtCreateTransaction_fn                                = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, LPGUID, HANDLE, ULONG, ULONG, ULONG, PLARGE_INTEGER, PUNICODE_STRING)>;
    using on_NtCreateUserProcess_fn                                = std::function<void(PHANDLE, PHANDLE, ACCESS_MASK, ACCESS_MASK, POBJECT_ATTRIBUTES, POBJECT_ATTRIBUTES, ULONG, ULONG, PRTL_USER_PROCESS_PARAMETERS, PPROCESS_CREATE_INFO, PPROCESS_ATTRIBUTE_LIST)>;
    using on_NtCreateWorkerFactory_fn                              = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, HANDLE, PVOID, PVOID, ULONG, SIZE_T, SIZE_T)>;
    using on_NtDebugActiveProcess_fn                               = std::function<void(HANDLE, HANDLE)>;
    using on_NtDeleteBootEntry_fn                                  = std::function<void(ULONG)>;
    using on_NtDeleteFile_fn                                       = std::function<void(POBJECT_ATTRIBUTES)>;
    using on_NtDeleteObjectAuditAlarm_fn                           = std::function<void(PUNICODE_STRING, PVOID, BOOLEAN)>;
    using on_NtDeletePrivateNamespace_fn                           = std::function<void(HANDLE)>;
    using on_NtDeleteValueKey_fn                                   = std::function<void(HANDLE, PUNICODE_STRING)>;
    using on_NtDisableLastKnownGood_fn                             = std::function<void()>;
    using on_NtDisplayString_fn                                    = std::function<void(PUNICODE_STRING)>;
    using on_NtDuplicateToken_fn                                   = std::function<void(HANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, BOOLEAN, TOKEN_TYPE, PHANDLE)>;
    using on_NtEnableLastKnownGood_fn                              = std::function<void()>;
    using on_NtEnumerateDriverEntries_fn                           = std::function<void(PVOID, PULONG)>;
    using on_NtEnumerateValueKey_fn                                = std::function<void(HANDLE, ULONG, KEY_VALUE_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtFilterToken_fn                                      = std::function<void(HANDLE, ULONG, PTOKEN_GROUPS, PTOKEN_PRIVILEGES, PTOKEN_GROUPS, PHANDLE)>;
    using on_NtFindAtom_fn                                         = std::function<void(PWSTR, ULONG, PRTL_ATOM)>;
    using on_NtFlushKey_fn                                         = std::function<void(HANDLE)>;
    using on_NtFlushWriteBuffer_fn                                 = std::function<void()>;
    using on_NtFreeUserPhysicalPages_fn                            = std::function<void(HANDLE, PULONG_PTR, PULONG_PTR)>;
    using on_NtFreeVirtualMemory_fn                                = std::function<void(HANDLE, PVOID, PSIZE_T, ULONG)>;
    using on_NtFreezeRegistry_fn                                   = std::function<void(ULONG)>;
    using on_NtFsControlFile_fn                                    = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, ULONG, PVOID, ULONG, PVOID, ULONG)>;
    using on_NtGetContextThread_fn                                 = std::function<void(HANDLE, PCONTEXT)>;
    using on_NtGetCurrentProcessorNumber_fn                        = std::function<void()>;
    using on_NtGetDevicePowerState_fn                              = std::function<void(HANDLE, DEVICE_POWER_STATE)>;
    using on_NtGetMUIRegistryInfo_fn                               = std::function<void(ULONG, PULONG, PVOID)>;
    using on_NtGetNlsSectionPtr_fn                                 = std::function<void(ULONG, ULONG, PVOID, PVOID, PULONG)>;
    using on_NtGetWriteWatch_fn                                    = std::function<void(HANDLE, ULONG, PVOID, SIZE_T, PVOID, PULONG_PTR, PULONG)>;
    using on_NtImpersonateAnonymousToken_fn                        = std::function<void(HANDLE)>;
    using on_NtInitializeNlsFiles_fn                               = std::function<void(PVOID, PLCID, PLARGE_INTEGER)>;
    using on_NtInitiatePowerAction_fn                              = std::function<void(POWER_ACTION, SYSTEM_POWER_STATE, ULONG, BOOLEAN)>;
    using on_NtIsSystemResumeAutomatic_fn                          = std::function<void()>;
    using on_NtLoadDriver_fn                                       = std::function<void(PUNICODE_STRING)>;
    using on_NtLoadKey2_fn                                         = std::function<void(POBJECT_ATTRIBUTES, POBJECT_ATTRIBUTES, ULONG)>;
    using on_NtLoadKeyEx_fn                                        = std::function<void(POBJECT_ATTRIBUTES, POBJECT_ATTRIBUTES, ULONG, HANDLE, PVOID, PVOID, PVOID, PVOID)>;
    using on_NtLoadKey_fn                                          = std::function<void(POBJECT_ATTRIBUTES, POBJECT_ATTRIBUTES)>;
    using on_NtLockFile_fn                                         = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PLARGE_INTEGER, PLARGE_INTEGER, ULONG, BOOLEAN, BOOLEAN)>;
    using on_NtLockRegistryKey_fn                                  = std::function<void(HANDLE)>;
    using on_NtMakeTemporaryObject_fn                              = std::function<void(HANDLE)>;
    using on_NtMapUserPhysicalPages_fn                             = std::function<void(PVOID, ULONG_PTR, PULONG_PTR)>;
    using on_NtModifyBootEntry_fn                                  = std::function<void(PBOOT_ENTRY)>;
    using on_NtNotifyChangeDirectoryFile_fn                        = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PVOID, ULONG, ULONG, BOOLEAN)>;
    using on_NtNotifyChangeKey_fn                                  = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, ULONG, BOOLEAN, PVOID, ULONG, BOOLEAN)>;
    using on_NtNotifyChangeMultipleKeys_fn                         = std::function<void(HANDLE, ULONG, POBJECT_ATTRIBUTES, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, ULONG, BOOLEAN, PVOID, ULONG, BOOLEAN)>;
    using on_NtNotifyChangeSession_fn                              = std::function<void(HANDLE, ULONG, PVOID, ULONG, IO_SESSION_STATE, IO_SESSION_STATE, PVOID, ULONG)>;
    using on_NtOpenEventPair_fn                                    = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenEvent_fn                                        = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenFile_fn                                         = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PIO_STATUS_BLOCK, ULONG, ULONG)>;
    using on_NtOpenKeyTransactedEx_fn                              = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG, HANDLE)>;
    using on_NtOpenKeyTransacted_fn                                = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE)>;
    using on_NtOpenKeyedEvent_fn                                   = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenMutant_fn                                       = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenPrivateNamespace_fn                             = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PVOID)>;
    using on_NtOpenSection_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenSemaphore_fn                                    = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenSession_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenSymbolicLinkObject_fn                           = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_NtOpenThreadTokenEx_fn                                = std::function<void(HANDLE, ACCESS_MASK, BOOLEAN, ULONG, PHANDLE)>;
    using on_NtOpenThreadToken_fn                                  = std::function<void(HANDLE, ACCESS_MASK, BOOLEAN, PHANDLE)>;
    using on_NtPlugPlayControl_fn                                  = std::function<void(PLUGPLAY_CONTROL_CLASS, PVOID, ULONG)>;
    using on_NtPrePrepareEnlistment_fn                             = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_NtPrepareComplete_fn                                  = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_NtPrivilegedServiceAuditAlarm_fn                      = std::function<void(PUNICODE_STRING, PUNICODE_STRING, HANDLE, PPRIVILEGE_SET, BOOLEAN)>;
    using on_NtPropagationComplete_fn                              = std::function<void(HANDLE, ULONG, ULONG, PVOID)>;
    using on_NtQueryDebugFilterState_fn                            = std::function<void(ULONG, ULONG)>;
    using on_NtQueryDefaultLocale_fn                               = std::function<void(BOOLEAN, PLCID)>;
    using on_NtQueryDriverEntryOrder_fn                            = std::function<void(PULONG, PULONG)>;
    using on_NtQueryEvent_fn                                       = std::function<void(HANDLE, EVENT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInformationAtom_fn                             = std::function<void(RTL_ATOM, ATOM_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInformationThread_fn                           = std::function<void(HANDLE, THREADINFOCLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInformationTransactionManager_fn               = std::function<void(HANDLE, TRANSACTIONMANAGER_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryInstallUILanguage_fn                           = std::function<void(LANGID)>;
    using on_NtQueryIntervalProfile_fn                             = std::function<void(KPROFILE_SOURCE, PULONG)>;
    using on_NtQueryIoCompletion_fn                                = std::function<void(HANDLE, IO_COMPLETION_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryLicenseValue_fn                                = std::function<void(PUNICODE_STRING, PULONG, PVOID, ULONG, PULONG)>;
    using on_NtQueryMultipleValueKey_fn                            = std::function<void(HANDLE, PKEY_VALUE_ENTRY, ULONG, PVOID, PULONG, PULONG)>;
    using on_NtQueryMutant_fn                                      = std::function<void(HANDLE, MUTANT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryObject_fn                                      = std::function<void(HANDLE, OBJECT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQueryOpenSubKeysEx_fn                               = std::function<void(POBJECT_ATTRIBUTES, ULONG, PVOID, PULONG)>;
    using on_NtQueryOpenSubKeys_fn                                 = std::function<void(POBJECT_ATTRIBUTES, PULONG)>;
    using on_NtQueryPerformanceCounter_fn                          = std::function<void(PLARGE_INTEGER, PLARGE_INTEGER)>;
    using on_NtQuerySecurityObject_fn                              = std::function<void(HANDLE, SECURITY_INFORMATION, PSECURITY_DESCRIPTOR, ULONG, PULONG)>;
    using on_NtQuerySystemInformation_fn                           = std::function<void(SYSTEM_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_NtQuerySystemTime_fn                                  = std::function<void(PLARGE_INTEGER)>;
    using on_NtQueryTimerResolution_fn                             = std::function<void(PULONG, PULONG, PULONG)>;
    using on_NtQueryVirtualMemory_fn                               = std::function<void(HANDLE, PVOID, MEMORY_INFORMATION_CLASS, PVOID, SIZE_T, PSIZE_T)>;
    using on_NtQueryVolumeInformationFile_fn                       = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, FS_INFORMATION_CLASS)>;
    using on_NtQueueApcThreadEx_fn                                 = std::function<void(HANDLE, HANDLE, PPS_APC_ROUTINE, PVOID, PVOID, PVOID)>;
    using on_NtQueueApcThread_fn                                   = std::function<void(HANDLE, PPS_APC_ROUTINE, PVOID, PVOID, PVOID)>;
    using on_NtReadFileScatter_fn                                  = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PFILE_SEGMENT_ELEMENT, ULONG, PLARGE_INTEGER, PULONG)>;
    using on_NtReadFile_fn                                         = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PVOID, ULONG, PLARGE_INTEGER, PULONG)>;
    using on_NtReadVirtualMemory_fn                                = std::function<void(HANDLE, PVOID, PVOID, SIZE_T, PSIZE_T)>;
    using on_NtRecoverEnlistment_fn                                = std::function<void(HANDLE, PVOID)>;
    using on_NtRecoverResourceManager_fn                           = std::function<void(HANDLE)>;
    using on_NtReleaseKeyedEvent_fn                                = std::function<void(HANDLE, PVOID, BOOLEAN, PLARGE_INTEGER)>;
    using on_NtReleaseSemaphore_fn                                 = std::function<void(HANDLE, LONG, PLONG)>;
    using on_NtRenameTransactionManager_fn                         = std::function<void(PUNICODE_STRING, LPGUID)>;
    using on_NtReplacePartitionUnit_fn                             = std::function<void(PUNICODE_STRING, PUNICODE_STRING, ULONG)>;
    using on_NtReplyWaitReceivePortEx_fn                           = std::function<void(HANDLE, PVOID, PPORT_MESSAGE, PPORT_MESSAGE, PLARGE_INTEGER)>;
    using on_NtReplyWaitReceivePort_fn                             = std::function<void(HANDLE, PVOID, PPORT_MESSAGE, PPORT_MESSAGE)>;
    using on_NtReplyWaitReplyPort_fn                               = std::function<void(HANDLE, PPORT_MESSAGE)>;
    using on_NtRequestWaitReplyPort_fn                             = std::function<void(HANDLE, PPORT_MESSAGE, PPORT_MESSAGE)>;
    using on_NtResetEvent_fn                                       = std::function<void(HANDLE, PLONG)>;
    using on_NtRestoreKey_fn                                       = std::function<void(HANDLE, HANDLE, ULONG)>;
    using on_NtRollbackEnlistment_fn                               = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_NtRollbackTransaction_fn                              = std::function<void(HANDLE, BOOLEAN)>;
    using on_NtRollforwardTransactionManager_fn                    = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_NtSaveKeyEx_fn                                        = std::function<void(HANDLE, HANDLE, ULONG)>;
    using on_NtSaveKey_fn                                          = std::function<void(HANDLE, HANDLE)>;
    using on_NtSaveMergedKeys_fn                                   = std::function<void(HANDLE, HANDLE, HANDLE)>;
    using on_NtSecureConnectPort_fn                                = std::function<void(PHANDLE, PUNICODE_STRING, PSECURITY_QUALITY_OF_SERVICE, PPORT_VIEW, PSID, PREMOTE_PORT_VIEW, PULONG, PVOID, PULONG)>;
    using on_NtSerializeBoot_fn                                    = std::function<void()>;
    using on_NtSetDebugFilterState_fn                              = std::function<void(ULONG, ULONG, BOOLEAN)>;
    using on_NtSetDefaultHardErrorPort_fn                          = std::function<void(HANDLE)>;
    using on_NtSetDefaultLocale_fn                                 = std::function<void(BOOLEAN, LCID)>;
    using on_NtSetDriverEntryOrder_fn                              = std::function<void(PULONG, ULONG)>;
    using on_NtSetEventBoostPriority_fn                            = std::function<void(HANDLE)>;
    using on_NtSetEvent_fn                                         = std::function<void(HANDLE, PLONG)>;
    using on_NtSetHighEventPair_fn                                 = std::function<void(HANDLE)>;
    using on_NtSetHighWaitLowEventPair_fn                          = std::function<void(HANDLE)>;
    using on_NtSetInformationEnlistment_fn                         = std::function<void(HANDLE, ENLISTMENT_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_NtSetIntervalProfile_fn                               = std::function<void(ULONG, KPROFILE_SOURCE)>;
    using on_NtSetIoCompletionEx_fn                                = std::function<void(HANDLE, HANDLE, PVOID, PVOID, NTSTATUS, ULONG_PTR)>;
    using on_NtSetIoCompletion_fn                                  = std::function<void(HANDLE, PVOID, PVOID, NTSTATUS, ULONG_PTR)>;
    using on_NtSetSecurityObject_fn                                = std::function<void(HANDLE, SECURITY_INFORMATION, PSECURITY_DESCRIPTOR)>;
    using on_NtSetTimerResolution_fn                               = std::function<void(ULONG, BOOLEAN, PULONG)>;
    using on_NtSetVolumeInformationFile_fn                         = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, FS_INFORMATION_CLASS)>;
    using on_NtShutdownWorkerFactory_fn                            = std::function<void(HANDLE, LONG)>;
    using on_NtStartProfile_fn                                     = std::function<void(HANDLE)>;
    using on_NtSystemDebugControl_fn                               = std::function<void(SYSDBG_COMMAND, PVOID, ULONG, PVOID, ULONG, PULONG)>;
    using on_NtTestAlert_fn                                        = std::function<void()>;
    using on_NtThawTransactions_fn                                 = std::function<void()>;
    using on_NtTraceEvent_fn                                       = std::function<void(HANDLE, ULONG, ULONG, PVOID)>;
    using on_NtTranslateFilePath_fn                                = std::function<void(PFILE_PATH, ULONG, PFILE_PATH, PULONG)>;
    using on_NtUnloadKey_fn                                        = std::function<void(POBJECT_ATTRIBUTES)>;
    using on_NtUnlockVirtualMemory_fn                              = std::function<void(HANDLE, PVOID, PSIZE_T, ULONG)>;
    using on_NtUnmapViewOfSection_fn                               = std::function<void(HANDLE, PVOID)>;
    using on_NtVdmControl_fn                                       = std::function<void(VDMSERVICECLASS, PVOID)>;
    using on_NtWaitForDebugEvent_fn                                = std::function<void(HANDLE, BOOLEAN, PLARGE_INTEGER, PDBGUI_WAIT_STATE_CHANGE)>;
    using on_NtWaitForKeyedEvent_fn                                = std::function<void(HANDLE, PVOID, BOOLEAN, PLARGE_INTEGER)>;
    using on_NtWaitForMultipleObjects32_fn                         = std::function<void(ULONG, LONG, WAIT_TYPE, BOOLEAN, PLARGE_INTEGER)>;
    using on_NtWaitForMultipleObjects_fn                           = std::function<void(ULONG, HANDLE, WAIT_TYPE, BOOLEAN, PLARGE_INTEGER)>;
    using on_NtWaitForWorkViaWorkerFactory_fn                      = std::function<void(HANDLE, PFILE_IO_COMPLETION_INFORMATION, LONG, LONG, LONG)>;
    using on_NtWaitLowEventPair_fn                                 = std::function<void(HANDLE)>;
    using on_NtWorkerFactoryWorkerReady_fn                         = std::function<void(HANDLE)>;
    using on_NtWriteFileGather_fn                                  = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PFILE_SEGMENT_ELEMENT, ULONG, PLARGE_INTEGER, PULONG)>;
    using on_NtWriteFile_fn                                        = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PVOID, ULONG, PLARGE_INTEGER, PULONG)>;
    using on_NtWriteRequestData_fn                                 = std::function<void(HANDLE, PPORT_MESSAGE, ULONG, PVOID, SIZE_T, PSIZE_T)>;
    using on_NtWriteVirtualMemory_fn                               = std::function<void(HANDLE, PVOID, PVOID, SIZE_T, PSIZE_T)>;
    using on_ZwAccessCheckAndAuditAlarm_fn                         = std::function<void(PUNICODE_STRING, PVOID, PUNICODE_STRING, PUNICODE_STRING, PSECURITY_DESCRIPTOR, ACCESS_MASK, PGENERIC_MAPPING, BOOLEAN, PACCESS_MASK, PNTSTATUS, PBOOLEAN)>;
    using on_ZwAccessCheckByTypeResultListAndAuditAlarmByHandle_fn = std::function<void(PUNICODE_STRING, PVOID, HANDLE, PUNICODE_STRING, PUNICODE_STRING, PSECURITY_DESCRIPTOR, PSID, ACCESS_MASK, AUDIT_EVENT_TYPE, ULONG, POBJECT_TYPE_LIST, ULONG, PGENERIC_MAPPING, BOOLEAN, PACCESS_MASK, PNTSTATUS, PBOOLEAN)>;
    using on_ZwAddBootEntry_fn                                     = std::function<void(PBOOT_ENTRY, PULONG)>;
    using on_ZwAdjustGroupsToken_fn                                = std::function<void(HANDLE, BOOLEAN, PTOKEN_GROUPS, ULONG, PTOKEN_GROUPS, PULONG)>;
    using on_ZwAdjustPrivilegesToken_fn                            = std::function<void(HANDLE, BOOLEAN, PTOKEN_PRIVILEGES, ULONG, PTOKEN_PRIVILEGES, PULONG)>;
    using on_ZwAllocateLocallyUniqueId_fn                          = std::function<void(PLUID)>;
    using on_ZwAlpcCancelMessage_fn                                = std::function<void(HANDLE, ULONG, PALPC_CONTEXT_ATTR)>;
    using on_ZwAlpcConnectPort_fn                                  = std::function<void(PHANDLE, PUNICODE_STRING, POBJECT_ATTRIBUTES, PALPC_PORT_ATTRIBUTES, ULONG, PSID, PPORT_MESSAGE, PULONG, PALPC_MESSAGE_ATTRIBUTES, PALPC_MESSAGE_ATTRIBUTES, PLARGE_INTEGER)>;
    using on_ZwAlpcCreatePort_fn                                   = std::function<void(PHANDLE, POBJECT_ATTRIBUTES, PALPC_PORT_ATTRIBUTES)>;
    using on_ZwAlpcCreateResourceReserve_fn                        = std::function<void(HANDLE, ULONG, SIZE_T, PALPC_HANDLE)>;
    using on_ZwAlpcCreateSectionView_fn                            = std::function<void(HANDLE, ULONG, PALPC_DATA_VIEW_ATTR)>;
    using on_ZwAlpcCreateSecurityContext_fn                        = std::function<void(HANDLE, ULONG, PALPC_SECURITY_ATTR)>;
    using on_ZwAlpcDeletePortSection_fn                            = std::function<void(HANDLE, ULONG, ALPC_HANDLE)>;
    using on_ZwAlpcImpersonateClientOfPort_fn                      = std::function<void(HANDLE, PPORT_MESSAGE, PVOID)>;
    using on_ZwAlpcOpenSenderProcess_fn                            = std::function<void(PHANDLE, HANDLE, PPORT_MESSAGE, ULONG, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwAlpcOpenSenderThread_fn                             = std::function<void(PHANDLE, HANDLE, PPORT_MESSAGE, ULONG, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwAlpcQueryInformationMessage_fn                      = std::function<void(HANDLE, PPORT_MESSAGE, ALPC_MESSAGE_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwAlpcQueryInformation_fn                             = std::function<void(HANDLE, ALPC_PORT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwAreMappedFilesTheSame_fn                            = std::function<void(PVOID, PVOID)>;
    using on_ZwAssignProcessToJobObject_fn                         = std::function<void(HANDLE, HANDLE)>;
    using on_ZwCancelIoFile_fn                                     = std::function<void(HANDLE, PIO_STATUS_BLOCK)>;
    using on_ZwCancelTimer_fn                                      = std::function<void(HANDLE, PBOOLEAN)>;
    using on_ZwCloseObjectAuditAlarm_fn                            = std::function<void(PUNICODE_STRING, PVOID, BOOLEAN)>;
    using on_ZwCommitComplete_fn                                   = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwCompareTokens_fn                                    = std::function<void(HANDLE, HANDLE, PBOOLEAN)>;
    using on_ZwCompressKey_fn                                      = std::function<void(HANDLE)>;
    using on_ZwContinue_fn                                         = std::function<void(PCONTEXT, BOOLEAN)>;
    using on_ZwCreateDebugObject_fn                                = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG)>;
    using on_ZwCreateDirectoryObject_fn                            = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwCreateEnlistment_fn                                 = std::function<void(PHANDLE, ACCESS_MASK, HANDLE, HANDLE, POBJECT_ATTRIBUTES, ULONG, NOTIFICATION_MASK, PVOID)>;
    using on_ZwCreateJobObject_fn                                  = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwCreateKey_fn                                        = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG, PUNICODE_STRING, ULONG, PULONG)>;
    using on_ZwCreateKeyedEvent_fn                                 = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG)>;
    using on_ZwCreateMailslotFile_fn                               = std::function<void(PHANDLE, ULONG, POBJECT_ATTRIBUTES, PIO_STATUS_BLOCK, ULONG, ULONG, ULONG, PLARGE_INTEGER)>;
    using on_ZwCreateMutant_fn                                     = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, BOOLEAN)>;
    using on_ZwCreateNamedPipeFile_fn                              = std::function<void(PHANDLE, ULONG, POBJECT_ATTRIBUTES, PIO_STATUS_BLOCK, ULONG, ULONG, ULONG, ULONG, ULONG, ULONG, ULONG, ULONG, ULONG, PLARGE_INTEGER)>;
    using on_ZwCreatePort_fn                                       = std::function<void(PHANDLE, POBJECT_ATTRIBUTES, ULONG, ULONG, ULONG)>;
    using on_ZwCreateProcessEx_fn                                  = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, ULONG, HANDLE, HANDLE, HANDLE, ULONG)>;
    using on_ZwCreateProcess_fn                                    = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, BOOLEAN, HANDLE, HANDLE, HANDLE)>;
    using on_ZwCreateProfile_fn                                    = std::function<void(PHANDLE, HANDLE, PVOID, SIZE_T, ULONG, PULONG, ULONG, KPROFILE_SOURCE, KAFFINITY)>;
    using on_ZwCreateResourceManager_fn                            = std::function<void(PHANDLE, ACCESS_MASK, HANDLE, LPGUID, POBJECT_ATTRIBUTES, ULONG, PUNICODE_STRING)>;
    using on_ZwCreateSymbolicLinkObject_fn                         = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PUNICODE_STRING)>;
    using on_ZwCreateTimer_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, TIMER_TYPE)>;
    using on_ZwCreateTransactionManager_fn                         = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PUNICODE_STRING, ULONG, ULONG)>;
    using on_ZwCreateWaitablePort_fn                               = std::function<void(PHANDLE, POBJECT_ATTRIBUTES, ULONG, ULONG, ULONG)>;
    using on_ZwDebugContinue_fn                                    = std::function<void(HANDLE, PCLIENT_ID, NTSTATUS)>;
    using on_ZwDelayExecution_fn                                   = std::function<void(BOOLEAN, PLARGE_INTEGER)>;
    using on_ZwDeleteAtom_fn                                       = std::function<void(RTL_ATOM)>;
    using on_ZwDeleteDriverEntry_fn                                = std::function<void(ULONG)>;
    using on_ZwDeleteKey_fn                                        = std::function<void(HANDLE)>;
    using on_ZwDeviceIoControlFile_fn                              = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, ULONG, PVOID, ULONG, PVOID, ULONG)>;
    using on_ZwDrawText_fn                                         = std::function<void(PUNICODE_STRING)>;
    using on_ZwDuplicateObject_fn                                  = std::function<void(HANDLE, HANDLE, HANDLE, PHANDLE, ACCESS_MASK, ULONG, ULONG)>;
    using on_ZwEnumerateBootEntries_fn                             = std::function<void(PVOID, PULONG)>;
    using on_ZwEnumerateKey_fn                                     = std::function<void(HANDLE, ULONG, KEY_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwEnumerateSystemEnvironmentValuesEx_fn               = std::function<void(ULONG, PVOID, PULONG)>;
    using on_ZwEnumerateTransactionObject_fn                       = std::function<void(HANDLE, KTMOBJECT_TYPE, PKTMOBJECT_CURSOR, ULONG, PULONG)>;
    using on_ZwExtendSection_fn                                    = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwFlushBuffersFile_fn                                 = std::function<void(HANDLE, PIO_STATUS_BLOCK)>;
    using on_ZwFlushInstallUILanguage_fn                           = std::function<void(LANGID, ULONG)>;
    using on_ZwFlushInstructionCache_fn                            = std::function<void(HANDLE, PVOID, SIZE_T)>;
    using on_ZwFlushProcessWriteBuffers_fn                         = std::function<void()>;
    using on_ZwFlushVirtualMemory_fn                               = std::function<void(HANDLE, PVOID, PSIZE_T, PIO_STATUS_BLOCK)>;
    using on_ZwFreezeTransactions_fn                               = std::function<void(PLARGE_INTEGER, PLARGE_INTEGER)>;
    using on_ZwGetNextProcess_fn                                   = std::function<void(HANDLE, ACCESS_MASK, ULONG, ULONG, PHANDLE)>;
    using on_ZwGetNextThread_fn                                    = std::function<void(HANDLE, HANDLE, ACCESS_MASK, ULONG, ULONG, PHANDLE)>;
    using on_ZwGetNotificationResourceManager_fn                   = std::function<void(HANDLE, PTRANSACTION_NOTIFICATION, ULONG, PLARGE_INTEGER, PULONG, ULONG, ULONG_PTR)>;
    using on_ZwImpersonateClientOfPort_fn                          = std::function<void(HANDLE, PPORT_MESSAGE)>;
    using on_ZwImpersonateThread_fn                                = std::function<void(HANDLE, HANDLE, PSECURITY_QUALITY_OF_SERVICE)>;
    using on_ZwInitializeRegistry_fn                               = std::function<void(USHORT)>;
    using on_ZwIsProcessInJob_fn                                   = std::function<void(HANDLE, HANDLE)>;
    using on_ZwIsUILanguageComitted_fn                             = std::function<void()>;
    using on_ZwListenPort_fn                                       = std::function<void(HANDLE, PPORT_MESSAGE)>;
    using on_ZwLockProductActivationKeys_fn                        = std::function<void(ULONG, ULONG)>;
    using on_ZwLockVirtualMemory_fn                                = std::function<void(HANDLE, PVOID, PSIZE_T, ULONG)>;
    using on_ZwMakePermanentObject_fn                              = std::function<void(HANDLE)>;
    using on_ZwMapCMFModule_fn                                     = std::function<void(ULONG, ULONG, PULONG, PULONG, PULONG, PVOID)>;
    using on_ZwMapUserPhysicalPagesScatter_fn                      = std::function<void(PVOID, ULONG_PTR, PULONG_PTR)>;
    using on_ZwMapViewOfSection_fn                                 = std::function<void(HANDLE, HANDLE, PVOID, ULONG_PTR, SIZE_T, PLARGE_INTEGER, PSIZE_T, SECTION_INHERIT, ULONG, WIN32_PROTECTION_MASK)>;
    using on_ZwModifyDriverEntry_fn                                = std::function<void(PEFI_DRIVER_ENTRY)>;
    using on_ZwOpenDirectoryObject_fn                              = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenEnlistment_fn                                   = std::function<void(PHANDLE, ACCESS_MASK, HANDLE, LPGUID, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenIoCompletion_fn                                 = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenJobObject_fn                                    = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenKeyEx_fn                                        = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, ULONG)>;
    using on_ZwOpenKey_fn                                          = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenObjectAuditAlarm_fn                             = std::function<void(PUNICODE_STRING, PVOID, PUNICODE_STRING, PUNICODE_STRING, PSECURITY_DESCRIPTOR, HANDLE, ACCESS_MASK, ACCESS_MASK, PPRIVILEGE_SET, BOOLEAN, BOOLEAN, PBOOLEAN)>;
    using on_ZwOpenProcessTokenEx_fn                               = std::function<void(HANDLE, ACCESS_MASK, ULONG, PHANDLE)>;
    using on_ZwOpenProcessToken_fn                                 = std::function<void(HANDLE, ACCESS_MASK, PHANDLE)>;
    using on_ZwOpenProcess_fn                                      = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PCLIENT_ID)>;
    using on_ZwOpenResourceManager_fn                              = std::function<void(PHANDLE, ACCESS_MASK, HANDLE, LPGUID, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenThread_fn                                       = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PCLIENT_ID)>;
    using on_ZwOpenTimer_fn                                        = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES)>;
    using on_ZwOpenTransactionManager_fn                           = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PUNICODE_STRING, LPGUID, ULONG)>;
    using on_ZwOpenTransaction_fn                                  = std::function<void(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, LPGUID, HANDLE)>;
    using on_ZwPowerInformation_fn                                 = std::function<void(POWER_INFORMATION_LEVEL, PVOID, ULONG, PVOID, ULONG)>;
    using on_ZwPrePrepareComplete_fn                               = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwPrepareEnlistment_fn                                = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwPrivilegeCheck_fn                                   = std::function<void(HANDLE, PPRIVILEGE_SET, PBOOLEAN)>;
    using on_ZwPrivilegeObjectAuditAlarm_fn                        = std::function<void(PUNICODE_STRING, PVOID, HANDLE, ACCESS_MASK, PPRIVILEGE_SET, BOOLEAN)>;
    using on_ZwPropagationFailed_fn                                = std::function<void(HANDLE, ULONG, NTSTATUS)>;
    using on_ZwProtectVirtualMemory_fn                             = std::function<void(HANDLE, PVOID, PSIZE_T, WIN32_PROTECTION_MASK, PULONG)>;
    using on_ZwPulseEvent_fn                                       = std::function<void(HANDLE, PLONG)>;
    using on_ZwQueryAttributesFile_fn                              = std::function<void(POBJECT_ATTRIBUTES, PFILE_BASIC_INFORMATION)>;
    using on_ZwQueryBootEntryOrder_fn                              = std::function<void(PULONG, PULONG)>;
    using on_ZwQueryBootOptions_fn                                 = std::function<void(PBOOT_OPTIONS, PULONG)>;
    using on_ZwQueryDefaultUILanguage_fn                           = std::function<void(LANGID)>;
    using on_ZwQueryDirectoryFile_fn                               = std::function<void(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, PVOID, ULONG, FILE_INFORMATION_CLASS, BOOLEAN, PUNICODE_STRING, BOOLEAN)>;
    using on_ZwQueryDirectoryObject_fn                             = std::function<void(HANDLE, PVOID, ULONG, BOOLEAN, BOOLEAN, PULONG, PULONG)>;
    using on_ZwQueryEaFile_fn                                      = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, BOOLEAN, PVOID, ULONG, PULONG, BOOLEAN)>;
    using on_ZwQueryFullAttributesFile_fn                          = std::function<void(POBJECT_ATTRIBUTES, PFILE_NETWORK_OPEN_INFORMATION)>;
    using on_ZwQueryInformationEnlistment_fn                       = std::function<void(HANDLE, ENLISTMENT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryInformationFile_fn                             = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, FILE_INFORMATION_CLASS)>;
    using on_ZwQueryInformationJobObject_fn                        = std::function<void(HANDLE, JOBOBJECTINFOCLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryInformationPort_fn                             = std::function<void(HANDLE, PORT_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryInformationProcess_fn                          = std::function<void(HANDLE, PROCESSINFOCLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryInformationResourceManager_fn                  = std::function<void(HANDLE, RESOURCEMANAGER_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryInformationToken_fn                            = std::function<void(HANDLE, TOKEN_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryInformationTransaction_fn                      = std::function<void(HANDLE, TRANSACTION_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryInformationWorkerFactory_fn                    = std::function<void(HANDLE, WORKERFACTORYINFOCLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryKey_fn                                         = std::function<void(HANDLE, KEY_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryPortInformationProcess_fn                      = std::function<void()>;
    using on_ZwQueryQuotaInformationFile_fn                        = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, BOOLEAN, PVOID, ULONG, PULONG, BOOLEAN)>;
    using on_ZwQuerySection_fn                                     = std::function<void(HANDLE, SECTION_INFORMATION_CLASS, PVOID, SIZE_T, PSIZE_T)>;
    using on_ZwQuerySecurityAttributesToken_fn                     = std::function<void(HANDLE, PUNICODE_STRING, ULONG, PVOID, ULONG, PULONG)>;
    using on_ZwQuerySemaphore_fn                                   = std::function<void(HANDLE, SEMAPHORE_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQuerySymbolicLinkObject_fn                          = std::function<void(HANDLE, PUNICODE_STRING, PULONG)>;
    using on_ZwQuerySystemEnvironmentValueEx_fn                    = std::function<void(PUNICODE_STRING, LPGUID, PVOID, PULONG, PULONG)>;
    using on_ZwQuerySystemEnvironmentValue_fn                      = std::function<void(PUNICODE_STRING, PWSTR, USHORT, PUSHORT)>;
    using on_ZwQuerySystemInformationEx_fn                         = std::function<void(SYSTEM_INFORMATION_CLASS, PVOID, ULONG, PVOID, ULONG, PULONG)>;
    using on_ZwQueryTimer_fn                                       = std::function<void(HANDLE, TIMER_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwQueryValueKey_fn                                    = std::function<void(HANDLE, PUNICODE_STRING, KEY_VALUE_INFORMATION_CLASS, PVOID, ULONG, PULONG)>;
    using on_ZwRaiseException_fn                                   = std::function<void(PEXCEPTION_RECORD, PCONTEXT, BOOLEAN)>;
    using on_ZwRaiseHardError_fn                                   = std::function<void(NTSTATUS, ULONG, ULONG, PULONG_PTR, ULONG, PULONG)>;
    using on_ZwReadOnlyEnlistment_fn                               = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwReadRequestData_fn                                  = std::function<void(HANDLE, PPORT_MESSAGE, ULONG, PVOID, SIZE_T, PSIZE_T)>;
    using on_ZwRecoverTransactionManager_fn                        = std::function<void(HANDLE)>;
    using on_ZwRegisterProtocolAddressInformation_fn               = std::function<void(HANDLE, PCRM_PROTOCOL_ID, ULONG, PVOID, ULONG)>;
    using on_ZwRegisterThreadTerminatePort_fn                      = std::function<void(HANDLE)>;
    using on_ZwReleaseMutant_fn                                    = std::function<void(HANDLE, PLONG)>;
    using on_ZwReleaseWorkerFactoryWorker_fn                       = std::function<void(HANDLE)>;
    using on_ZwRemoveIoCompletionEx_fn                             = std::function<void(HANDLE, PFILE_IO_COMPLETION_INFORMATION, ULONG, PULONG, PLARGE_INTEGER, BOOLEAN)>;
    using on_ZwRemoveIoCompletion_fn                               = std::function<void(HANDLE, PVOID, PVOID, PIO_STATUS_BLOCK, PLARGE_INTEGER)>;
    using on_ZwRemoveProcessDebug_fn                               = std::function<void(HANDLE, HANDLE)>;
    using on_ZwRenameKey_fn                                        = std::function<void(HANDLE, PUNICODE_STRING)>;
    using on_ZwReplaceKey_fn                                       = std::function<void(POBJECT_ATTRIBUTES, HANDLE, POBJECT_ATTRIBUTES)>;
    using on_ZwReplyPort_fn                                        = std::function<void(HANDLE, PPORT_MESSAGE)>;
    using on_ZwRequestPort_fn                                      = std::function<void(HANDLE, PPORT_MESSAGE)>;
    using on_ZwResetWriteWatch_fn                                  = std::function<void(HANDLE, PVOID, SIZE_T)>;
    using on_ZwResumeProcess_fn                                    = std::function<void(HANDLE)>;
    using on_ZwResumeThread_fn                                     = std::function<void(HANDLE, PULONG)>;
    using on_ZwRollbackComplete_fn                                 = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwSetBootEntryOrder_fn                                = std::function<void(PULONG, ULONG)>;
    using on_ZwSetBootOptions_fn                                   = std::function<void(PBOOT_OPTIONS, ULONG)>;
    using on_ZwSetContextThread_fn                                 = std::function<void(HANDLE, PCONTEXT)>;
    using on_ZwSetDefaultUILanguage_fn                             = std::function<void(LANGID)>;
    using on_ZwSetEaFile_fn                                        = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG)>;
    using on_ZwSetInformationDebugObject_fn                        = std::function<void(HANDLE, DEBUGOBJECTINFOCLASS, PVOID, ULONG, PULONG)>;
    using on_ZwSetInformationFile_fn                               = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG, FILE_INFORMATION_CLASS)>;
    using on_ZwSetInformationJobObject_fn                          = std::function<void(HANDLE, JOBOBJECTINFOCLASS, PVOID, ULONG)>;
    using on_ZwSetInformationKey_fn                                = std::function<void(HANDLE, KEY_SET_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetInformationObject_fn                             = std::function<void(HANDLE, OBJECT_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetInformationProcess_fn                            = std::function<void(HANDLE, PROCESSINFOCLASS, PVOID, ULONG)>;
    using on_ZwSetInformationResourceManager_fn                    = std::function<void(HANDLE, RESOURCEMANAGER_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetInformationThread_fn                             = std::function<void(HANDLE, THREADINFOCLASS, PVOID, ULONG)>;
    using on_ZwSetInformationToken_fn                              = std::function<void(HANDLE, TOKEN_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetInformationTransactionManager_fn                 = std::function<void(HANDLE, TRANSACTIONMANAGER_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetInformationTransaction_fn                        = std::function<void(HANDLE, TRANSACTION_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetInformationWorkerFactory_fn                      = std::function<void(HANDLE, WORKERFACTORYINFOCLASS, PVOID, ULONG)>;
    using on_ZwSetLdtEntries_fn                                    = std::function<void(ULONG, ULONG, ULONG, ULONG, ULONG, ULONG)>;
    using on_ZwSetLowEventPair_fn                                  = std::function<void(HANDLE)>;
    using on_ZwSetLowWaitHighEventPair_fn                          = std::function<void(HANDLE)>;
    using on_ZwSetQuotaInformationFile_fn                          = std::function<void(HANDLE, PIO_STATUS_BLOCK, PVOID, ULONG)>;
    using on_ZwSetSystemEnvironmentValueEx_fn                      = std::function<void(PUNICODE_STRING, LPGUID, PVOID, ULONG, ULONG)>;
    using on_ZwSetSystemEnvironmentValue_fn                        = std::function<void(PUNICODE_STRING, PUNICODE_STRING)>;
    using on_ZwSetSystemInformation_fn                             = std::function<void(SYSTEM_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetSystemPowerState_fn                              = std::function<void(POWER_ACTION, SYSTEM_POWER_STATE, ULONG)>;
    using on_ZwSetSystemTime_fn                                    = std::function<void(PLARGE_INTEGER, PLARGE_INTEGER)>;
    using on_ZwSetThreadExecutionState_fn                          = std::function<void(EXECUTION_STATE, EXECUTION_STATE)>;
    using on_ZwSetTimerEx_fn                                       = std::function<void(HANDLE, TIMER_SET_INFORMATION_CLASS, PVOID, ULONG)>;
    using on_ZwSetTimer_fn                                         = std::function<void(HANDLE, PLARGE_INTEGER, PTIMER_APC_ROUTINE, PVOID, BOOLEAN, LONG, PBOOLEAN)>;
    using on_ZwSetUuidSeed_fn                                      = std::function<void(PCHAR)>;
    using on_ZwSetValueKey_fn                                      = std::function<void(HANDLE, PUNICODE_STRING, ULONG, ULONG, PVOID, ULONG)>;
    using on_ZwShutdownSystem_fn                                   = std::function<void(SHUTDOWN_ACTION)>;
    using on_ZwSignalAndWaitForSingleObject_fn                     = std::function<void(HANDLE, HANDLE, BOOLEAN, PLARGE_INTEGER)>;
    using on_ZwSinglePhaseReject_fn                                = std::function<void(HANDLE, PLARGE_INTEGER)>;
    using on_ZwStopProfile_fn                                      = std::function<void(HANDLE)>;
    using on_ZwSuspendProcess_fn                                   = std::function<void(HANDLE)>;
    using on_ZwSuspendThread_fn                                    = std::function<void(HANDLE, PULONG)>;
    using on_ZwTerminateJobObject_fn                               = std::function<void(HANDLE, NTSTATUS)>;
    using on_ZwTerminateProcess_fn                                 = std::function<void(HANDLE, NTSTATUS)>;
    using on_ZwTerminateThread_fn                                  = std::function<void(HANDLE, NTSTATUS)>;
    using on_ZwThawRegistry_fn                                     = std::function<void()>;
    using on_ZwTraceControl_fn                                     = std::function<void(ULONG, PVOID, ULONG, PVOID, ULONG, PULONG)>;
    using on_ZwUmsThreadYield_fn                                   = std::function<void(PVOID)>;
    using on_ZwUnloadDriver_fn                                     = std::function<void(PUNICODE_STRING)>;
    using on_ZwUnloadKey2_fn                                       = std::function<void(POBJECT_ATTRIBUTES, ULONG)>;
    using on_ZwUnloadKeyEx_fn                                      = std::function<void(POBJECT_ATTRIBUTES, HANDLE)>;
    using on_ZwUnlockFile_fn                                       = std::function<void(HANDLE, PIO_STATUS_BLOCK, PLARGE_INTEGER, PLARGE_INTEGER, ULONG)>;
    using on_ZwWaitForSingleObject_fn                              = std::function<void(HANDLE, BOOLEAN, PLARGE_INTEGER)>;
    using on_ZwWaitHighEventPair_fn                                = std::function<void(HANDLE)>;
    using on_ZwYieldExecution_fn                                   = std::function<void()>;

    struct syscalls32
    {
         syscalls32(core::Core& core, std::string_view module);
        ~syscalls32();

        using on_call_fn = std::function<void(const tracer::callcfg_t& callcfg)>;
        using callcfgs_t = std::array<tracer::callcfg_t, 399>;

        opt<bpid_t>                 register_all(proc_t proc, const on_call_fn& on_call);
        static const callcfgs_t&    callcfgs    ();

        opt<bpid_t> register_NtAcceptConnectPort                               (proc_t proc, const on_NtAcceptConnectPort_fn& on_func);
        opt<bpid_t> register_NtAccessCheck                                     (proc_t proc, const on_NtAccessCheck_fn& on_func);
        opt<bpid_t> register_NtAccessCheckByType                               (proc_t proc, const on_NtAccessCheckByType_fn& on_func);
        opt<bpid_t> register_NtAccessCheckByTypeAndAuditAlarm                  (proc_t proc, const on_NtAccessCheckByTypeAndAuditAlarm_fn& on_func);
        opt<bpid_t> register_NtAccessCheckByTypeResultList                     (proc_t proc, const on_NtAccessCheckByTypeResultList_fn& on_func);
        opt<bpid_t> register_NtAccessCheckByTypeResultListAndAuditAlarm        (proc_t proc, const on_NtAccessCheckByTypeResultListAndAuditAlarm_fn& on_func);
        opt<bpid_t> register_NtAddAtom                                         (proc_t proc, const on_NtAddAtom_fn& on_func);
        opt<bpid_t> register_NtAddDriverEntry                                  (proc_t proc, const on_NtAddDriverEntry_fn& on_func);
        opt<bpid_t> register_NtAlertResumeThread                               (proc_t proc, const on_NtAlertResumeThread_fn& on_func);
        opt<bpid_t> register_NtAlertThread                                     (proc_t proc, const on_NtAlertThread_fn& on_func);
        opt<bpid_t> register_NtAllocateReserveObject                           (proc_t proc, const on_NtAllocateReserveObject_fn& on_func);
        opt<bpid_t> register_NtAllocateUserPhysicalPages                       (proc_t proc, const on_NtAllocateUserPhysicalPages_fn& on_func);
        opt<bpid_t> register_NtAllocateUuids                                   (proc_t proc, const on_NtAllocateUuids_fn& on_func);
        opt<bpid_t> register_NtAllocateVirtualMemory                           (proc_t proc, const on_NtAllocateVirtualMemory_fn& on_func);
        opt<bpid_t> register_NtAlpcAcceptConnectPort                           (proc_t proc, const on_NtAlpcAcceptConnectPort_fn& on_func);
        opt<bpid_t> register_NtAlpcCreatePortSection                           (proc_t proc, const on_NtAlpcCreatePortSection_fn& on_func);
        opt<bpid_t> register_NtAlpcDeleteResourceReserve                       (proc_t proc, const on_NtAlpcDeleteResourceReserve_fn& on_func);
        opt<bpid_t> register_NtAlpcDeleteSectionView                           (proc_t proc, const on_NtAlpcDeleteSectionView_fn& on_func);
        opt<bpid_t> register_NtAlpcDeleteSecurityContext                       (proc_t proc, const on_NtAlpcDeleteSecurityContext_fn& on_func);
        opt<bpid_t> register_NtAlpcDisconnectPort                              (proc_t proc, const on_NtAlpcDisconnectPort_fn& on_func);
        opt<bpid_t> register_NtAlpcRevokeSecurityContext                       (proc_t proc, const on_NtAlpcRevokeSecurityContext_fn& on_func);
        opt<bpid_t> register_NtAlpcSendWaitReceivePort                         (proc_t proc, const on_NtAlpcSendWaitReceivePort_fn& on_func);
        opt<bpid_t> register_NtAlpcSetInformation                              (proc_t proc, const on_NtAlpcSetInformation_fn& on_func);
        opt<bpid_t> register_NtApphelpCacheControl                             (proc_t proc, const on_NtApphelpCacheControl_fn& on_func);
        opt<bpid_t> register_NtCancelIoFileEx                                  (proc_t proc, const on_NtCancelIoFileEx_fn& on_func);
        opt<bpid_t> register_NtCancelSynchronousIoFile                         (proc_t proc, const on_NtCancelSynchronousIoFile_fn& on_func);
        opt<bpid_t> register_NtClearEvent                                      (proc_t proc, const on_NtClearEvent_fn& on_func);
        opt<bpid_t> register_NtClose                                           (proc_t proc, const on_NtClose_fn& on_func);
        opt<bpid_t> register_NtCommitEnlistment                                (proc_t proc, const on_NtCommitEnlistment_fn& on_func);
        opt<bpid_t> register_NtCommitTransaction                               (proc_t proc, const on_NtCommitTransaction_fn& on_func);
        opt<bpid_t> register_NtCompactKeys                                     (proc_t proc, const on_NtCompactKeys_fn& on_func);
        opt<bpid_t> register_NtCompleteConnectPort                             (proc_t proc, const on_NtCompleteConnectPort_fn& on_func);
        opt<bpid_t> register_NtConnectPort                                     (proc_t proc, const on_NtConnectPort_fn& on_func);
        opt<bpid_t> register_NtCreateEvent                                     (proc_t proc, const on_NtCreateEvent_fn& on_func);
        opt<bpid_t> register_NtCreateEventPair                                 (proc_t proc, const on_NtCreateEventPair_fn& on_func);
        opt<bpid_t> register_NtCreateFile                                      (proc_t proc, const on_NtCreateFile_fn& on_func);
        opt<bpid_t> register_NtCreateIoCompletion                              (proc_t proc, const on_NtCreateIoCompletion_fn& on_func);
        opt<bpid_t> register_NtCreateJobSet                                    (proc_t proc, const on_NtCreateJobSet_fn& on_func);
        opt<bpid_t> register_NtCreateKeyTransacted                             (proc_t proc, const on_NtCreateKeyTransacted_fn& on_func);
        opt<bpid_t> register_NtCreatePagingFile                                (proc_t proc, const on_NtCreatePagingFile_fn& on_func);
        opt<bpid_t> register_NtCreatePrivateNamespace                          (proc_t proc, const on_NtCreatePrivateNamespace_fn& on_func);
        opt<bpid_t> register_NtCreateProfileEx                                 (proc_t proc, const on_NtCreateProfileEx_fn& on_func);
        opt<bpid_t> register_NtCreateSection                                   (proc_t proc, const on_NtCreateSection_fn& on_func);
        opt<bpid_t> register_NtCreateSemaphore                                 (proc_t proc, const on_NtCreateSemaphore_fn& on_func);
        opt<bpid_t> register_NtCreateThread                                    (proc_t proc, const on_NtCreateThread_fn& on_func);
        opt<bpid_t> register_NtCreateThreadEx                                  (proc_t proc, const on_NtCreateThreadEx_fn& on_func);
        opt<bpid_t> register_NtCreateToken                                     (proc_t proc, const on_NtCreateToken_fn& on_func);
        opt<bpid_t> register_NtCreateTransaction                               (proc_t proc, const on_NtCreateTransaction_fn& on_func);
        opt<bpid_t> register_NtCreateUserProcess                               (proc_t proc, const on_NtCreateUserProcess_fn& on_func);
        opt<bpid_t> register_NtCreateWorkerFactory                             (proc_t proc, const on_NtCreateWorkerFactory_fn& on_func);
        opt<bpid_t> register_NtDebugActiveProcess                              (proc_t proc, const on_NtDebugActiveProcess_fn& on_func);
        opt<bpid_t> register_NtDeleteBootEntry                                 (proc_t proc, const on_NtDeleteBootEntry_fn& on_func);
        opt<bpid_t> register_NtDeleteFile                                      (proc_t proc, const on_NtDeleteFile_fn& on_func);
        opt<bpid_t> register_NtDeleteObjectAuditAlarm                          (proc_t proc, const on_NtDeleteObjectAuditAlarm_fn& on_func);
        opt<bpid_t> register_NtDeletePrivateNamespace                          (proc_t proc, const on_NtDeletePrivateNamespace_fn& on_func);
        opt<bpid_t> register_NtDeleteValueKey                                  (proc_t proc, const on_NtDeleteValueKey_fn& on_func);
        opt<bpid_t> register_NtDisableLastKnownGood                            (proc_t proc, const on_NtDisableLastKnownGood_fn& on_func);
        opt<bpid_t> register_NtDisplayString                                   (proc_t proc, const on_NtDisplayString_fn& on_func);
        opt<bpid_t> register_NtDuplicateToken                                  (proc_t proc, const on_NtDuplicateToken_fn& on_func);
        opt<bpid_t> register_NtEnableLastKnownGood                             (proc_t proc, const on_NtEnableLastKnownGood_fn& on_func);
        opt<bpid_t> register_NtEnumerateDriverEntries                          (proc_t proc, const on_NtEnumerateDriverEntries_fn& on_func);
        opt<bpid_t> register_NtEnumerateValueKey                               (proc_t proc, const on_NtEnumerateValueKey_fn& on_func);
        opt<bpid_t> register_NtFilterToken                                     (proc_t proc, const on_NtFilterToken_fn& on_func);
        opt<bpid_t> register_NtFindAtom                                        (proc_t proc, const on_NtFindAtom_fn& on_func);
        opt<bpid_t> register_NtFlushKey                                        (proc_t proc, const on_NtFlushKey_fn& on_func);
        opt<bpid_t> register_NtFlushWriteBuffer                                (proc_t proc, const on_NtFlushWriteBuffer_fn& on_func);
        opt<bpid_t> register_NtFreeUserPhysicalPages                           (proc_t proc, const on_NtFreeUserPhysicalPages_fn& on_func);
        opt<bpid_t> register_NtFreeVirtualMemory                               (proc_t proc, const on_NtFreeVirtualMemory_fn& on_func);
        opt<bpid_t> register_NtFreezeRegistry                                  (proc_t proc, const on_NtFreezeRegistry_fn& on_func);
        opt<bpid_t> register_NtFsControlFile                                   (proc_t proc, const on_NtFsControlFile_fn& on_func);
        opt<bpid_t> register_NtGetContextThread                                (proc_t proc, const on_NtGetContextThread_fn& on_func);
        opt<bpid_t> register_NtGetCurrentProcessorNumber                       (proc_t proc, const on_NtGetCurrentProcessorNumber_fn& on_func);
        opt<bpid_t> register_NtGetDevicePowerState                             (proc_t proc, const on_NtGetDevicePowerState_fn& on_func);
        opt<bpid_t> register_NtGetMUIRegistryInfo                              (proc_t proc, const on_NtGetMUIRegistryInfo_fn& on_func);
        opt<bpid_t> register_NtGetNlsSectionPtr                                (proc_t proc, const on_NtGetNlsSectionPtr_fn& on_func);
        opt<bpid_t> register_NtGetWriteWatch                                   (proc_t proc, const on_NtGetWriteWatch_fn& on_func);
        opt<bpid_t> register_NtImpersonateAnonymousToken                       (proc_t proc, const on_NtImpersonateAnonymousToken_fn& on_func);
        opt<bpid_t> register_NtInitializeNlsFiles                              (proc_t proc, const on_NtInitializeNlsFiles_fn& on_func);
        opt<bpid_t> register_NtInitiatePowerAction                             (proc_t proc, const on_NtInitiatePowerAction_fn& on_func);
        opt<bpid_t> register_NtIsSystemResumeAutomatic                         (proc_t proc, const on_NtIsSystemResumeAutomatic_fn& on_func);
        opt<bpid_t> register_NtLoadDriver                                      (proc_t proc, const on_NtLoadDriver_fn& on_func);
        opt<bpid_t> register_NtLoadKey                                         (proc_t proc, const on_NtLoadKey_fn& on_func);
        opt<bpid_t> register_NtLoadKey2                                        (proc_t proc, const on_NtLoadKey2_fn& on_func);
        opt<bpid_t> register_NtLoadKeyEx                                       (proc_t proc, const on_NtLoadKeyEx_fn& on_func);
        opt<bpid_t> register_NtLockFile                                        (proc_t proc, const on_NtLockFile_fn& on_func);
        opt<bpid_t> register_NtLockRegistryKey                                 (proc_t proc, const on_NtLockRegistryKey_fn& on_func);
        opt<bpid_t> register_NtMakeTemporaryObject                             (proc_t proc, const on_NtMakeTemporaryObject_fn& on_func);
        opt<bpid_t> register_NtMapUserPhysicalPages                            (proc_t proc, const on_NtMapUserPhysicalPages_fn& on_func);
        opt<bpid_t> register_NtModifyBootEntry                                 (proc_t proc, const on_NtModifyBootEntry_fn& on_func);
        opt<bpid_t> register_NtNotifyChangeDirectoryFile                       (proc_t proc, const on_NtNotifyChangeDirectoryFile_fn& on_func);
        opt<bpid_t> register_NtNotifyChangeKey                                 (proc_t proc, const on_NtNotifyChangeKey_fn& on_func);
        opt<bpid_t> register_NtNotifyChangeMultipleKeys                        (proc_t proc, const on_NtNotifyChangeMultipleKeys_fn& on_func);
        opt<bpid_t> register_NtNotifyChangeSession                             (proc_t proc, const on_NtNotifyChangeSession_fn& on_func);
        opt<bpid_t> register_NtOpenEvent                                       (proc_t proc, const on_NtOpenEvent_fn& on_func);
        opt<bpid_t> register_NtOpenEventPair                                   (proc_t proc, const on_NtOpenEventPair_fn& on_func);
        opt<bpid_t> register_NtOpenFile                                        (proc_t proc, const on_NtOpenFile_fn& on_func);
        opt<bpid_t> register_NtOpenKeyTransacted                               (proc_t proc, const on_NtOpenKeyTransacted_fn& on_func);
        opt<bpid_t> register_NtOpenKeyTransactedEx                             (proc_t proc, const on_NtOpenKeyTransactedEx_fn& on_func);
        opt<bpid_t> register_NtOpenKeyedEvent                                  (proc_t proc, const on_NtOpenKeyedEvent_fn& on_func);
        opt<bpid_t> register_NtOpenMutant                                      (proc_t proc, const on_NtOpenMutant_fn& on_func);
        opt<bpid_t> register_NtOpenPrivateNamespace                            (proc_t proc, const on_NtOpenPrivateNamespace_fn& on_func);
        opt<bpid_t> register_NtOpenSection                                     (proc_t proc, const on_NtOpenSection_fn& on_func);
        opt<bpid_t> register_NtOpenSemaphore                                   (proc_t proc, const on_NtOpenSemaphore_fn& on_func);
        opt<bpid_t> register_NtOpenSession                                     (proc_t proc, const on_NtOpenSession_fn& on_func);
        opt<bpid_t> register_NtOpenSymbolicLinkObject                          (proc_t proc, const on_NtOpenSymbolicLinkObject_fn& on_func);
        opt<bpid_t> register_NtOpenThreadToken                                 (proc_t proc, const on_NtOpenThreadToken_fn& on_func);
        opt<bpid_t> register_NtOpenThreadTokenEx                               (proc_t proc, const on_NtOpenThreadTokenEx_fn& on_func);
        opt<bpid_t> register_NtPlugPlayControl                                 (proc_t proc, const on_NtPlugPlayControl_fn& on_func);
        opt<bpid_t> register_NtPrePrepareEnlistment                            (proc_t proc, const on_NtPrePrepareEnlistment_fn& on_func);
        opt<bpid_t> register_NtPrepareComplete                                 (proc_t proc, const on_NtPrepareComplete_fn& on_func);
        opt<bpid_t> register_NtPrivilegedServiceAuditAlarm                     (proc_t proc, const on_NtPrivilegedServiceAuditAlarm_fn& on_func);
        opt<bpid_t> register_NtPropagationComplete                             (proc_t proc, const on_NtPropagationComplete_fn& on_func);
        opt<bpid_t> register_NtQueryDebugFilterState                           (proc_t proc, const on_NtQueryDebugFilterState_fn& on_func);
        opt<bpid_t> register_NtQueryDefaultLocale                              (proc_t proc, const on_NtQueryDefaultLocale_fn& on_func);
        opt<bpid_t> register_NtQueryDriverEntryOrder                           (proc_t proc, const on_NtQueryDriverEntryOrder_fn& on_func);
        opt<bpid_t> register_NtQueryEvent                                      (proc_t proc, const on_NtQueryEvent_fn& on_func);
        opt<bpid_t> register_NtQueryInformationAtom                            (proc_t proc, const on_NtQueryInformationAtom_fn& on_func);
        opt<bpid_t> register_NtQueryInformationThread                          (proc_t proc, const on_NtQueryInformationThread_fn& on_func);
        opt<bpid_t> register_NtQueryInformationTransactionManager              (proc_t proc, const on_NtQueryInformationTransactionManager_fn& on_func);
        opt<bpid_t> register_NtQueryInstallUILanguage                          (proc_t proc, const on_NtQueryInstallUILanguage_fn& on_func);
        opt<bpid_t> register_NtQueryIntervalProfile                            (proc_t proc, const on_NtQueryIntervalProfile_fn& on_func);
        opt<bpid_t> register_NtQueryIoCompletion                               (proc_t proc, const on_NtQueryIoCompletion_fn& on_func);
        opt<bpid_t> register_NtQueryLicenseValue                               (proc_t proc, const on_NtQueryLicenseValue_fn& on_func);
        opt<bpid_t> register_NtQueryMultipleValueKey                           (proc_t proc, const on_NtQueryMultipleValueKey_fn& on_func);
        opt<bpid_t> register_NtQueryMutant                                     (proc_t proc, const on_NtQueryMutant_fn& on_func);
        opt<bpid_t> register_NtQueryObject                                     (proc_t proc, const on_NtQueryObject_fn& on_func);
        opt<bpid_t> register_NtQueryOpenSubKeys                                (proc_t proc, const on_NtQueryOpenSubKeys_fn& on_func);
        opt<bpid_t> register_NtQueryOpenSubKeysEx                              (proc_t proc, const on_NtQueryOpenSubKeysEx_fn& on_func);
        opt<bpid_t> register_NtQueryPerformanceCounter                         (proc_t proc, const on_NtQueryPerformanceCounter_fn& on_func);
        opt<bpid_t> register_NtQuerySecurityObject                             (proc_t proc, const on_NtQuerySecurityObject_fn& on_func);
        opt<bpid_t> register_NtQuerySystemInformation                          (proc_t proc, const on_NtQuerySystemInformation_fn& on_func);
        opt<bpid_t> register_NtQuerySystemTime                                 (proc_t proc, const on_NtQuerySystemTime_fn& on_func);
        opt<bpid_t> register_NtQueryTimerResolution                            (proc_t proc, const on_NtQueryTimerResolution_fn& on_func);
        opt<bpid_t> register_NtQueryVirtualMemory                              (proc_t proc, const on_NtQueryVirtualMemory_fn& on_func);
        opt<bpid_t> register_NtQueryVolumeInformationFile                      (proc_t proc, const on_NtQueryVolumeInformationFile_fn& on_func);
        opt<bpid_t> register_NtQueueApcThread                                  (proc_t proc, const on_NtQueueApcThread_fn& on_func);
        opt<bpid_t> register_NtQueueApcThreadEx                                (proc_t proc, const on_NtQueueApcThreadEx_fn& on_func);
        opt<bpid_t> register_NtReadFile                                        (proc_t proc, const on_NtReadFile_fn& on_func);
        opt<bpid_t> register_NtReadFileScatter                                 (proc_t proc, const on_NtReadFileScatter_fn& on_func);
        opt<bpid_t> register_NtReadVirtualMemory                               (proc_t proc, const on_NtReadVirtualMemory_fn& on_func);
        opt<bpid_t> register_NtRecoverEnlistment                               (proc_t proc, const on_NtRecoverEnlistment_fn& on_func);
        opt<bpid_t> register_NtRecoverResourceManager                          (proc_t proc, const on_NtRecoverResourceManager_fn& on_func);
        opt<bpid_t> register_NtReleaseKeyedEvent                               (proc_t proc, const on_NtReleaseKeyedEvent_fn& on_func);
        opt<bpid_t> register_NtReleaseSemaphore                                (proc_t proc, const on_NtReleaseSemaphore_fn& on_func);
        opt<bpid_t> register_NtRenameTransactionManager                        (proc_t proc, const on_NtRenameTransactionManager_fn& on_func);
        opt<bpid_t> register_NtReplacePartitionUnit                            (proc_t proc, const on_NtReplacePartitionUnit_fn& on_func);
        opt<bpid_t> register_NtReplyWaitReceivePort                            (proc_t proc, const on_NtReplyWaitReceivePort_fn& on_func);
        opt<bpid_t> register_NtReplyWaitReceivePortEx                          (proc_t proc, const on_NtReplyWaitReceivePortEx_fn& on_func);
        opt<bpid_t> register_NtReplyWaitReplyPort                              (proc_t proc, const on_NtReplyWaitReplyPort_fn& on_func);
        opt<bpid_t> register_NtRequestWaitReplyPort                            (proc_t proc, const on_NtRequestWaitReplyPort_fn& on_func);
        opt<bpid_t> register_NtResetEvent                                      (proc_t proc, const on_NtResetEvent_fn& on_func);
        opt<bpid_t> register_NtRestoreKey                                      (proc_t proc, const on_NtRestoreKey_fn& on_func);
        opt<bpid_t> register_NtRollbackEnlistment                              (proc_t proc, const on_NtRollbackEnlistment_fn& on_func);
        opt<bpid_t> register_NtRollbackTransaction                             (proc_t proc, const on_NtRollbackTransaction_fn& on_func);
        opt<bpid_t> register_NtRollforwardTransactionManager                   (proc_t proc, const on_NtRollforwardTransactionManager_fn& on_func);
        opt<bpid_t> register_NtSaveKey                                         (proc_t proc, const on_NtSaveKey_fn& on_func);
        opt<bpid_t> register_NtSaveKeyEx                                       (proc_t proc, const on_NtSaveKeyEx_fn& on_func);
        opt<bpid_t> register_NtSaveMergedKeys                                  (proc_t proc, const on_NtSaveMergedKeys_fn& on_func);
        opt<bpid_t> register_NtSecureConnectPort                               (proc_t proc, const on_NtSecureConnectPort_fn& on_func);
        opt<bpid_t> register_NtSerializeBoot                                   (proc_t proc, const on_NtSerializeBoot_fn& on_func);
        opt<bpid_t> register_NtSetDebugFilterState                             (proc_t proc, const on_NtSetDebugFilterState_fn& on_func);
        opt<bpid_t> register_NtSetDefaultHardErrorPort                         (proc_t proc, const on_NtSetDefaultHardErrorPort_fn& on_func);
        opt<bpid_t> register_NtSetDefaultLocale                                (proc_t proc, const on_NtSetDefaultLocale_fn& on_func);
        opt<bpid_t> register_NtSetDriverEntryOrder                             (proc_t proc, const on_NtSetDriverEntryOrder_fn& on_func);
        opt<bpid_t> register_NtSetEvent                                        (proc_t proc, const on_NtSetEvent_fn& on_func);
        opt<bpid_t> register_NtSetEventBoostPriority                           (proc_t proc, const on_NtSetEventBoostPriority_fn& on_func);
        opt<bpid_t> register_NtSetHighEventPair                                (proc_t proc, const on_NtSetHighEventPair_fn& on_func);
        opt<bpid_t> register_NtSetHighWaitLowEventPair                         (proc_t proc, const on_NtSetHighWaitLowEventPair_fn& on_func);
        opt<bpid_t> register_NtSetInformationEnlistment                        (proc_t proc, const on_NtSetInformationEnlistment_fn& on_func);
        opt<bpid_t> register_NtSetIntervalProfile                              (proc_t proc, const on_NtSetIntervalProfile_fn& on_func);
        opt<bpid_t> register_NtSetIoCompletion                                 (proc_t proc, const on_NtSetIoCompletion_fn& on_func);
        opt<bpid_t> register_NtSetIoCompletionEx                               (proc_t proc, const on_NtSetIoCompletionEx_fn& on_func);
        opt<bpid_t> register_NtSetSecurityObject                               (proc_t proc, const on_NtSetSecurityObject_fn& on_func);
        opt<bpid_t> register_NtSetTimerResolution                              (proc_t proc, const on_NtSetTimerResolution_fn& on_func);
        opt<bpid_t> register_NtSetVolumeInformationFile                        (proc_t proc, const on_NtSetVolumeInformationFile_fn& on_func);
        opt<bpid_t> register_NtShutdownWorkerFactory                           (proc_t proc, const on_NtShutdownWorkerFactory_fn& on_func);
        opt<bpid_t> register_NtStartProfile                                    (proc_t proc, const on_NtStartProfile_fn& on_func);
        opt<bpid_t> register_NtSystemDebugControl                              (proc_t proc, const on_NtSystemDebugControl_fn& on_func);
        opt<bpid_t> register_NtTestAlert                                       (proc_t proc, const on_NtTestAlert_fn& on_func);
        opt<bpid_t> register_NtThawTransactions                                (proc_t proc, const on_NtThawTransactions_fn& on_func);
        opt<bpid_t> register_NtTraceEvent                                      (proc_t proc, const on_NtTraceEvent_fn& on_func);
        opt<bpid_t> register_NtTranslateFilePath                               (proc_t proc, const on_NtTranslateFilePath_fn& on_func);
        opt<bpid_t> register_NtUnloadKey                                       (proc_t proc, const on_NtUnloadKey_fn& on_func);
        opt<bpid_t> register_NtUnlockVirtualMemory                             (proc_t proc, const on_NtUnlockVirtualMemory_fn& on_func);
        opt<bpid_t> register_NtUnmapViewOfSection                              (proc_t proc, const on_NtUnmapViewOfSection_fn& on_func);
        opt<bpid_t> register_NtVdmControl                                      (proc_t proc, const on_NtVdmControl_fn& on_func);
        opt<bpid_t> register_NtWaitForDebugEvent                               (proc_t proc, const on_NtWaitForDebugEvent_fn& on_func);
        opt<bpid_t> register_NtWaitForKeyedEvent                               (proc_t proc, const on_NtWaitForKeyedEvent_fn& on_func);
        opt<bpid_t> register_NtWaitForMultipleObjects                          (proc_t proc, const on_NtWaitForMultipleObjects_fn& on_func);
        opt<bpid_t> register_NtWaitForMultipleObjects32                        (proc_t proc, const on_NtWaitForMultipleObjects32_fn& on_func);
        opt<bpid_t> register_NtWaitForWorkViaWorkerFactory                     (proc_t proc, const on_NtWaitForWorkViaWorkerFactory_fn& on_func);
        opt<bpid_t> register_NtWaitLowEventPair                                (proc_t proc, const on_NtWaitLowEventPair_fn& on_func);
        opt<bpid_t> register_NtWorkerFactoryWorkerReady                        (proc_t proc, const on_NtWorkerFactoryWorkerReady_fn& on_func);
        opt<bpid_t> register_NtWriteFile                                       (proc_t proc, const on_NtWriteFile_fn& on_func);
        opt<bpid_t> register_NtWriteFileGather                                 (proc_t proc, const on_NtWriteFileGather_fn& on_func);
        opt<bpid_t> register_NtWriteRequestData                                (proc_t proc, const on_NtWriteRequestData_fn& on_func);
        opt<bpid_t> register_NtWriteVirtualMemory                              (proc_t proc, const on_NtWriteVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwAccessCheckAndAuditAlarm                        (proc_t proc, const on_ZwAccessCheckAndAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwAccessCheckByTypeResultListAndAuditAlarmByHandle(proc_t proc, const on_ZwAccessCheckByTypeResultListAndAuditAlarmByHandle_fn& on_func);
        opt<bpid_t> register_ZwAddBootEntry                                    (proc_t proc, const on_ZwAddBootEntry_fn& on_func);
        opt<bpid_t> register_ZwAdjustGroupsToken                               (proc_t proc, const on_ZwAdjustGroupsToken_fn& on_func);
        opt<bpid_t> register_ZwAdjustPrivilegesToken                           (proc_t proc, const on_ZwAdjustPrivilegesToken_fn& on_func);
        opt<bpid_t> register_ZwAllocateLocallyUniqueId                         (proc_t proc, const on_ZwAllocateLocallyUniqueId_fn& on_func);
        opt<bpid_t> register_ZwAlpcCancelMessage                               (proc_t proc, const on_ZwAlpcCancelMessage_fn& on_func);
        opt<bpid_t> register_ZwAlpcConnectPort                                 (proc_t proc, const on_ZwAlpcConnectPort_fn& on_func);
        opt<bpid_t> register_ZwAlpcCreatePort                                  (proc_t proc, const on_ZwAlpcCreatePort_fn& on_func);
        opt<bpid_t> register_ZwAlpcCreateResourceReserve                       (proc_t proc, const on_ZwAlpcCreateResourceReserve_fn& on_func);
        opt<bpid_t> register_ZwAlpcCreateSectionView                           (proc_t proc, const on_ZwAlpcCreateSectionView_fn& on_func);
        opt<bpid_t> register_ZwAlpcCreateSecurityContext                       (proc_t proc, const on_ZwAlpcCreateSecurityContext_fn& on_func);
        opt<bpid_t> register_ZwAlpcDeletePortSection                           (proc_t proc, const on_ZwAlpcDeletePortSection_fn& on_func);
        opt<bpid_t> register_ZwAlpcImpersonateClientOfPort                     (proc_t proc, const on_ZwAlpcImpersonateClientOfPort_fn& on_func);
        opt<bpid_t> register_ZwAlpcOpenSenderProcess                           (proc_t proc, const on_ZwAlpcOpenSenderProcess_fn& on_func);
        opt<bpid_t> register_ZwAlpcOpenSenderThread                            (proc_t proc, const on_ZwAlpcOpenSenderThread_fn& on_func);
        opt<bpid_t> register_ZwAlpcQueryInformation                            (proc_t proc, const on_ZwAlpcQueryInformation_fn& on_func);
        opt<bpid_t> register_ZwAlpcQueryInformationMessage                     (proc_t proc, const on_ZwAlpcQueryInformationMessage_fn& on_func);
        opt<bpid_t> register_ZwAreMappedFilesTheSame                           (proc_t proc, const on_ZwAreMappedFilesTheSame_fn& on_func);
        opt<bpid_t> register_ZwAssignProcessToJobObject                        (proc_t proc, const on_ZwAssignProcessToJobObject_fn& on_func);
        opt<bpid_t> register_ZwCancelIoFile                                    (proc_t proc, const on_ZwCancelIoFile_fn& on_func);
        opt<bpid_t> register_ZwCancelTimer                                     (proc_t proc, const on_ZwCancelTimer_fn& on_func);
        opt<bpid_t> register_ZwCloseObjectAuditAlarm                           (proc_t proc, const on_ZwCloseObjectAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwCommitComplete                                  (proc_t proc, const on_ZwCommitComplete_fn& on_func);
        opt<bpid_t> register_ZwCompareTokens                                   (proc_t proc, const on_ZwCompareTokens_fn& on_func);
        opt<bpid_t> register_ZwCompressKey                                     (proc_t proc, const on_ZwCompressKey_fn& on_func);
        opt<bpid_t> register_ZwContinue                                        (proc_t proc, const on_ZwContinue_fn& on_func);
        opt<bpid_t> register_ZwCreateDebugObject                               (proc_t proc, const on_ZwCreateDebugObject_fn& on_func);
        opt<bpid_t> register_ZwCreateDirectoryObject                           (proc_t proc, const on_ZwCreateDirectoryObject_fn& on_func);
        opt<bpid_t> register_ZwCreateEnlistment                                (proc_t proc, const on_ZwCreateEnlistment_fn& on_func);
        opt<bpid_t> register_ZwCreateJobObject                                 (proc_t proc, const on_ZwCreateJobObject_fn& on_func);
        opt<bpid_t> register_ZwCreateKey                                       (proc_t proc, const on_ZwCreateKey_fn& on_func);
        opt<bpid_t> register_ZwCreateKeyedEvent                                (proc_t proc, const on_ZwCreateKeyedEvent_fn& on_func);
        opt<bpid_t> register_ZwCreateMailslotFile                              (proc_t proc, const on_ZwCreateMailslotFile_fn& on_func);
        opt<bpid_t> register_ZwCreateMutant                                    (proc_t proc, const on_ZwCreateMutant_fn& on_func);
        opt<bpid_t> register_ZwCreateNamedPipeFile                             (proc_t proc, const on_ZwCreateNamedPipeFile_fn& on_func);
        opt<bpid_t> register_ZwCreatePort                                      (proc_t proc, const on_ZwCreatePort_fn& on_func);
        opt<bpid_t> register_ZwCreateProcess                                   (proc_t proc, const on_ZwCreateProcess_fn& on_func);
        opt<bpid_t> register_ZwCreateProcessEx                                 (proc_t proc, const on_ZwCreateProcessEx_fn& on_func);
        opt<bpid_t> register_ZwCreateProfile                                   (proc_t proc, const on_ZwCreateProfile_fn& on_func);
        opt<bpid_t> register_ZwCreateResourceManager                           (proc_t proc, const on_ZwCreateResourceManager_fn& on_func);
        opt<bpid_t> register_ZwCreateSymbolicLinkObject                        (proc_t proc, const on_ZwCreateSymbolicLinkObject_fn& on_func);
        opt<bpid_t> register_ZwCreateTimer                                     (proc_t proc, const on_ZwCreateTimer_fn& on_func);
        opt<bpid_t> register_ZwCreateTransactionManager                        (proc_t proc, const on_ZwCreateTransactionManager_fn& on_func);
        opt<bpid_t> register_ZwCreateWaitablePort                              (proc_t proc, const on_ZwCreateWaitablePort_fn& on_func);
        opt<bpid_t> register_ZwDebugContinue                                   (proc_t proc, const on_ZwDebugContinue_fn& on_func);
        opt<bpid_t> register_ZwDelayExecution                                  (proc_t proc, const on_ZwDelayExecution_fn& on_func);
        opt<bpid_t> register_ZwDeleteAtom                                      (proc_t proc, const on_ZwDeleteAtom_fn& on_func);
        opt<bpid_t> register_ZwDeleteDriverEntry                               (proc_t proc, const on_ZwDeleteDriverEntry_fn& on_func);
        opt<bpid_t> register_ZwDeleteKey                                       (proc_t proc, const on_ZwDeleteKey_fn& on_func);
        opt<bpid_t> register_ZwDeviceIoControlFile                             (proc_t proc, const on_ZwDeviceIoControlFile_fn& on_func);
        opt<bpid_t> register_ZwDrawText                                        (proc_t proc, const on_ZwDrawText_fn& on_func);
        opt<bpid_t> register_ZwDuplicateObject                                 (proc_t proc, const on_ZwDuplicateObject_fn& on_func);
        opt<bpid_t> register_ZwEnumerateBootEntries                            (proc_t proc, const on_ZwEnumerateBootEntries_fn& on_func);
        opt<bpid_t> register_ZwEnumerateKey                                    (proc_t proc, const on_ZwEnumerateKey_fn& on_func);
        opt<bpid_t> register_ZwEnumerateSystemEnvironmentValuesEx              (proc_t proc, const on_ZwEnumerateSystemEnvironmentValuesEx_fn& on_func);
        opt<bpid_t> register_ZwEnumerateTransactionObject                      (proc_t proc, const on_ZwEnumerateTransactionObject_fn& on_func);
        opt<bpid_t> register_ZwExtendSection                                   (proc_t proc, const on_ZwExtendSection_fn& on_func);
        opt<bpid_t> register_ZwFlushBuffersFile                                (proc_t proc, const on_ZwFlushBuffersFile_fn& on_func);
        opt<bpid_t> register_ZwFlushInstallUILanguage                          (proc_t proc, const on_ZwFlushInstallUILanguage_fn& on_func);
        opt<bpid_t> register_ZwFlushInstructionCache                           (proc_t proc, const on_ZwFlushInstructionCache_fn& on_func);
        opt<bpid_t> register_ZwFlushProcessWriteBuffers                        (proc_t proc, const on_ZwFlushProcessWriteBuffers_fn& on_func);
        opt<bpid_t> register_ZwFlushVirtualMemory                              (proc_t proc, const on_ZwFlushVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwFreezeTransactions                              (proc_t proc, const on_ZwFreezeTransactions_fn& on_func);
        opt<bpid_t> register_ZwGetNextProcess                                  (proc_t proc, const on_ZwGetNextProcess_fn& on_func);
        opt<bpid_t> register_ZwGetNextThread                                   (proc_t proc, const on_ZwGetNextThread_fn& on_func);
        opt<bpid_t> register_ZwGetNotificationResourceManager                  (proc_t proc, const on_ZwGetNotificationResourceManager_fn& on_func);
        opt<bpid_t> register_ZwImpersonateClientOfPort                         (proc_t proc, const on_ZwImpersonateClientOfPort_fn& on_func);
        opt<bpid_t> register_ZwImpersonateThread                               (proc_t proc, const on_ZwImpersonateThread_fn& on_func);
        opt<bpid_t> register_ZwInitializeRegistry                              (proc_t proc, const on_ZwInitializeRegistry_fn& on_func);
        opt<bpid_t> register_ZwIsProcessInJob                                  (proc_t proc, const on_ZwIsProcessInJob_fn& on_func);
        opt<bpid_t> register_ZwIsUILanguageComitted                            (proc_t proc, const on_ZwIsUILanguageComitted_fn& on_func);
        opt<bpid_t> register_ZwListenPort                                      (proc_t proc, const on_ZwListenPort_fn& on_func);
        opt<bpid_t> register_ZwLockProductActivationKeys                       (proc_t proc, const on_ZwLockProductActivationKeys_fn& on_func);
        opt<bpid_t> register_ZwLockVirtualMemory                               (proc_t proc, const on_ZwLockVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwMakePermanentObject                             (proc_t proc, const on_ZwMakePermanentObject_fn& on_func);
        opt<bpid_t> register_ZwMapCMFModule                                    (proc_t proc, const on_ZwMapCMFModule_fn& on_func);
        opt<bpid_t> register_ZwMapUserPhysicalPagesScatter                     (proc_t proc, const on_ZwMapUserPhysicalPagesScatter_fn& on_func);
        opt<bpid_t> register_ZwMapViewOfSection                                (proc_t proc, const on_ZwMapViewOfSection_fn& on_func);
        opt<bpid_t> register_ZwModifyDriverEntry                               (proc_t proc, const on_ZwModifyDriverEntry_fn& on_func);
        opt<bpid_t> register_ZwOpenDirectoryObject                             (proc_t proc, const on_ZwOpenDirectoryObject_fn& on_func);
        opt<bpid_t> register_ZwOpenEnlistment                                  (proc_t proc, const on_ZwOpenEnlistment_fn& on_func);
        opt<bpid_t> register_ZwOpenIoCompletion                                (proc_t proc, const on_ZwOpenIoCompletion_fn& on_func);
        opt<bpid_t> register_ZwOpenJobObject                                   (proc_t proc, const on_ZwOpenJobObject_fn& on_func);
        opt<bpid_t> register_ZwOpenKey                                         (proc_t proc, const on_ZwOpenKey_fn& on_func);
        opt<bpid_t> register_ZwOpenKeyEx                                       (proc_t proc, const on_ZwOpenKeyEx_fn& on_func);
        opt<bpid_t> register_ZwOpenObjectAuditAlarm                            (proc_t proc, const on_ZwOpenObjectAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwOpenProcess                                     (proc_t proc, const on_ZwOpenProcess_fn& on_func);
        opt<bpid_t> register_ZwOpenProcessToken                                (proc_t proc, const on_ZwOpenProcessToken_fn& on_func);
        opt<bpid_t> register_ZwOpenProcessTokenEx                              (proc_t proc, const on_ZwOpenProcessTokenEx_fn& on_func);
        opt<bpid_t> register_ZwOpenResourceManager                             (proc_t proc, const on_ZwOpenResourceManager_fn& on_func);
        opt<bpid_t> register_ZwOpenThread                                      (proc_t proc, const on_ZwOpenThread_fn& on_func);
        opt<bpid_t> register_ZwOpenTimer                                       (proc_t proc, const on_ZwOpenTimer_fn& on_func);
        opt<bpid_t> register_ZwOpenTransaction                                 (proc_t proc, const on_ZwOpenTransaction_fn& on_func);
        opt<bpid_t> register_ZwOpenTransactionManager                          (proc_t proc, const on_ZwOpenTransactionManager_fn& on_func);
        opt<bpid_t> register_ZwPowerInformation                                (proc_t proc, const on_ZwPowerInformation_fn& on_func);
        opt<bpid_t> register_ZwPrePrepareComplete                              (proc_t proc, const on_ZwPrePrepareComplete_fn& on_func);
        opt<bpid_t> register_ZwPrepareEnlistment                               (proc_t proc, const on_ZwPrepareEnlistment_fn& on_func);
        opt<bpid_t> register_ZwPrivilegeCheck                                  (proc_t proc, const on_ZwPrivilegeCheck_fn& on_func);
        opt<bpid_t> register_ZwPrivilegeObjectAuditAlarm                       (proc_t proc, const on_ZwPrivilegeObjectAuditAlarm_fn& on_func);
        opt<bpid_t> register_ZwPropagationFailed                               (proc_t proc, const on_ZwPropagationFailed_fn& on_func);
        opt<bpid_t> register_ZwProtectVirtualMemory                            (proc_t proc, const on_ZwProtectVirtualMemory_fn& on_func);
        opt<bpid_t> register_ZwPulseEvent                                      (proc_t proc, const on_ZwPulseEvent_fn& on_func);
        opt<bpid_t> register_ZwQueryAttributesFile                             (proc_t proc, const on_ZwQueryAttributesFile_fn& on_func);
        opt<bpid_t> register_ZwQueryBootEntryOrder                             (proc_t proc, const on_ZwQueryBootEntryOrder_fn& on_func);
        opt<bpid_t> register_ZwQueryBootOptions                                (proc_t proc, const on_ZwQueryBootOptions_fn& on_func);
        opt<bpid_t> register_ZwQueryDefaultUILanguage                          (proc_t proc, const on_ZwQueryDefaultUILanguage_fn& on_func);
        opt<bpid_t> register_ZwQueryDirectoryFile                              (proc_t proc, const on_ZwQueryDirectoryFile_fn& on_func);
        opt<bpid_t> register_ZwQueryDirectoryObject                            (proc_t proc, const on_ZwQueryDirectoryObject_fn& on_func);
        opt<bpid_t> register_ZwQueryEaFile                                     (proc_t proc, const on_ZwQueryEaFile_fn& on_func);
        opt<bpid_t> register_ZwQueryFullAttributesFile                         (proc_t proc, const on_ZwQueryFullAttributesFile_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationEnlistment                      (proc_t proc, const on_ZwQueryInformationEnlistment_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationFile                            (proc_t proc, const on_ZwQueryInformationFile_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationJobObject                       (proc_t proc, const on_ZwQueryInformationJobObject_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationPort                            (proc_t proc, const on_ZwQueryInformationPort_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationProcess                         (proc_t proc, const on_ZwQueryInformationProcess_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationResourceManager                 (proc_t proc, const on_ZwQueryInformationResourceManager_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationToken                           (proc_t proc, const on_ZwQueryInformationToken_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationTransaction                     (proc_t proc, const on_ZwQueryInformationTransaction_fn& on_func);
        opt<bpid_t> register_ZwQueryInformationWorkerFactory                   (proc_t proc, const on_ZwQueryInformationWorkerFactory_fn& on_func);
        opt<bpid_t> register_ZwQueryKey                                        (proc_t proc, const on_ZwQueryKey_fn& on_func);
        opt<bpid_t> register_ZwQueryPortInformationProcess                     (proc_t proc, const on_ZwQueryPortInformationProcess_fn& on_func);
        opt<bpid_t> register_ZwQueryQuotaInformationFile                       (proc_t proc, const on_ZwQueryQuotaInformationFile_fn& on_func);
        opt<bpid_t> register_ZwQuerySection                                    (proc_t proc, const on_ZwQuerySection_fn& on_func);
        opt<bpid_t> register_ZwQuerySecurityAttributesToken                    (proc_t proc, const on_ZwQuerySecurityAttributesToken_fn& on_func);
        opt<bpid_t> register_ZwQuerySemaphore                                  (proc_t proc, const on_ZwQuerySemaphore_fn& on_func);
        opt<bpid_t> register_ZwQuerySymbolicLinkObject                         (proc_t proc, const on_ZwQuerySymbolicLinkObject_fn& on_func);
        opt<bpid_t> register_ZwQuerySystemEnvironmentValue                     (proc_t proc, const on_ZwQuerySystemEnvironmentValue_fn& on_func);
        opt<bpid_t> register_ZwQuerySystemEnvironmentValueEx                   (proc_t proc, const on_ZwQuerySystemEnvironmentValueEx_fn& on_func);
        opt<bpid_t> register_ZwQuerySystemInformationEx                        (proc_t proc, const on_ZwQuerySystemInformationEx_fn& on_func);
        opt<bpid_t> register_ZwQueryTimer                                      (proc_t proc, const on_ZwQueryTimer_fn& on_func);
        opt<bpid_t> register_ZwQueryValueKey                                   (proc_t proc, const on_ZwQueryValueKey_fn& on_func);
        opt<bpid_t> register_ZwRaiseException                                  (proc_t proc, const on_ZwRaiseException_fn& on_func);
        opt<bpid_t> register_ZwRaiseHardError                                  (proc_t proc, const on_ZwRaiseHardError_fn& on_func);
        opt<bpid_t> register_ZwReadOnlyEnlistment                              (proc_t proc, const on_ZwReadOnlyEnlistment_fn& on_func);
        opt<bpid_t> register_ZwReadRequestData                                 (proc_t proc, const on_ZwReadRequestData_fn& on_func);
        opt<bpid_t> register_ZwRecoverTransactionManager                       (proc_t proc, const on_ZwRecoverTransactionManager_fn& on_func);
        opt<bpid_t> register_ZwRegisterProtocolAddressInformation              (proc_t proc, const on_ZwRegisterProtocolAddressInformation_fn& on_func);
        opt<bpid_t> register_ZwRegisterThreadTerminatePort                     (proc_t proc, const on_ZwRegisterThreadTerminatePort_fn& on_func);
        opt<bpid_t> register_ZwReleaseMutant                                   (proc_t proc, const on_ZwReleaseMutant_fn& on_func);
        opt<bpid_t> register_ZwReleaseWorkerFactoryWorker                      (proc_t proc, const on_ZwReleaseWorkerFactoryWorker_fn& on_func);
        opt<bpid_t> register_ZwRemoveIoCompletion                              (proc_t proc, const on_ZwRemoveIoCompletion_fn& on_func);
        opt<bpid_t> register_ZwRemoveIoCompletionEx                            (proc_t proc, const on_ZwRemoveIoCompletionEx_fn& on_func);
        opt<bpid_t> register_ZwRemoveProcessDebug                              (proc_t proc, const on_ZwRemoveProcessDebug_fn& on_func);
        opt<bpid_t> register_ZwRenameKey                                       (proc_t proc, const on_ZwRenameKey_fn& on_func);
        opt<bpid_t> register_ZwReplaceKey                                      (proc_t proc, const on_ZwReplaceKey_fn& on_func);
        opt<bpid_t> register_ZwReplyPort                                       (proc_t proc, const on_ZwReplyPort_fn& on_func);
        opt<bpid_t> register_ZwRequestPort                                     (proc_t proc, const on_ZwRequestPort_fn& on_func);
        opt<bpid_t> register_ZwResetWriteWatch                                 (proc_t proc, const on_ZwResetWriteWatch_fn& on_func);
        opt<bpid_t> register_ZwResumeProcess                                   (proc_t proc, const on_ZwResumeProcess_fn& on_func);
        opt<bpid_t> register_ZwResumeThread                                    (proc_t proc, const on_ZwResumeThread_fn& on_func);
        opt<bpid_t> register_ZwRollbackComplete                                (proc_t proc, const on_ZwRollbackComplete_fn& on_func);
        opt<bpid_t> register_ZwSetBootEntryOrder                               (proc_t proc, const on_ZwSetBootEntryOrder_fn& on_func);
        opt<bpid_t> register_ZwSetBootOptions                                  (proc_t proc, const on_ZwSetBootOptions_fn& on_func);
        opt<bpid_t> register_ZwSetContextThread                                (proc_t proc, const on_ZwSetContextThread_fn& on_func);
        opt<bpid_t> register_ZwSetDefaultUILanguage                            (proc_t proc, const on_ZwSetDefaultUILanguage_fn& on_func);
        opt<bpid_t> register_ZwSetEaFile                                       (proc_t proc, const on_ZwSetEaFile_fn& on_func);
        opt<bpid_t> register_ZwSetInformationDebugObject                       (proc_t proc, const on_ZwSetInformationDebugObject_fn& on_func);
        opt<bpid_t> register_ZwSetInformationFile                              (proc_t proc, const on_ZwSetInformationFile_fn& on_func);
        opt<bpid_t> register_ZwSetInformationJobObject                         (proc_t proc, const on_ZwSetInformationJobObject_fn& on_func);
        opt<bpid_t> register_ZwSetInformationKey                               (proc_t proc, const on_ZwSetInformationKey_fn& on_func);
        opt<bpid_t> register_ZwSetInformationObject                            (proc_t proc, const on_ZwSetInformationObject_fn& on_func);
        opt<bpid_t> register_ZwSetInformationProcess                           (proc_t proc, const on_ZwSetInformationProcess_fn& on_func);
        opt<bpid_t> register_ZwSetInformationResourceManager                   (proc_t proc, const on_ZwSetInformationResourceManager_fn& on_func);
        opt<bpid_t> register_ZwSetInformationThread                            (proc_t proc, const on_ZwSetInformationThread_fn& on_func);
        opt<bpid_t> register_ZwSetInformationToken                             (proc_t proc, const on_ZwSetInformationToken_fn& on_func);
        opt<bpid_t> register_ZwSetInformationTransaction                       (proc_t proc, const on_ZwSetInformationTransaction_fn& on_func);
        opt<bpid_t> register_ZwSetInformationTransactionManager                (proc_t proc, const on_ZwSetInformationTransactionManager_fn& on_func);
        opt<bpid_t> register_ZwSetInformationWorkerFactory                     (proc_t proc, const on_ZwSetInformationWorkerFactory_fn& on_func);
        opt<bpid_t> register_ZwSetLdtEntries                                   (proc_t proc, const on_ZwSetLdtEntries_fn& on_func);
        opt<bpid_t> register_ZwSetLowEventPair                                 (proc_t proc, const on_ZwSetLowEventPair_fn& on_func);
        opt<bpid_t> register_ZwSetLowWaitHighEventPair                         (proc_t proc, const on_ZwSetLowWaitHighEventPair_fn& on_func);
        opt<bpid_t> register_ZwSetQuotaInformationFile                         (proc_t proc, const on_ZwSetQuotaInformationFile_fn& on_func);
        opt<bpid_t> register_ZwSetSystemEnvironmentValue                       (proc_t proc, const on_ZwSetSystemEnvironmentValue_fn& on_func);
        opt<bpid_t> register_ZwSetSystemEnvironmentValueEx                     (proc_t proc, const on_ZwSetSystemEnvironmentValueEx_fn& on_func);
        opt<bpid_t> register_ZwSetSystemInformation                            (proc_t proc, const on_ZwSetSystemInformation_fn& on_func);
        opt<bpid_t> register_ZwSetSystemPowerState                             (proc_t proc, const on_ZwSetSystemPowerState_fn& on_func);
        opt<bpid_t> register_ZwSetSystemTime                                   (proc_t proc, const on_ZwSetSystemTime_fn& on_func);
        opt<bpid_t> register_ZwSetThreadExecutionState                         (proc_t proc, const on_ZwSetThreadExecutionState_fn& on_func);
        opt<bpid_t> register_ZwSetTimer                                        (proc_t proc, const on_ZwSetTimer_fn& on_func);
        opt<bpid_t> register_ZwSetTimerEx                                      (proc_t proc, const on_ZwSetTimerEx_fn& on_func);
        opt<bpid_t> register_ZwSetUuidSeed                                     (proc_t proc, const on_ZwSetUuidSeed_fn& on_func);
        opt<bpid_t> register_ZwSetValueKey                                     (proc_t proc, const on_ZwSetValueKey_fn& on_func);
        opt<bpid_t> register_ZwShutdownSystem                                  (proc_t proc, const on_ZwShutdownSystem_fn& on_func);
        opt<bpid_t> register_ZwSignalAndWaitForSingleObject                    (proc_t proc, const on_ZwSignalAndWaitForSingleObject_fn& on_func);
        opt<bpid_t> register_ZwSinglePhaseReject                               (proc_t proc, const on_ZwSinglePhaseReject_fn& on_func);
        opt<bpid_t> register_ZwStopProfile                                     (proc_t proc, const on_ZwStopProfile_fn& on_func);
        opt<bpid_t> register_ZwSuspendProcess                                  (proc_t proc, const on_ZwSuspendProcess_fn& on_func);
        opt<bpid_t> register_ZwSuspendThread                                   (proc_t proc, const on_ZwSuspendThread_fn& on_func);
        opt<bpid_t> register_ZwTerminateJobObject                              (proc_t proc, const on_ZwTerminateJobObject_fn& on_func);
        opt<bpid_t> register_ZwTerminateProcess                                (proc_t proc, const on_ZwTerminateProcess_fn& on_func);
        opt<bpid_t> register_ZwTerminateThread                                 (proc_t proc, const on_ZwTerminateThread_fn& on_func);
        opt<bpid_t> register_ZwThawRegistry                                    (proc_t proc, const on_ZwThawRegistry_fn& on_func);
        opt<bpid_t> register_ZwTraceControl                                    (proc_t proc, const on_ZwTraceControl_fn& on_func);
        opt<bpid_t> register_ZwUmsThreadYield                                  (proc_t proc, const on_ZwUmsThreadYield_fn& on_func);
        opt<bpid_t> register_ZwUnloadDriver                                    (proc_t proc, const on_ZwUnloadDriver_fn& on_func);
        opt<bpid_t> register_ZwUnloadKey2                                      (proc_t proc, const on_ZwUnloadKey2_fn& on_func);
        opt<bpid_t> register_ZwUnloadKeyEx                                     (proc_t proc, const on_ZwUnloadKeyEx_fn& on_func);
        opt<bpid_t> register_ZwUnlockFile                                      (proc_t proc, const on_ZwUnlockFile_fn& on_func);
        opt<bpid_t> register_ZwWaitForSingleObject                             (proc_t proc, const on_ZwWaitForSingleObject_fn& on_func);
        opt<bpid_t> register_ZwWaitHighEventPair                               (proc_t proc, const on_ZwWaitHighEventPair_fn& on_func);
        opt<bpid_t> register_ZwYieldExecution                                  (proc_t proc, const on_ZwYieldExecution_fn& on_func);

        struct Data;
        std::unique_ptr<Data> d_;
    };
} // namespace wow64
